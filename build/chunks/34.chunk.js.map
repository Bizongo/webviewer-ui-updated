{"version":3,"sources":["webpack:///./src/components/SignaturePanel/SignatureIcon/SignatureIcon.js","webpack:///./src/components/SignaturePanel/SignatureIcon/index.js","webpack:///./src/components/SignaturePanel/Spinner/Spinner.scss?ea6d","webpack:///./src/components/SignaturePanel/Spinner/Spinner.scss","webpack:///./src/components/SignaturePanel/SignatureIcon/SignatureIcon.scss?0f0b","webpack:///./src/components/SignaturePanel/SignatureIcon/SignatureIcon.scss","webpack:///./src/components/SignaturePanel/WidgetInfo/WidgetInfo.scss?5b5b","webpack:///./src/components/SignaturePanel/WidgetInfo/WidgetInfo.scss","webpack:///./src/components/SignaturePanel/SignaturePanel.scss?8ae9","webpack:///./src/components/SignaturePanel/SignaturePanel.scss","webpack:///./src/helpers/setVerificationResult.js","webpack:///./src/components/SignaturePanel/Spinner/index.js","webpack:///./src/components/SignaturePanel/WidgetLocator/WidgetLocator.js","webpack:///./src/components/SignaturePanel/WidgetLocator/index.js","webpack:///./src/components/SignaturePanel/WidgetInfo/WidgetInfo.js","webpack:///./src/components/SignaturePanel/WidgetInfo/index.js","webpack:///./src/components/SignaturePanel/SignaturePanel.js","webpack:///./src/components/SignaturePanel/index.js","webpack:///./src/components/SignatureValidationModal/SignatureValidationModal.scss?b31c","webpack:///./src/components/SignatureValidationModal/SignatureValidationModal.scss","webpack:///./src/components/SignatureValidationModal/SignatureValidationModal.js","webpack:///./src/components/SignatureValidationModal/index.js"],"names":["propTypes","badge","PropTypes","string","size","SignatureIcon","_ref","_ref$size","React","createElement","className","Icon","glyph","concat","api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","___CSS_LOADER_API_IMPORT___","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_callee","doc","certificates","trustLists","currentLanguage","revocationChecking","revocationProxyPrefix","dispatch","verificationResult","_context","getVerificationResult","actions","setVerificationResult","_x","_x2","_x3","_x4","_x5","_x6","_x7","_ref2","_callee5","PDFNet","VerificationResult","TrustStatus","DigestStatus","ModificationPermissionsStatus","DocumentStatus","verificationResults","_context6","Core","runWithCleanup","_callee4","opts","_iterator","_step","_loop","_iterator2","_step2","trustList","trustListDataStructure","supportedDataStructures","fdfDocBuffer","fdf","fieldIterator","field","digitalSigField","result","id","signer","signTime","documentPermission","isCertification","contactInfo","location","reason","validAtTimeOfSigning","signerName","issuerField","subjectField","signed","subFilter","signerCert","retrievedSubjectField","processedSubjectField","verificationStatus","documentStatus","digestStatus","trustStatus","permissionStatus","digestAlgorithm","disallowedChanges","validSignerIdentity","trustVerificationResultString","trustVerificationResultBoolean","timeOfTrustVerificationEnum","trustVerificationTime","trustVerificationResult","epochTrustVerificationTime","certPath","firstX509Cert","retrievedIssuerField","processedIssuerField","_retrievedSubjectField","_processedSubjectField","lastX509Cert","notBeforeEpochTime","notAfterEpochTime","badgeIcon","fieldName","_context5","getPDFDoc","VerificationOptions","SecurityLevel","e_compatibility_and_archiving","enableOnlineCRLRevocationChecking","setRevocationProxyPrefix","_createForOfIteratorHelper","certificate","fileReader","arrayBufferPromise","_context4","addTrustedCertificateFromURL","t0","console","File","toString","FileReader","addEventListener","_ref5","_callee3","_context3","Uint8Array","target","_x15","readAsArrayBuffer","t1","t2","addTrustedCertificate","t3","ArrayBuffer","Int8Array","Uint8ClampedArray","t4","arrayBuffer","includes","join","FDFDoc","createFromMemoryBuffer","loadTrustList","getFieldIteratorBegin","hasNext","current","isValid","getType","t5","t6","Field","Type","e_signature","DigitalSignatureField","createFromField","verify","getSDFObj","getObjNum","hasCryptographicSignature","getSubFilter","SubFilterType","e_adbe_pkcs7_detached","getSignerCertFromCMS","getSubjectField","processX501DistinguishedName","t7","e_ETSI_RFC3161","getSignatureName","t8","getContactInfo","getSigningTime","formatPDFNetDate","getLocation","getReason","getDocumentPermissions","getVerificationStatus","getDocumentStatus","getDigestStatus","getTrustStatus","getPermissionsStatus","getDigestAlgorithm","t9","getDisallowedChanges","t10","map","_ref4","_callee2","change","_context2","getTypeAsString","objnum","_x14","all","e_trust_verified","hasTrustVerificationResult","getTrustVerificationResult","wasSuccessful","getResultString","getTimeOfTrustVerificationEnum","getTimeOfTrustVerification","formatDate","getCertPath","getIssuerField","assign","getNotBeforeEpochTime","getNotAfterEpochTime","t11","warn","e_no_error","e_digest_verified","e_digest_verification_disabled","e_no_trust_status","e_unmodified","e_has_allowed_changes","e_permissions_verification_disabled","e_commonName","getName","t12","_x8","_x9","_x10","_x11","_x12","_x13","date","year","month","day","hour","minute","second","Date","UTC","toLocaleDateString","replace","weekday","timeZoneName","epochTime","setUTCSeconds","_ref6","_callee6","x501DistinguishedNameObject","processedObject","allAttributeAndValues","_iterator3","_step3","x501AttributeTypeAndValue","objectIdentifier","_context7","getAllAttributesAndValues","getAttributeTypeOID","getRawValue","getStringValue","translateObjectIdentifierBotanOID","_x16","objectIdentifierOIDenum","JSON","stringify","Spinner","WidgetLocator","rect","_useState2","_slicedToArray","useState","show","setShow","useEffect","scrollViewContainer","core","getScrollViewElement","handleScroll","removeEventListener","setTimeout","ReactDOM","createPortal","style","position","top","y1","left","x1","width","x2","height","y2","border","zIndex","getRootNode","querySelector","renderPermissionStatus","translate","e_invalidated_by_disallowed_changes","e_no_permissions_status","isRequired","collapsible","bool","onClick","func","instanceOf","Annotations","Forms","WidgetInfo","verificationType","useSelector","state","selectors","isExpanded","setIsExpanded","_useState4","locatorRect","setLocatorRect","_useState6","signatureDetailsExpanded","setSignatureDetailsExpanded","_window$Core$PDFNet","TimeMode","useTranslation","useDispatch","jumpToWidget","widgets","widget","jumpToAnnotation","_core$getScrollViewEl","scrollLeft","scrollTop","getRect","windowTopLeft","getDisplayModeObject","pageToWindow","x","PageNumber","windowBottomRight","titleInteraction","event","stopPropagation","openSignatureModal","setSignatureValidationModalWidgetName","openElement","Fragment","onKeyPress","role","tabIndex","classNames","arrow","expanded","_ref3","verificationTimeMessage","e_current","e_signing","e_timestamp","renderTrustVerification","arr","Array","isArray","_arrayWithHoles","l","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","from","test","len","arr2","SignaturePanel","fields","setFields","showSpinner","setShowSpinner","certificateErrorMessage","setCertificateErrorMessage","_useState8","getDocument","setDocument","_useSelector2","isElementDisabled","getCertificates","getTrustLists","getCurrentLanguage","getIsRevocationCheckingEnabled","getRevocationProxyPrefix","isDisabled","onDocumentLoaded","onDocumentUnloaded","useCallback","onAnnotationChanged","annotations","action","isInFormCreationMode","getAnnotationManager","getFormFieldCreationManager","isInFormFieldCreationMode","addSignatureWidgetAnnotations","getAnnotationsList","removeAnnotations","addNonSignedFields","currentAnnotations","currentFields","annotation","SignatureWidgetAnnotation","getField","newSet","Set","_toConsumableArray","removeMatchingWidget","annot","widgetFieldName","getCustomData","RectangleAnnotation","annotationManager","widgetToDelete","filter","Id","deleteAnnotations","resetFields","getAnnotationsLoadedPromise","fieldManager","getFieldManager","message","data-element","panelData","panelNames","SIGNATURE","icon","renderLoadingOrErrors","index","SignatureValidationModal","containerRef","useRef","validationModalWidgetName","digitalSignatureValidation","isElementOpen","DataElements","SIGNATURE_VALIDATION_MODAL","shallowEqual","isOpen","closeModal","closeElements","useOnClickOutside","SIGNATURE_MODAL","LOADING_MODAL","PRINT_MODAL","ERROR_MODAL","PASSWORD_MODAL","DigestAlgorithm","Modal","open","closed","ref","status","typeCapitalized","interpolation","escapeValue","renderHeader","editor","DocumentPermissions","e_no_changes_allowed","e_formfilling_signing_allowed","e_annotating_formfilling_signing_allowed","e_unrestricted","renderDocumentPermission","e_untrusted","e_trust_verification_disabled","renderTrustStatus","e_corrupt_file","e_unsigned","e_bad_byteranges","e_corrupt_cryptographic_contents","renderDocumentStatus","e_digest_invalid","e_weak_digest_algorithm_but_digest_verifiable","e_no_digest_status","e_unsupported_encoding","renderDigestStatus","e_SHA1","e_SHA256","e_SHA384","e_SHA512","e_RIPEMD160","e_unknown_digest_algorithm","renderDigestAlgorithm"],"mappings":"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","file":"chunks/34.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from 'components/Icon';\n\nimport './SignatureIcon.scss';\n\nconst propTypes = {\n  badge: PropTypes.string,\n  size: PropTypes.string,\n};\n\nconst SignatureIcon = ({ badge, size = 'medium' }) => (\n  <div className=\"signature-icon\">\n    {badge && <Icon glyph={badge} className={`badge ${size}`} />}\n  </div>\n);\n\nSignatureIcon.propTypes = propTypes;\n\nexport default SignatureIcon;\n","import SignatureIcon from './SignatureIcon';\n\nexport default SignatureIcon;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js!./Spinner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".SignaturePanel .spinner{margin:10px;border:5px solid #ddd;border-top-color:#aaa;border-radius:50%;width:40px;height:40px;animation:spin 1.2s ease infinite}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js!./SignatureIcon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".signature-icon .badge{color:#fff}.signature-icon .medium{width:18px;height:18px}.signature-icon .small{width:16px;height:16px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js!./WidgetInfo.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".signature-widget-info{--widget-header-indent:49px;--widget-body-indent:22px;--arrow-width:22px;display:flex;flex-direction:column;font-size:13px;margin-bottom:10px;margin-left:5px}.signature-widget-info p+p{margin:1em 0 0}.signature-widget-info p.result-for-header{margin-top:0}.signature-widget-info p.bold{font-weight:700;margin-bottom:4px}.signature-widget-info p.underline{text-decoration:underline}.signature-widget-info .link{cursor:pointer;outline:none}.signature-widget-info .dropdown{outline:none}.signature-widget-info .dropdown:hover{cursor:pointer;background:var(--outline-hover);--border-radius-amount:4px;-moz-border-radius-topleft:var(--border-radius-amount);-moz-border-radius-topright:var(--border-radius-amount);-moz-border-radius-bottomright:var(--border-radius-amount);-moz-border-radius-bottomleft:var(--border-radius-amount);border-radius:var(--border-radius-amount)}.signature-widget-info .title{font-weight:700;display:flex;align-items:center;min-height:32px;margin-top:-5px;margin-bottom:-5px;overflow:hidden}.signature-widget-info .title div+*{margin-left:2px}.signature-widget-info .title .arrow{transition:transform .1s ease}.signature-widget-info .title .arrow.expanded{transform:rotate(90deg)}.signature-widget-info .title .arrow .Icon{width:var(--arrow-width);height:22px}.signature-widget-info .title .signature-icon{margin-right:5px}.signature-widget-info .header{margin-left:var(--widget-header-indent)}.signature-widget-info .header .body{margin-left:var(--widget-body-indent)}.signature-widget-info .header .body>div:first-child>p:first-child,.signature-widget-info .header .body>p:first-child{margin-top:.5em}.signature-widget-info .header .body>div:last-child{margin-bottom:.5em}.signature-widget-info .header-with-arrow{margin-left:calc(var(--widget-header-indent) - var(--arrow-width))}.signature-widget-info .header-with-arrow .body{margin-left:calc(var(--widget-body-indent) + var(--arrow-width))}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./SignaturePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.SignaturePanel{z-index:65;transition:transform .3s ease,visibility 0s ease .3s}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignaturePanel{top:0;width:100%;height:100%}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignaturePanel{top:0;width:100%;height:100%}}.open.SignaturePanel{transform:none;visibility:visible;transition:transform .3s ease,visibility 0s ease 0s}.SignaturePanel .empty-panel-container{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;width:100%;padding:36px;grid-gap:8px;gap:8px}.SignaturePanel .empty-panel-container .empty-icon{width:60px;height:60px;color:var(--gray-6);fill:var(--gray-6)}.SignaturePanel .empty-panel-container .empty-icon svg{width:60px;height:60px}.SignaturePanel .empty-panel-container .empty-message{text-align:center;max-width:131px;font-size:14px}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignaturePanel .empty-panel-container .empty-message{line-height:15px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignaturePanel .empty-panel-container .empty-message{line-height:15px}}.SignaturePanel{margin:0 8px 8px;display:flex;flex-direction:column}.SignaturePanel .center{flex-grow:1;display:flex;justify-content:center;align-items:center}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","import actions from 'actions';\n\nconst DEFAULT_REVOCATION_PROXY_PREFIX = 'https://proxy.pdftron.com';\n\n/**\n * Side-effect function that sets the verification status of the document.\n * One of three possible results can happen:\n *\n * 1. Valid: All signatures have been successfully verified\n * 2. Unknown: One or more signatures has issues, but the verification API\n * cannot definitively state the signatures are valid or invalid (i.e. a\n * required Public Key Certificate is missing)\n * 3. Invalid: The document has been digitally signed, but has one or more\n * invalid signatures (i.e. because the document was modified after it was\n * signed, and one or more signature field did not allow for this to occur)\n *\n * The above results are dictated by the return values of:\n *\n * PDFNet.VerificationResult.getDocumentStatus:\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getDocumentStatus__anchor\n *\n * PDFNet.VerificationResult.getTrustStatus:\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getTrustStatus__anchor\n *\n * PDFNet.VerificationResult.getDigestStatus:\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getDigestStatus__anchor\n *\n * PDFNet.VerificationResult.getPermissionsStatus:\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getPermissionsStatus__anchor\n *\n * Valid:\n * DocumentStatus.e_no_error && TrustStatus.e_trust_verified\n *\n * Unknown:\n * DocumentStatus.e_no_error\n * && (\n *  DigestStatus.e_digest_verified\n *  || DigestStatus.e_digest_verification_disabled\n * ) && trustStatus !== TrustStatus.e_no_trust_status\n * && (\n *   ModificationPermissionsStatus.e_unmodified\n *   || ModificationPermissionsStatus.e_has_allowed_changes\n *   || ModificationPermissionsStatus.e_permissions_verification_disabled\n * )\n *\n * Any other combinations will cause the signature field to be considered\n * Invalid.\n * @ignore\n */\nexport default async (doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix, dispatch) => {\n  const verificationResult = await getVerificationResult(doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix);\n  dispatch(actions.setVerificationResult(verificationResult));\n  return verificationResult;\n};\n\n/**\n * Iterates through each signature widget in the document, retrieves and returns\n * all pertinent information pertaining to Digital Signature Verification\n *\n * @param {Core.Document} doc The document with signatures to verify\n * with the given certificate\n * @param {Array<File | string>} certificates The certificate files to be used\n * for verification. Can be passed as a File object, or a URL in the form\n * of a string, in which a GET call will be made to retrieve the certificate\n * @param {\n *   Array<Blob | ArrayBuffer | Int8Array | Uint8Array | Uint8ClampedArray>\n * } trustLists The Trust Lists to load for verification.\n * @param {string} currentLanguage Current UI language\n * @param {boolean} revocationChecking Determines if the PDFNet API\n * VerificationOptions.enableOnlineCRLRevocationChecking is invoked to enable\n * Online Certification Revocation List (CRL) Revocation Checking is done\n * within the PDFNet logic\n * @param {string} revocationProxyPrefix The URL of a proxy server that should\n * be used to avoid CORS related issues when contacting Certificate Revocation\n * List (CRL) servers\n * @returns {object} An object mapping the field name of each signature widget\n * to their verification results\n * @ignore\n */\nconst getVerificationResult = async (doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix) => {\n  const { PDFNet } = window.Core;\n  const { VerificationResult } = PDFNet;\n  const {\n    TrustStatus,\n    DigestStatus,\n    ModificationPermissionsStatus,\n    DocumentStatus,\n  } = VerificationResult;\n  const verificationResults = {};\n\n\n  await PDFNet.runWithCleanup(async () => {\n    /**\n     * @todo Remove re-assignment of argument from original code?\n     */\n    doc = await doc.getPDFDoc();\n    const opts = await PDFNet.VerificationOptions.create(\n      PDFNet.VerificationOptions.SecurityLevel.e_compatibility_and_archiving\n    );\n\n    if (revocationChecking) {\n      await opts.enableOnlineCRLRevocationChecking(true);\n    }\n\n    if (revocationProxyPrefix === null) {\n      await opts.setRevocationProxyPrefix(DEFAULT_REVOCATION_PROXY_PREFIX);\n    } else if (revocationProxyPrefix !== undefined) {\n      await opts.setRevocationProxyPrefix(revocationProxyPrefix);\n    }\n\n    for (const certificate of certificates) {\n      if (typeof certificate === 'string') {\n        try {\n          await opts.addTrustedCertificateFromURL(certificate);\n        } catch {\n          console.error(\n            `Error encountered when trying to load certificate from URL: ${certificate}\\n`\n            + 'Certificate will not be used as part of verification process.'\n          );\n          continue;\n        }\n      } else if (\n        certificate instanceof File ||\n        Object.prototype.toString.call(certificate) === '[object File]'\n      ) {\n        const fileReader = new FileReader();\n        const arrayBufferPromise = new Promise((resolve, reject) => {\n          fileReader.addEventListener('load', async (e) => {\n            resolve(new Uint8Array(e.target.result));\n          });\n          fileReader.addEventListener('error', () => {\n            reject('Error reading the local certificate');\n          });\n\n          fileReader.readAsArrayBuffer(certificate);\n        });\n        try {\n          await opts.addTrustedCertificate(await arrayBufferPromise);\n        } catch (error) {\n          console.error(\n            `Error encountered when trying to load certificate: ${error}`\n            + 'Certificate will not be used as part of the verification process.'\n          );\n          continue;\n        }\n      } else if (\n        certificate instanceof ArrayBuffer\n        || certificate instanceof Int8Array\n        || certificate instanceof Uint8Array\n        || certificate instanceof Uint8ClampedArray\n      ) {\n        try {\n          await opts.addTrustedCertificate(certificate);\n        } catch (error) {\n          console.error(\n            `Error encountered when trying to load certificate: ${error}`\n            + 'Certificate will not be used as part of the verification process.'\n          );\n          continue;\n        }\n      }\n    }\n\n    for (const trustList of trustLists) {\n      const trustListDataStructure = trustList.constructor.name;\n      const supportedDataStructures = [\n        'ArrayBuffer',\n        'Int8Array',\n        'Uint8Array',\n        'Uint8ClampedArray',\n      ];\n      let fdfDocBuffer;\n      if (trustListDataStructure === 'Blob') {\n        fdfDocBuffer = await trustList.arrayBuffer();\n      } else if (supportedDataStructures.includes(trustListDataStructure)) {\n        fdfDocBuffer = trustList;\n      } else {\n        console.error(\n          'The provided TrustList is an unsupported data-structure. '\n          + 'Please ensure the TrustList is formatted as one of the following '\n          + `data-structures: ${[...supportedDataStructures, 'Blob'].join('|')}`\n        );\n        continue;\n      }\n      try {\n        const fdf = await PDFNet.FDFDoc.createFromMemoryBuffer(fdfDocBuffer);\n        await opts.loadTrustList(fdf);\n      } catch (error) {\n        console.error(\n          `Error encountered when trying to load certificate: ${error}. `\n          + 'Certificate will not be used as part of the verification process.'\n        );\n        continue;\n      }\n    }\n\n    const fieldIterator = await doc.getFieldIteratorBegin();\n    for (; (await fieldIterator.hasNext()); fieldIterator.next()) {\n      const field = await fieldIterator.current();\n      if (\n        !(await field.isValid())\n        || await field.getType() !== PDFNet.Field.Type.e_signature\n      ) {\n        continue;\n      }\n      const digitalSigField = await PDFNet.DigitalSignatureField.createFromField(field);\n      try {\n        const result = await digitalSigField.verify(opts);\n        const id = await (await digitalSigField.getSDFObj()).getObjNum();\n\n        let signer;\n        let signTime;\n        let documentPermission;\n        let isCertification;\n        let contactInfo;\n        let location;\n        let reason;\n        let validAtTimeOfSigning;\n        let signerName;\n        const issuerField = {};\n        const subjectField = {};\n\n        const signed = await digitalSigField.hasCryptographicSignature();\n        if (signed) {\n          const subFilter = await digitalSigField.getSubFilter();\n          if (subFilter === PDFNet.DigitalSignatureField.SubFilterType.e_adbe_pkcs7_detached) {\n            const signerCert = await digitalSigField.getSignerCertFromCMS();\n            /**\n             * @note \"Issuer\" refers to the Certificate Authority that issued the\n             * certificate\n             * \"Subject\" refers to the organization/person that the Certificate\n             * Auhority issued this certificate to\n             *\n             * It is likely that future UI iterations will leverage Issuer\n             * information, so the code has been commented out for now, but will\n             * be uncommented in future feature implementations\n             */\n            // const retrievedIssuerField = await signerCert.getIssuerField();\n            // const processedIssuerField = await processX501DistinguishedName(retrievedIssuerField) || {};\n            const retrievedSubjectField = await signerCert.getSubjectField();\n            const processedSubjectField = await processX501DistinguishedName(retrievedSubjectField) || {};\n            signer = processedSubjectField['e_commonName'];\n          }\n          // Getter functions cannot be called on Digital Signature fields using\n          // e_ETSI_RFC3161\n          if (subFilter !== PDFNet.DigitalSignatureField.SubFilterType.e_ETSI_RFC3161) {\n            if (!signer) {\n              signer = (\n                await digitalSigField.getSignatureName()\n                || await digitalSigField.getContactInfo()\n              );\n            }\n            signTime = await digitalSigField.getSigningTime();\n\n            if (await signTime.isValid()) {\n              signTime = formatPDFNetDate(signTime, currentLanguage);\n            } else {\n              signTime = null;\n            }\n\n            contactInfo = await digitalSigField.getContactInfo();\n            location = await digitalSigField.getLocation();\n            reason = await digitalSigField.getReason();\n          }\n\n          documentPermission = await digitalSigField.getDocumentPermissions();\n          isCertification = await digitalSigField.isCertification();\n        }\n\n        const verificationStatus = await result.getVerificationStatus();\n        const documentStatus = await result.getDocumentStatus();\n        const digestStatus = await result.getDigestStatus();\n        const trustStatus = await result.getTrustStatus();\n        const permissionStatus = await result.getPermissionsStatus();\n        const digestAlgorithm = await result.getDigestAlgorithm();\n        const disallowedChanges = await Promise.all(\n          (await result.getDisallowedChanges()).map(async (change) => ({\n            objnum: await change.getObjNum(),\n            type: await change.getTypeAsString(),\n          }))\n        );\n        const validSignerIdentity = trustStatus === TrustStatus.e_trust_verified;\n\n        let trustVerificationResultString;\n        let trustVerificationResultBoolean;\n        let timeOfTrustVerificationEnum;\n        let trustVerificationTime;\n        const hasTrustVerificationResult = await result.hasTrustVerificationResult();\n        if (hasTrustVerificationResult) {\n          const trustVerificationResult = await result.getTrustVerificationResult();\n\n          trustVerificationResultBoolean = await trustVerificationResult.wasSuccessful();\n          trustVerificationResultString = await trustVerificationResult.getResultString();\n          timeOfTrustVerificationEnum = await trustVerificationResult.getTimeOfTrustVerificationEnum();\n\n          const epochTrustVerificationTime = await trustVerificationResult.getTimeOfTrustVerification();\n          if (epochTrustVerificationTime) {\n            trustVerificationTime = formatDate(epochTrustVerificationTime, currentLanguage);\n          }\n          const certPath = await trustVerificationResult.getCertPath();\n          if (certPath.length) {\n            const firstX509Cert = certPath[0];\n            const retrievedIssuerField = await firstX509Cert.getIssuerField();\n            const processedIssuerField = await processX501DistinguishedName(retrievedIssuerField);\n            Object.assign(issuerField, processedIssuerField);\n            const retrievedSubjectField = await firstX509Cert.getSubjectField();\n            const processedSubjectField = await processX501DistinguishedName(retrievedSubjectField);\n            Object.assign(subjectField, processedSubjectField);\n            const lastX509Cert = certPath[certPath.length - 1];\n            /**\n             * @todo @colim @rdjericpdftron 2022-05-30\n             * Using the pdftron::PDF::VerificationOptions::LoadTrustList API\n             * in combination with\n             * pdftron::Crypto::X509Certificate::GetNotBeforeEpochTime\n             * or\n             * pdftron::Crypto::X509Certificate::GetNotAfterEpochTime\n             * Results in the following fatal error being thrown:\n             *\n             * calendar_point::to_std_timepoint() does not support years after\n             * 2037 on this system\n             *\n             * @rdjericpdftron Mentions that this should be addressed in a\n             * future release of PDFNet when the Botan library has been patched\n             */\n            try {\n              const notBeforeEpochTime = await lastX509Cert.getNotBeforeEpochTime();\n              const notAfterEpochTime = await lastX509Cert.getNotAfterEpochTime();\n              validAtTimeOfSigning = (\n                notAfterEpochTime >= epochTrustVerificationTime\n                && epochTrustVerificationTime >= notBeforeEpochTime\n              );\n            } catch (dateBugError) {\n              if (dateBugError.includes('calendar_point::to_std_timepoint() does not support years after')) {\n                console.warn(\n                  'The following error is a known issue with Botan, and aims to be addressed in a future release of '\n                  + 'PDFNet. This currently does not impact PDFTron\\'s Digital Signature Verification capabilities.'\n                );\n                console.warn(dateBugError);\n              }\n            }\n          }\n        }\n\n        let badgeIcon;\n        if (verificationStatus) {\n          badgeIcon = 'digital_signature_valid';\n        } else if (\n          documentStatus === DocumentStatus.e_no_error &&\n          (digestStatus === DigestStatus.e_digest_verified ||\n            digestStatus === DigestStatus.e_digest_verification_disabled) &&\n          trustStatus !== TrustStatus.e_no_trust_status &&\n          (permissionStatus === ModificationPermissionsStatus.e_unmodified ||\n            permissionStatus === ModificationPermissionsStatus.e_has_allowed_changes ||\n            permissionStatus === ModificationPermissionsStatus.e_permissions_verification_disabled)\n        ) {\n          badgeIcon = 'digital_signature_warning';\n        } else {\n          badgeIcon = 'digital_signature_error';\n        }\n\n        if (signer) {\n          signerName = signer;\n        } else if (!signer && subjectField.e_commonName) {\n          signerName = subjectField.e_commonName;\n        }\n        const fieldName = await field.getName();\n        verificationResults[fieldName] = {\n          signed,\n          signer,\n          signerName,\n          signTime,\n          verificationStatus,\n          documentStatus,\n          digestStatus,\n          trustStatus,\n          permissionStatus,\n          disallowedChanges,\n          trustVerificationResultBoolean,\n          trustVerificationResultString,\n          timeOfTrustVerificationEnum,\n          trustVerificationTime,\n          id,\n          badgeIcon,\n          validSignerIdentity,\n          digestAlgorithm,\n          documentPermission,\n          isCertification,\n          contactInfo,\n          location,\n          reason,\n          issuerField,\n          subjectField,\n          validAtTimeOfSigning,\n        };\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  });\n\n  return verificationResults;\n};\n\n/**\n * Retrieves the relevant information from the given object, containing date\n * information that originates from epoch time, and returns a string containing\n * the date and time information in a human readable string\n *\n * @param {object} date The date object that is returned from PDFNet\n * @returns {string} Human readable formatted date and time\n * @ignore\n */\nconst formatPDFNetDate = (date, currentLanguage) => {\n  const { year, month, day, hour, minute, second } = date;\n  const d = new Date(Date.UTC(year, month - 1, day, hour, minute, second));\n\n  return d.toLocaleDateString(currentLanguage.replace('_', '-'), {\n    year: 'numeric',\n    month: 'long',\n    weekday: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    timeZoneName: 'short',\n  });\n};\n\n/**\n * Converts an epoch time input to date in string\n *\n * @param {number} epochTime The epoch time to be converted\n * @returns {string} The converted epoch time\n * @ignore\n */\nconst formatDate = (epochTime, currentLanguage) => {\n  const date = new Date(0);\n  // Values greater than 59 are converted into their parent values\n  // (i.e. seconds -> minutes -> hours -> day etc.)\n  date.setUTCSeconds(epochTime);\n\n  return date.toLocaleDateString(currentLanguage.replace('_', '-'), {\n    year: 'numeric',\n    month: 'long',\n    weekday: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    timeZoneName: 'short',\n  });\n};\n\n/**\n * Processes an instance of the PDFNet.X501DistinguishedName class into a\n * Javascript object that is human readable\n *\n * Intended to process the objects returned from invoking\n * PDFNet.X509Certificate.GetIssuerField and\n * PDFNet.X509Certificate.GetSubjectField\n *\n * @param {PDFNet.X501DistinguishedName} x501DistinguishedNameObject An instance\n * of the PDFNet.X501DistinguishedName class, to be processed into a Javascript\n * object\n * @returns {object} Maps human readable keys (as opposed to the Botan Crpyto\n * OIDs, represented as Array<int> in PDFTron Core) to the corresponding values\n * they map to\n * @ignore\n */\nconst processX501DistinguishedName = async (x501DistinguishedNameObject) => {\n  const processedObject = {};\n  const allAttributeAndValues = await x501DistinguishedNameObject.getAllAttributesAndValues();\n  for (const x501AttributeTypeAndValue of allAttributeAndValues) {\n    const objectIdentifier = await x501AttributeTypeAndValue.getAttributeTypeOID();\n    const key = await objectIdentifier.getRawValue();\n    const value = await x501AttributeTypeAndValue.getStringValue();\n    processedObject[translateObjectIdentifierBotanOID(key)] = value;\n  }\n  return processedObject;\n};\n\n/**\n * Takes an Array<Number> argument (or its string representation from\n * JSON.stringify) and returns the enum it is supposed to represent based on\n * its OID representation in the Botan crypto C++ library\n *\n * PDFTron Core represents the key from the original Map<string, string>\n * data-structre in the form of an array\n *\n * @example The key of the object\n * { \"2.5.4.3\", \"X520.CommonName\" }\n * Is represented as [2,5,4,3] in PDFTron Core\n *\n * Source: https://botan.randombit.net/doxygen/oid__maps_8cpp_source.html\n *\n * @param {string | Array<Number>} objectIdentifierOIDenum The array returned\n * from the invocation of PDFNet.ObjectIdentifier.getRawValue, which can be\n * accepted as the Array input (which the body of the function will convert to a\n * string), or a string representation of the array\n * @returns {string} The human readable enum that the array represents\n * @ignore\n */\nconst translateObjectIdentifierBotanOID = (objectIdentifierOIDenum) => {\n  const botanArrayToEnum = {\n    '[2,5,4,3]': 'e_commonName',\n    '[2,5,4,4]': 'e_surname',\n    '[2,5,4,6]': 'e_countryName',\n    '[2,5,4,7]': 'e_localityName',\n    '[2,5,4,8]': 'e_stateOrProvinceName',\n    '[2,5,4,9]': 'e_streetAddress',\n    '[2,5,4,10]': 'e_organizationName',\n    '[2,5,4,11]': 'e_organizationalUnitName',\n    /**\n     * @note Added by @CorreyL, enum is not in PDFTronCore codebase as of\n     * PDFNetJS8.1\n     *\n     * Listed as { \"1.2.840.113549.1.9.1\", \"PKCS9.EmailAddress\" }\n     * in load_oid2str_map()\n     */\n    '[1,2,840,113549,1,9,1]': 'e_emailAddress',\n  };\n  const arrayAsString = (typeof objectIdentifierOIDenum === 'string')\n    ? objectIdentifierOIDenum\n    : JSON.stringify(objectIdentifierOIDenum);\n  return botanArrayToEnum[arrayAsString];\n};\n","import React from 'react';\nimport './Spinner.scss';\n\nconst Spinner = () => <div className=\"spinner\" />;\n\nexport default Spinner;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport core from 'core';\nimport getRootNode from 'helpers/getRootNode';\n\nconst WidgetLocator = ({ rect }) => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const scrollViewContainer = core.getScrollViewElement();\n    const handleScroll = () => {\n      setShow(false);\n    };\n\n    scrollViewContainer.addEventListener('scroll', handleScroll);\n    return () => scrollViewContainer.removeEventListener('scroll', handleScroll);\n  });\n\n  useEffect(() => {\n    if (rect) {\n      setTimeout(() => {\n        // so that the locator won't disappear because of the scroll\n        setShow(true);\n      }, 50);\n\n      setTimeout(() => {\n        setShow(false);\n      }, 700);\n    }\n  }, [rect]);\n\n  return (\n    show &&\n    ReactDOM.createPortal(\n      <div\n        style={{\n          position: 'absolute',\n          top: rect.y1,\n          left: rect.x1,\n          width: rect.x2 - rect.x1,\n          height: rect.y2 - rect.y1,\n          border: '1px solid #00a5e4',\n          zIndex: 100,\n        }}\n      />,\n      getRootNode().querySelector('#app')\n    )\n  );\n};\n\nexport default WidgetLocator;\n","import WidgetLocator from './WidgetLocator';\n\nexport default WidgetLocator;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport actions from 'actions';\nimport classNames from 'classnames';\nimport core from 'core';\nimport selectors from 'selectors';\n\nimport SignatureIcon from 'components/SignaturePanel/SignatureIcon';\nimport Icon from 'components/Icon';\nimport WidgetLocator from '../WidgetLocator';\n\nimport './WidgetInfo.scss';\n\nexport const renderPermissionStatus = ({\n  isCertification,\n  ModificationPermissionsStatus,\n  permissionStatus,\n  translate,\n}) => {\n  let content;\n\n  switch (permissionStatus) {\n    case ModificationPermissionsStatus.e_invalidated_by_disallowed_changes:\n      content = translate(\n        'digitalSignatureVerification.permissionStatus.invalidatedByDisallowedChanges'\n      );\n      break;\n    case ModificationPermissionsStatus.e_has_allowed_changes:\n      content = translate(\n        'digitalSignatureVerification.permissionStatus.hasAllowedChanges'\n      );\n      break;\n    case ModificationPermissionsStatus.e_unmodified:\n      content = `${\n        translate('digitalSignatureVerification.permissionStatus.unmodified')\n      } ${\n        isCertification\n          ? translate('digitalSignatureVerification.certified')\n          : translate('digitalSignatureVerification.signed')\n      }.`;\n      break;\n    case ModificationPermissionsStatus.e_permissions_verification_disabled:\n      content = translate(\n        'digitalSignatureVerification.permissionStatus.permissionsVerificationDisabled'\n      );\n      break;\n    case ModificationPermissionsStatus.e_no_permissions_status:\n      content = translate(\n        'digitalSignatureVerification.permissionStatus.noPermissionsStatus'\n      );\n      break;\n  }\n\n  return <p>{content}</p>;\n};\n\nconst propTypes = {\n  name: PropTypes.string.isRequired,\n  collapsible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  field: PropTypes.instanceOf(window.Core.Annotations.Forms.Field),\n};\n\nconst WidgetInfo = ({ name, collapsible, field }) => {\n  const verificationResult = useSelector((state) => selectors.getVerificationResult(state, name));\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [locatorRect, setLocatorRect] = useState(null);\n  const [signatureDetailsExpanded, setSignatureDetailsExpanded] = useState(false);\n  const { VerificationResult, VerificationOptions } = window.Core.PDFNet;\n  const { TimeMode } = VerificationOptions;\n  const { ModificationPermissionsStatus } = VerificationResult;\n  const [translate] = useTranslation();\n\n  const {\n    signed,\n    signTime,\n    verificationStatus,\n    permissionStatus,\n    disallowedChanges,\n    trustVerificationResultBoolean,\n    timeOfTrustVerificationEnum,\n    trustVerificationTime,\n    badgeIcon,\n    isCertification,\n    contactInfo,\n    location,\n    reason,\n    signerName,\n  } = verificationResult;\n\n  const dispatch = useDispatch();\n\n  const handleArrowClick = (e) => {\n    e.stopPropagation();\n    setIsExpanded(!isExpanded);\n  };\n\n  /**\n   * Side-effect function that highlights the SignatureWidgetAnnotation\n   * pertaining to the text element that was clicked by using core code to find\n   * the coordinates of the widget on the page it is placed on\n   *\n   * @param {Annotations.Forms.Field} field The field pertaining\n   * to the text element clicked in the Signature Panel\n   */\n  const jumpToWidget = (field) => {\n    if (!field.widgets.length) {\n      return;\n    }\n    const widget = field.widgets[0];\n    core.jumpToAnnotation(widget);\n\n    const { scrollLeft, scrollTop } = core.getScrollViewElement();\n    const rect = widget.getRect();\n    const windowTopLeft = core\n      .getDisplayModeObject()\n      .pageToWindow({ x: rect.x1, y: rect.y1 }, widget.PageNumber);\n    const windowBottomRight = core\n      .getDisplayModeObject()\n      .pageToWindow({ x: rect.x2, y: rect.y2 }, widget.PageNumber);\n\n    setLocatorRect({\n      x1: windowTopLeft.x - scrollLeft,\n      y1: windowTopLeft.y - scrollTop,\n      x2: windowBottomRight.x - scrollLeft,\n      y2: windowBottomRight.y - scrollTop,\n    });\n  };\n\n  /**\n   * Function that invokes the necessary methods when a user interacts with\n   * the title of the widget\n   *\n   * @param {Event} event The event that is passed from an onClick or onKeyPress\n   * interaction\n   */\n  const titleInteraction = (event) => {\n    handleArrowClick(event);\n    jumpToWidget(field);\n  };\n\n  const renderTitle = () => {\n    let content = isCertification\n      ? translate('digitalSignatureVerification.Certified')\n      : translate('digitalSignatureVerification.Signed');\n    content += ` ${translate('digitalSignatureVerification.by')} ${signerName || translate('digitalSignatureModal.unknown')}`;\n    if (signTime) {\n      content += ` ${translate('digitalSignatureVerification.on')} ${signTime}`;\n    }\n    return (\n      <div\n        className=\"title dropdown\"\n        onClick={titleInteraction}\n        onKeyPress={titleInteraction}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {collapsible && (\n          <div\n            className={classNames({\n              arrow: true,\n              expanded: isExpanded,\n            })}\n          >\n            <Icon glyph=\"ic_chevron_right_black_24px\" />\n          </div>\n        )}\n        <SignatureIcon badge={badgeIcon} size=\"small\"/>\n        <p>{content}</p>\n      </div>\n    );\n  };\n\n  const renderVerificationStatus = () => {\n    const verificationType = isCertification\n      ? translate('digitalSignatureVerification.Certification')\n      : translate('digitalSignatureVerification.Signature');\n    return (\n      <div className=\"title\">\n        <p>\n          {\n            verificationStatus\n              ? translate('digitalSignatureVerification.verificationStatus.valid', { verificationType })\n              : translate('digitalSignatureVerification.verificationStatus.failed', { verificationType })\n          }\n        </p>\n      </div>\n    );\n  };\n\n  const renderPermissionStatus = () => {\n    let content;\n\n    switch (permissionStatus) {\n      case ModificationPermissionsStatus.e_invalidated_by_disallowed_changes:\n        content = translate(\n          'digitalSignatureVerification.permissionStatus.invalidatedByDisallowedChanges'\n        );\n        break;\n      case ModificationPermissionsStatus.e_has_allowed_changes:\n        content = translate(\n          'digitalSignatureVerification.permissionStatus.hasAllowedChanges'\n        );\n        break;\n      case ModificationPermissionsStatus.e_unmodified:\n        content = `${\n          translate('digitalSignatureVerification.permissionStatus.unmodified')\n        } ${\n          isCertification\n            ? translate('digitalSignatureVerification.certified')\n            : translate('digitalSignatureVerification.signed')\n        }.`;\n        break;\n      case ModificationPermissionsStatus.e_permissions_verification_disabled:\n        content = translate(\n          'digitalSignatureVerification.permissionStatus.permissionsVerificationDisabled'\n        );\n        break;\n      case ModificationPermissionsStatus.e_no_permissions_status:\n        content = translate(\n          'digitalSignatureVerification.permissionStatus.noPermissionsStatus'\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  const renderDisallowedChanges = () => {\n    return disallowedChanges.map(({ objnum, type }) => (\n      <p key={objnum}>\n        {\n          translate(\n            'digitalSignatureVerification.disallowedChange',\n            { type, objnum }\n          )\n        }\n      </p>\n    ));\n  };\n\n  const renderTrustVerification = () => {\n    let verificationTimeMessage;\n    switch (timeOfTrustVerificationEnum) {\n      case (TimeMode.e_current):\n        verificationTimeMessage = (\n          translate('digitalSignatureVerification.trustVerification.current')\n        );\n        break;\n      case (TimeMode.e_signing):\n        verificationTimeMessage = (\n          translate('digitalSignatureVerification.trustVerification.signing')\n        );\n        break;\n      case (TimeMode.e_timestamp):\n        verificationTimeMessage = (\n          translate('digitalSignatureVerification.trustVerification.timestamp')\n        );\n        break;\n      default:\n        console.warn(\n          `Unexpected pdftron::PDF::VerificationOptions::TimeMode: ${timeOfTrustVerificationEnum}`\n        );\n    }\n    return (\n      <div className=\"trust-verification-result\">\n        <p>\n          {\n            translate(\n              trustVerificationResultBoolean\n                ? 'digitalSignatureVerification.trustVerification.verifiedTrust'\n                : 'digitalSignatureVerification.trustVerification.noTrustVerification'\n            )\n          }\n        </p>\n        {\n          /**\n           * @todo Chat with @rastko when he is available to determine what\n           * content from `trustVerificationResultString` could potentially\n           * be important to show to users\n           *\n           * <div>\n           *   <p className='bold'>Trust verification result:</p>\n           *   {\n           *     trustVerificationResultString.split('\\n').map((line, idx) => {\n           *       return (\n           *         <p\n           *           key={`trustVerificationResultString-${idx}`}\n           *           className={line[0] === '\\t' ? '' : 'bold'}\n           *         >\n           *           {line}\n           *         </p>\n           *       );\n           *     })\n           *   }\n           * </div>\n           */\n        }\n        <p>{trustVerificationTime}</p>\n        <p>{verificationTimeMessage}</p>\n      </div>\n    );\n  };\n\n  const renderSignatureDetails = () => {\n    // No additional signature details to render\n    if (!contactInfo && !location && !reason) {\n      return null;\n    }\n    return (\n      <div>\n        <div\n          className=\"title dropdown\"\n          onClick={\n            () => setSignatureDetailsExpanded(!signatureDetailsExpanded)\n          }\n          onKeyPress={\n            () => setSignatureDetailsExpanded(!signatureDetailsExpanded)\n          }\n          role=\"button\"\n          tabIndex={0}\n        >\n          <div\n            className={classNames({\n              arrow: true,\n              expanded: signatureDetailsExpanded,\n            })}\n          >\n            <Icon glyph=\"ic_chevron_right_black_24px\" />\n          </div>\n          <p>\n            {\n              translate(\n                'digitalSignatureVerification.signatureDetails.signatureDetails'\n              )\n            }\n          </p>\n        </div>\n        {\n          signatureDetailsExpanded\n          && (\n            <div className=\"body\">\n              <div>\n                <p className=\"bold\">\n                  {\n                    `${translate('digitalSignatureVerification.signatureDetails.contactInformation')}:`\n                  }\n                </p>\n                <p className=\"result-for-header\">\n                  {\n                    contactInfo\n                    || translate('digitalSignatureVerification.signatureDetails.noContactInformation')\n                  }\n                </p>\n              </div>\n              <div>\n                <p className=\"bold\">\n                  {\n                    `${translate('digitalSignatureVerification.signatureDetails.location')}:`\n                  }\n                </p>\n                <p className=\"result-for-header\">\n                  {\n                    location\n                    || translate('digitalSignatureVerification.signatureDetails.noLocation')\n                  }\n                </p>\n              </div>\n              <div>\n                <p className=\"bold\">\n                  {\n                    `${translate('digitalSignatureVerification.signatureDetails.reason')}:`\n                  }\n                </p>\n                <p className=\"result-for-header\">\n                  {\n                    reason\n                    || translate('digitalSignatureVerification.signatureDetails.noReason')\n                  }\n                </p>\n              </div>\n              {\n                signTime && (\n                  <div>\n                    <p className=\"bold\">\n                      {\n                        `${translate('digitalSignatureVerification.signatureDetails.signingTime')}:`\n                      }\n                    </p>\n                    <p className=\"result-for-header\">\n                      {\n                        signTime\n                        || translate('digitalSignatureVerification.signatureDetails.noSigningTime')\n                      }\n                    </p>\n                  </div>\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    );\n  };\n\n  const openSignatureModal = () => {\n    dispatch(actions.setSignatureValidationModalWidgetName(name));\n    dispatch(actions.openElement('signatureValidationModal'));\n  };\n\n  /**\n   * Renders a link to open the signature modal\n   */\n  const renderSignaturePropertiesLink = () => {\n    return (\n      <div\n        onClick={openSignatureModal}\n        onKeyPress={openSignatureModal}\n        role=\"button\"\n        tabIndex={0}\n        className=\"link\"\n      >\n        <p className=\"bold underline\">{translate('digitalSignatureVerification.signatureProperties')}</p>\n      </div>\n    );\n  };\n\n  return (\n    <div\n      className=\"signature-widget-info\"\n    >\n      {signed ? (\n        <React.Fragment>\n          {renderTitle()}\n          {isExpanded && (\n            <div>\n              <div className=\"header\">\n                {\n                  renderVerificationStatus({\n                    isCertification,\n                    verificationStatus,\n                  })\n                }\n                <div className=\"body\">\n                  {\n                    renderPermissionStatus({\n                      isCertification,\n                      ModificationPermissionsStatus,\n                      permissionStatus,\n                      translate,\n                    })\n                  }\n                  {renderDisallowedChanges()}\n                  {renderTrustVerification()}\n                  {renderSignaturePropertiesLink()}\n                </div>\n              </div>\n              <div className=\"header header-with-arrow\">\n                {renderSignatureDetails()}\n              </div>\n            </div>\n          )}\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <div\n            className=\"title link\"\n            tabIndex={0}\n            onClick={() => jumpToWidget(field)}\n            onKeyPress={() => jumpToWidget(field)}\n          >\n            <SignatureIcon />\n            <p>{translate('digitalSignatureVerification.unsignedSignatureField', { fieldName: field.name })}</p>\n          </div>\n        </React.Fragment>\n      )}\n      <WidgetLocator rect={locatorRect} />\n    </div>\n  );\n};\n\nWidgetInfo.propTypes = propTypes;\n\nexport default WidgetInfo;\n","import WidgetInfo, { renderPermissionStatus } from './WidgetInfo';\n\nexport default WidgetInfo;\nexport {\n  renderPermissionStatus\n};\n","import React, { useCallback, useEffect, useState, } from 'react';\nimport { useDispatch, useSelector, } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport actions from 'actions';\nimport core from 'core';\nimport selectors from 'selectors';\nimport setVerificationResult from 'helpers/setVerificationResult';\n\nimport Spinner from './Spinner';\nimport WidgetInfo from './WidgetInfo';\n\nimport './SignaturePanel.scss';\nimport Icon from 'components/Icon';\nimport { panelData, panelNames } from 'constants/panel';\n\nconst SignaturePanel = () => {\n  const dispatch = useDispatch();\n  const [fields, setFields] = useState([]);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [certificateErrorMessage, setCertificateErrorMessage] = useState('');\n  const [document, setDocument] = useState(core.getDocument());\n  const [\n    isDisabled,\n    certificate,\n    trustLists,\n    currentLanguage,\n    revocationChecking,\n    revocationProxyPrefix,\n  ] = useSelector((state) => [\n    selectors.isElementDisabled(state, 'signaturePanel'),\n    selectors.getCertificates(state),\n    selectors.getTrustLists(state),\n    selectors.getCurrentLanguage(state),\n    selectors.getIsRevocationCheckingEnabled(state),\n    selectors.getRevocationProxyPrefix(state),\n  ]);\n  const [translate] = useTranslation();\n\n  const onDocumentLoaded = async () => {\n    setDocument(core.getDocument());\n  };\n\n  const onDocumentUnloaded = useCallback(() => {\n    setShowSpinner(true);\n    dispatch(actions.setVerificationResult({}));\n  }, [setShowSpinner, dispatch]);\n\n  const onAnnotationChanged = ((annotations, action) => {\n    const isInFormCreationMode = core.getAnnotationManager().getFormFieldCreationManager().isInFormFieldCreationMode();\n\n    if (action === 'add') {\n      addSignatureWidgetAnnotations(core.getAnnotationManager().getAnnotationsList());\n    } else if (action === 'delete' && isInFormCreationMode) {\n      removeAnnotations(annotations);\n    }\n  });\n\n  const addNonSignedFields = () => {\n    const currentAnnotations = core.getAnnotationManager().getAnnotationsList();\n    addSignatureWidgetAnnotations(currentAnnotations);\n  };\n\n  const addSignatureWidgetAnnotations = (annotations) => {\n    const currentFields = [];\n    annotations.forEach((annotation) => {\n      if (annotation instanceof window.Core.Annotations.SignatureWidgetAnnotation) {\n        currentFields.push(annotation.getField());\n      }\n    });\n    const newSet = new Set(currentFields);\n    setFields([...newSet]);\n  };\n\n  const removeAnnotations = (annotations) => {\n    annotations.forEach((annotation) => {\n      removeMatchingWidget(annotation);\n    });\n\n    addNonSignedFields();\n  };\n\n  const removeMatchingWidget = (annotation) => {\n    const annot = annotation;\n    const widgetFieldName = annot.getCustomData('trn-form-field-name');\n    const isRectanglePlaceholder = annotation instanceof window.Core.Annotations.RectangleAnnotation && widgetFieldName;\n    if (isRectanglePlaceholder) {\n      const annotationManager = core.getAnnotationManager();\n      const annotationList = annotationManager.getAnnotationsList();\n      const widgetToDelete = annotationList.filter((annotation) => {\n        return annotation.getCustomData('trn-editing-rectangle-id') === annot.Id;\n      });\n      annotationManager.deleteAnnotations(widgetToDelete);\n    }\n  };\n\n  const resetFields = () => {\n    setFields([]);\n    addNonSignedFields();\n  };\n\n  useEffect(() => {\n    // This ensures that when the document loads, the state of this component is\n    // updated accordingly\n    core.addEventListener('documentLoaded', onDocumentLoaded);\n    core.addEventListener('documentUnloaded', onDocumentUnloaded);\n    core.addEventListener('annotationChanged', onAnnotationChanged);\n    core.addEventListener('formFieldCreationModeStarted', resetFields);\n    core.addEventListener('formFieldCreationModeEnded', resetFields);\n    return () => {\n      core.removeEventListener('documentLoaded', onDocumentLoaded);\n      core.removeEventListener('documentUnloaded', onDocumentUnloaded);\n      core.removeEventListener('annotationChanged', onAnnotationChanged);\n      core.removeEventListener('formFieldCreationModeStarted', resetFields);\n      core.removeEventListener('formFieldCreationModeEnded', resetFields);\n    };\n  }, [onDocumentUnloaded]);\n\n  useEffect(() => {\n    // Need certificates for PDFNet to verify against, and for the document\n    // to be loaded in order to iterate through the signature fields in the\n    // document\n    if (document) {\n      // We need to wait for the annotationsLoaded event, otherwise the\n      // Field will not exist in the document\n      core.getAnnotationsLoadedPromise().then(() => {\n        setShowSpinner(true);\n        setVerificationResult(document, certificate, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix, dispatch)\n          .then(async (verificationResult) => {\n            const fieldManager = core.getAnnotationManager().getFieldManager();\n            setFields(Object.keys(verificationResult).map((fieldName) => fieldManager.getField(fieldName)));\n            setCertificateErrorMessage('');\n          })\n          .catch((e) => {\n            if (e && e.message) {\n              setCertificateErrorMessage(e.message);\n            } else {\n              console.error(e);\n            }\n          })\n          .then(() => {\n            addNonSignedFields();\n          })\n          .finally(() => {\n            setShowSpinner(false);\n          });\n      });\n    } else {\n      setShowSpinner(true);\n    }\n  }, [certificate, document, dispatch, currentLanguage]);\n\n  if (isDisabled) {\n    return null;\n  }\n\n  /**\n   * Returns a JSX element if document loading is not complete, or an error\n   * occurs, otherwise nothing is returned, indicating that information about\n   * one or more signature will be returned from this component\n   */\n  const renderLoadingOrErrors = () => {\n    let result;\n    if (showSpinner) {\n      result = <Spinner />;\n    } else if (certificateErrorMessage === 'Error reading the local certificate') {\n      result = translate('digitalSignatureVerification.panelMessages.localCertificateError');\n    } else if (certificateErrorMessage === 'Download Failed') {\n      result = translate('digitalSignatureVerification.panelMessages.certificateDownloadError');\n    } else if (!fields.length) {\n      result = translate('digitalSignatureVerification.panelMessages.noSignatureFields');\n    } else {\n      /**\n       * If document has completed loading, there are no errors, and there are\n       * signature fields, this function does not need to return anything\n       */\n      return null;\n    }\n\n    return (\n      <div className=\"empty-panel-container\">\n        <Icon className=\"empty-icon\" glyph={panelData[panelNames.SIGNATURE].icon}/>\n        <div className=\"empty-message\">{result}</div>\n      </div>\n    );\n  };\n\n  return (\n    <div\n      className=\"Panel SignaturePanel\"\n      data-element=\"signaturePanel\"\n    >\n      {renderLoadingOrErrors()}\n      {\n        !showSpinner && fields.length > 0 && (\n          fields.map((field, index) => {\n            return (\n              <WidgetInfo\n                key={index}\n                name={field.name}\n                collapsible\n                field={field}\n              />\n            );\n          })\n        )\n      }\n    </div>\n  );\n};\n\nexport default SignaturePanel;\n","import SignaturePanel from './SignaturePanel';\nimport Spinner from './Spinner';\nimport { renderPermissionStatus } from './WidgetInfo';\n\nexport default SignaturePanel;\n\nexport {\n  renderPermissionStatus,\n  SignaturePanel,\n  Spinner\n};\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./SignatureValidationModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".open.SignatureValidationModal{visibility:visible}.closed.SignatureValidationModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.SignatureValidationModal{position:fixed;left:0;bottom:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.SignatureValidationModal .modal-container .wrapper .modal-content{padding:10px}.SignatureValidationModal .footer{display:flex;flex-direction:row;justify-content:flex-end;width:100%;margin-top:13px}.SignatureValidationModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.SignatureValidationModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.SignatureValidationModal .footer .modal-button.cancel{color:var(--secondary-button-text);border:1px solid var(--secondary-button-text)}.SignatureValidationModal .footer .modal-button.cancel:hover{background-color:var(--document-background-color);color:var(--secondary-button-hover);border:1px solid var(--secondary-button-hover)}.SignatureValidationModal .footer .modal-button.confirm{margin-left:4px;color:var(--primary-button-text);font-weight:600;background:var(--primary-button)}.SignatureValidationModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover)}.SignatureValidationModal .footer .modal-button.confirm.disabled{background:var(--primary-button)!important;opacity:.5}.SignatureValidationModal .footer .modal-button.secondary-btn-custom{border-radius:4px;border:1px solid var(--primary-button);color:var(--primary-button);padding:2px 20px 4px;cursor:pointer;background-color:#fff}.SignatureValidationModal .footer .modal-button.secondary-btn-custom:hover{color:var(--secondary-button-hover)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureValidationModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureValidationModal .footer .modal-button{padding:23px 8px}}.SignatureValidationModal .swipe-indicator{background:var(--divider);border-radius:2px;height:4px;width:38px;position:absolute;top:12px;margin-left:auto;margin-right:auto;left:0;right:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureValidationModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureValidationModal .swipe-indicator{display:none}}.SignatureValidationModal .container{background:var(--component-background);overflow-y:auto;max-height:100%}@media(max-height:500px){.App:not(.is-web-component) .SignatureValidationModal .container,.SignatureValidationModal .App:not(.is-web-component) .container{overflow:auto;max-height:100%}}@container (max-height: 500px){.App.is-web-component .SignatureValidationModal .container,.SignatureValidationModal .App.is-web-component .container{overflow:auto;max-height:100%}}.SignatureValidationModal .container{display:flex;flex-direction:column;justify-content:space-around;border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);min-width:350px;padding:20px;max-width:630px}.SignatureValidationModal .validation-header{position:relative;display:flex;justify-content:left;align-items:center;padding-bottom:20px;font-size:16px}.SignatureValidationModal .validation-header [data-element=signatureValidationModalCloseButton]{position:absolute;right:0}.SignatureValidationModal .validation-header [data-element=signatureValidationModalCloseButton]:hover{background:none}.SignatureValidationModal .summary-box{position:relative;display:flex;border:1px solid #dee2e6;border-radius:5px;padding:16px;font-weight:700}.SignatureValidationModal .summary-box>:not(:first-child){margin-left:8px}.SignatureValidationModal .validation-header-valid{background-color:#8dd88d}.SignatureValidationModal .validation-header-warning{background-color:#e2b719}.SignatureValidationModal .validation-header-error{background-color:#ff7979}.SignatureValidationModal .validation-header-unknown{background-color:#ddd}.SignatureValidationModal .body{margin-top:16px}.SignatureValidationModal div.body>div.section:first-child{margin-top:0}.SignatureValidationModal div.body>div.section{margin:16px;padding-bottom:16px;border-bottom:1px solid var(--gray-5)}.SignatureValidationModal div.body>div.section:last-child{margin-bottom:0}.SignatureValidationModal div.body>div.section>p{font-size:13px;margin:8px 0}.SignatureValidationModal div.body>div.section>p:last-child{margin:0}.SignatureValidationModal .header{font-weight:700}.SignatureValidationModal .modal-footer{display:flex;justify-content:flex-end;margin-top:32px}.SignatureValidationModal .modal-footer .close-modal-button{background:var(--primary-button);border:1px;border-color:var(--primary-button);border-radius:4px;padding:0 16px;height:32px;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureValidationModal .modal-footer .close-modal-button{height:40px;width:128px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureValidationModal .modal-footer .close-modal-button{height:40px;width:128px}}.SignatureValidationModal .modal-footer .close-modal-button:hover{background:var(--primary-button-hover)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","import React, { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport selectors from 'selectors';\nimport DataElements from 'constants/dataElement';\n\nimport {\n  renderPermissionStatus,\n  Spinner,\n} from 'components/SignaturePanel';\nimport SignatureIcon from 'components/SignaturePanel/SignatureIcon';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nimport actions from 'actions';\n\nimport './SignatureValidationModal.scss';\n\nconst SignatureValidationModal = () => {\n  const containerRef = useRef();\n  const [translate] = useTranslation();\n\n  const [isOpen, verificationResult] = useSelector(\n    (state) => {\n      const { validationModalWidgetName } = state.digitalSignatureValidation;\n      return [\n        selectors.isElementOpen(state, DataElements.SIGNATURE_VALIDATION_MODAL),\n        selectors.getVerificationResult(state, validationModalWidgetName),\n      ];\n    },\n    shallowEqual,\n  );\n\n  const dispatch = useDispatch();\n\n  const closeModal = () => {\n    dispatch(actions.closeElements([DataElements.SIGNATURE_VALIDATION_MODAL]));\n  };\n\n  useOnClickOutside(containerRef, closeModal);\n\n  useEffect(() => {\n    if (isOpen) {\n      dispatch(\n        actions.closeElements([\n          DataElements.SIGNATURE_MODAL,\n          DataElements.LOADING_MODAL,\n          DataElements.PRINT_MODAL,\n          DataElements.ERROR_MODAL,\n          DataElements.PASSWORD_MODAL,\n        ])\n      );\n    }\n  }, [dispatch, isOpen]);\n\n  /**\n   * @todo Figure out if this useEffect is still needed? Component appears to be\n   * operating normally without it.\n   */\n  /*\n  useEffect(() => {\n    const onDigitalSignatureAvailable = widget => {\n      setWidgetName(widget.getField().name);\n      dispatch(actions.openElements(['signatureValidationModal']));\n    };\n\n    core.addEventListener(\n      'digitalSignatureAvailable',\n      onDigitalSignatureAvailable,\n    );\n    return () => core.removeEventListener(\n      'digitalSignatureAvailable',\n      onDigitalSignatureAvailable,\n    );\n  }, [dispatch]);\n  */\n\n  const {\n    badgeIcon,\n    verificationStatus,\n    permissionStatus,\n    isCertification,\n    documentPermission,\n    trustVerificationResultString,\n    timeOfTrustVerificationEnum,\n    trustVerificationTime,\n    digestAlgorithm,\n    digestStatus,\n    documentStatus,\n    trustStatus,\n    signerName,\n  } = verificationResult;\n  const {\n    DigestAlgorithm,\n    DigitalSignatureField,\n    VerificationOptions,\n    VerificationResult,\n  } = window.Core.PDFNet;\n  const {\n    ModificationPermissionsStatus,\n    TrustStatus,\n    DigestStatus,\n    DocumentStatus,\n  } = VerificationResult;\n  const { TimeMode } = VerificationOptions;\n\n  const renderHeader = () => {\n    let status;\n    switch (badgeIcon) {\n      case 'digital_signature_valid':\n        status = translate('digitalSignatureModal.valid');\n        break;\n      case 'digital_signature_warning':\n        status = translate('digitalSignatureModal.unknown');\n        break;\n      case 'digital_signature_error':\n        status = translate('digitalSignatureModal.invalid');\n        break;\n      default:\n        status = translate('digitalSignatureModal.unknown');\n    }\n\n    const typeCapitalized = isCertification\n      ? translate('digitalSignatureModal.Certification')\n      : translate('digitalSignatureModal.Signature');\n\n    const type = isCertification\n      ? translate('digitalSignatureModal.certification')\n      : translate('digitalSignatureModal.signature');\n\n    return (\n      <div>\n        <div className=\"validation-header\">\n          {translate('digitalSignatureModal.title', { type: typeCapitalized })}\n        </div>\n        <div className=\"summary-box\">\n          <SignatureIcon badge={badgeIcon} size=\"medium\"/>\n          <div>\n            {\n              translate(\n                'digitalSignatureModal.summaryBox.summary',\n                {\n                  type,\n                  status,\n                }\n              )\n            }\n            {\n              badgeIcon === 'digital_signature_valid'\n                ? translate(\n                  'digitalSignatureModal.summaryBox.signedBy',\n                  {\n                    name: signerName || translate('digitalSignatureModal.unknown'),\n                    interpolation: { escapeValue: false }\n                  },\n                ) : ''\n            }\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  /**\n   * Returns a message in a <p> tag corresponding to the enum value of\n   * documentPermission, which originates from the invocation of\n   * PDFNet.DigitalSignatureField.getDocumentPermissions\n   */\n  const renderDocumentPermission = () => {\n    if (!documentPermission) {\n      return;\n    }\n\n    let content = '';\n    const editor = isCertification ? 'certifier' : 'signer';\n\n    switch (documentPermission) {\n      case DigitalSignatureField.DocumentPermissions.e_no_changes_allowed:\n        content += translate('digitalSignatureModal.documentPermission.noChangesAllowed', { editor });\n        break;\n      case DigitalSignatureField.DocumentPermissions.e_formfilling_signing_allowed:\n        content += translate('digitalSignatureModal.documentPermission.formfillingSigningAllowed', { editor });\n        break;\n      case DigitalSignatureField.DocumentPermissions.e_annotating_formfilling_signing_allowed:\n        content += translate('digitalSignatureModal.documentPermission.annotatingFormfillingSigningAllowed', { editor });\n        break;\n      case DigitalSignatureField.DocumentPermissions.e_unrestricted:\n        content += translate('digitalSignatureModal.documentPermission.unrestricted', { editor });\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  /**\n   * Returns a message in a <p> tag corresponding to the signature's trust\n   * verification result.\n   *\n   * If trustVerificationResultString is a falsy value (i.e. undefined, null or\n   * empty string), originating from the invocation of\n   * PDFNet.TrustVerificationResult.getResultString, then a message indicating\n   * no trust verification result is rendered.\n   *\n   * If a trust verification result is available, then the based on\n   * timeOfTrustVerificationEnum, which originates from the invocation of\n   * PDFNet.TrustVerificationResult.getTimeOfTrustVerificationEnum, an\n   * appropriate message is rendered\n   */\n  const renderTrustVerification = () => {\n    if (!trustVerificationResultString) {\n      return (\n        <p>{translate('digitalSignatureModal.trustVerification.none')}</p>\n      );\n    }\n\n    let content = '';\n    switch (timeOfTrustVerificationEnum) {\n      case (TimeMode.e_current):\n        content += translate(\n          'digitalSignatureModal.trustVerification.current',\n          { trustVerificationTime }\n        );\n        break;\n      case (TimeMode.e_signing):\n        content += translate(\n          'digitalSignatureModal.trustVerification.signing',\n          { trustVerificationTime }\n        );\n        break;\n      case (TimeMode.e_timestamp):\n        content += translate(\n          'digitalSignatureModal.trustVerification.timestamp',\n          { trustVerificationTime }\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  /**\n   * Returns a message in a <p> tag corresponding to the signature's digest\n   * algorithm, which originates from the invocation of\n   * PDFNet.verificationResult.getDigestAlgorithm\n   */\n  const renderDigestAlgorithm = () => {\n    let content = translate('digitalSignatureModal.digestAlgorithm.preamble');\n\n    switch (digestAlgorithm) {\n      case DigestAlgorithm.Type.e_SHA1:\n        content += 'SHA1.';\n        break;\n      case DigestAlgorithm.Type.e_SHA256:\n        content += 'SHA256.';\n        break;\n      case DigestAlgorithm.Type.e_SHA384:\n        content += 'SHA384.';\n        break;\n      case DigestAlgorithm.Type.e_SHA512:\n        content += 'SHA512.';\n        break;\n      case DigestAlgorithm.Type.e_RIPEMD160:\n        content += 'RIPEMD160.';\n        break;\n      case DigestAlgorithm.Type.e_unknown_digest_algorithm:\n        content = translate('digitalSignatureModal.digestAlgorithm.unknown');\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  /**\n   * Returns a message in a <p> tag corresponding to the boolean trust status of\n   * the signature, which originates from evaluating whether or not the value of\n   * PDFNet.verificationResult.getTrustStatus is set to the enum\n   * PDFNet.verificationResult.trustStatus.e_trust_verified\n   *\n   * Intentionally an un-used function, as @rdjericpdftron has noted that it\n   * is superfluous, but the method has been left behind in-case it could be\n   * leveraged in the future\n   */\n  /*\n  const renderSignerIdentityValidity = () => {\n    let content = translate('digitalSignatureModal.signerIdentity.preamble');\n    if (validSignerIdentity) {\n      content += translate('digitalSignatureModal.signerIdentity.valid');\n    } else {\n      content += translate('digitalSignatureModal.signerIdentity.unknown');\n    }\n    return <p>{content}</p>;\n  };\n  */\n\n  const renderDocumentStatus = () => {\n    let content;\n\n    switch (documentStatus) {\n      case DocumentStatus.e_no_error:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.noError'\n        );\n        break;\n      case DocumentStatus.e_corrupt_file:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.corruptFile'\n        );\n        break;\n      case DocumentStatus.e_unsigned:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.unsigned'\n        );\n        break;\n      case DocumentStatus.e_bad_byteranges:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.badByteRanges'\n        );\n        break;\n      case DocumentStatus.e_corrupt_cryptographic_contents:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.corruptCryptographicContents'\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  const renderDigestStatus = () => {\n    let content;\n\n    switch (digestStatus) {\n      case DigestStatus.e_digest_invalid:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.digestInvalid'\n        );\n        break;\n      case DigestStatus.e_digest_verified:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.digestVerified'\n        );\n        break;\n      case DigestStatus.e_digest_verification_disabled:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.digestVerificationDisabled'\n        );\n        break;\n      case DigestStatus.e_weak_digest_algorithm_but_digest_verifiable:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.weakDigestAlgorithmButDigestVerifiable'\n        );\n        break;\n      case DigestStatus.e_no_digest_status:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.noDigestStatus'\n        );\n        break;\n      case DigestStatus.e_unsupported_encoding:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.unsupportedEncoding'\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  const renderTrustStatus = () => {\n    const verificationType = isCertification\n      ? translate('digitalSignatureVerification.certifier')\n      : translate('digitalSignatureVerification.signer');\n    let content;\n\n    switch (trustStatus) {\n      case TrustStatus.e_trust_verified:\n        content = translate(\n          'digitalSignatureVerification.trustStatus.trustVerified',\n          { verificationType },\n        );\n        break;\n      case TrustStatus.e_untrusted:\n        content = translate(\n          'digitalSignatureVerification.trustStatus.untrusted'\n        );\n        break;\n      case TrustStatus.e_trust_verification_disabled:\n        content = translate(\n          'digitalSignatureVerification.trustStatus.trustVerificationDisabled'\n        );\n        break;\n      case TrustStatus.e_no_trust_status:\n        content = translate(\n          'digitalSignatureVerification.trustStatus.noTrustStatus'\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  const renderDocumentIntegrityHeader = () => (\n    <p\n      className=\"header\"\n    >\n      {translate('digitalSignatureModal.header.documentIntegrity')}\n    </p>\n  );\n\n  const renderIdentitiesTrustHeader = () => (\n    <p\n      className=\"header\"\n    >\n      {translate('digitalSignatureModal.header.identitiesTrust')}\n    </p>\n  );\n\n  const renderGeneralErrorsHeader = () => (\n    <p\n      className=\"header\"\n    >\n      {translate('digitalSignatureModal.header.generalErrors')}\n    </p>\n  );\n\n  const renderDigestStatusHeader = () => (\n    <p\n      className=\"header\"\n    >\n      {translate('digitalSignatureModal.header.digestStatus')}\n    </p>\n  );\n\n  const renderModalBody = () => {\n    if (typeof verificationStatus === 'undefined') {\n      return (\n        <div className=\"center\">\n          <Spinner />\n        </div>\n      );\n    }\n    return (\n      <>\n        <div className=\"body\">\n          <div className=\"section\">\n            {renderDocumentIntegrityHeader()}\n            {\n              renderPermissionStatus({\n                isCertification,\n                ModificationPermissionsStatus,\n                permissionStatus,\n                translate,\n              })\n            }\n            {renderDocumentPermission()}\n          </div>\n          <div className=\"section\">\n            {renderIdentitiesTrustHeader()}\n            {renderTrustStatus()}\n            {renderTrustVerification()}\n          </div>\n          <div className=\"section\">\n            {renderGeneralErrorsHeader()}\n            {renderDocumentStatus()}\n          </div>\n          <div className=\"section\">\n            {renderDigestStatusHeader()}\n            {renderDigestStatus()}\n            {renderDigestAlgorithm()}\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button\n            className=\"close-modal-button\"\n            onClick={closeModal}\n          >\n            OK\n          </button>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div\n      className={classNames({\n        Modal: true,\n        SignatureValidationModal: true,\n        open: isOpen,\n        closed: !isOpen,\n      })}\n      data-element={DataElements.SIGNATURE_VALIDATION_MODAL}\n    >\n      <div className=\"container\" ref={containerRef}>\n        {renderHeader()}\n        {renderModalBody()}\n      </div>\n    </div>\n  );\n};\n\nexport default SignatureValidationModal;\n","import SignatureValidationModal from './SignatureValidationModal';\n\nexport default SignatureValidationModal;\n"],"sourceRoot":""}