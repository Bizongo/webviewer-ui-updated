{"version":3,"sources":["webpack:///./src/components/BookmarksPanel/BookmarksPanel.scss?dea7","webpack:///./src/components/BookmarksPanel/BookmarksPanel.scss","webpack:///./src/components/Bookmark/Bookmark.js","webpack:///./src/components/Bookmark/index.js","webpack:///./src/components/BookmarksPanel/BookmarksPanel.js","webpack:///./src/components/BookmarksPanel/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","___CSS_LOADER_API_IMPORT___","propTypes","text","PropTypes","string","isRequired","label","defaultLabel","pageIndex","number","isAdding","bool","isMultiSelectionMode","setSelected","func","onSave","onRemove","onCancel","panelSelector","Bookmark","_ref","t","_slicedToArray","useTranslation","_useState2","useState","isEditing","setIsEditing","_useState4","isDefault","setIsDefault","_useState6","bookmarkText","setBookmarkText","_useState8","isContextMenuOpen","setContextMenuOpen","_useState10","undefined","clearSingleClick","setClearSingleClick","inputRef","useRef","isRenameButtonDisabled","onSaveBookmark","trim","onCancelBookmark","setCurrentPage","core","useEffect","current","focus","select","React","createElement","DataElementWrapper","className","classNames","tabIndex","onKeyDown","e","key","onClick","detail","setTimeout","onDoubleClick","clearTimeout","Choice","type","id","concat","stopPropagation","onChange","target","checked","Fragment","Button","dataElement","img","MoreOptionsContextMenuPopup","anchorButton","shouldDisplayDeleteButton","onClosePopup","onRenameClick","onDeleteClick","name","ref","placeholder","aria-label","value","isSubmitType","disabled","BookmarksPanel","_bookmarks$currentPag","_useSelector2","useSelector","state","selectors","isElementDisabled","DataElements","BOOKMARK_PANEL","getBookmarks","getCurrentPage","getPageLabels","isBookmarkIconShortcutVisible","shallowEqual","isDisabled","bookmarks","currentPageIndex","pageLabels","isAddingNewBookmark","setAddingNewBookmark","setMultiSelectionMode","selectingBookmarks","setSelectingBookmarks","dispatch","useDispatch","setBookmarkIconShortcutVisibility","pageIndexes","Object","keys","map","parseInt","index","includes","filter","bm","onRemoveBookmarks","title","confirmationWarning","message","onConfirm","actions","removeBookmark","confirmBtnText","showWarningMessage","data-element","BOOKMARK_MULTI_SELECT","BOOKMARK_SHORTCUT_OPTION","isSwitch","newText","addBookmark","editBookmark","val","find","_toConsumableArray","BOOKMARK_ADD_NEW_BUTTON_CONTAINER","BOOKMARK_ADD_NEW_BUTTON"],"mappings":"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","file":"chunks/52.chunk.js","sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./BookmarksPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.BookmarksPanel{display:flex;flex-direction:column;flex:1}.BookmarksPanel .bookmark-switch{-webkit-font-smoothing:antialiased;margin-top:var(--padding-medium);padding-left:4px}.BookmarksPanel .bookmark-switch label{font-size:11px}.BookmarksPanel .bookmark-outline-single-container{margin-top:var(--padding-medium)}.BookmarksPanel .msg-no-bookmark-outline{margin-top:var(--padding)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport core from 'core';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button';\nimport DataElementWrapper from '../DataElementWrapper';\nimport MoreOptionsContextMenuPopup from '../MoreOptionsContextMenuPopup';\nimport Choice from 'components/Choice';\n\nconst propTypes = {\n  text: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  defaultLabel: PropTypes.string,\n  pageIndex: PropTypes.number.isRequired,\n  isAdding: PropTypes.bool,\n  isMultiSelectionMode: PropTypes.bool,\n  setSelected: PropTypes.func,\n  onSave: PropTypes.func.isRequired,\n  onRemove: PropTypes.func,\n  onCancel: PropTypes.func,\n  panelSelector: PropTypes.string,\n};\n\nconst Bookmark = ({\n  text,\n  label,\n  defaultLabel,\n  pageIndex,\n  isAdding,\n  isMultiSelectionMode,\n  setSelected,\n  onSave,\n  onRemove,\n  onCancel,\n  panelSelector,\n}) => {\n  const [t] = useTranslation();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDefault, setIsDefault] = useState(false);\n  const [bookmarkText, setBookmarkText] = useState(text);\n  const [isContextMenuOpen, setContextMenuOpen] = useState(false);\n  const [clearSingleClick, setClearSingleClick] = useState(undefined);\n  const inputRef = useRef();\n\n  const isRenameButtonDisabled = () => {\n    return !bookmarkText || text === bookmarkText;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      if (isAdding || (isEditing && !isRenameButtonDisabled())) {\n        onSaveBookmark();\n      }\n    }\n    if (e.key === 'Escape') {\n      onCancelBookmark();\n    }\n  };\n\n  const onSaveBookmark = () => {\n    setIsEditing(false);\n    onSave(bookmarkText.trim() === '' ? t('message.untitled') : bookmarkText);\n  };\n\n  const onCancelBookmark = () => {\n    setIsEditing(false);\n    // on cancel reset local bookmark text\n    isEditing && setBookmarkText(text);\n    isAdding && onCancel();\n  };\n\n  const setCurrentPage = (pageIndex) => {\n    core.setCurrentPage(pageIndex + 1);\n  };\n\n  useEffect(() => {\n    if (bookmarkText !== text) {\n      setBookmarkText(text);\n    }\n  }, [text]);\n\n  useEffect(() => {\n    if (isAdding || isEditing) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n\n    if (!isAdding && !isEditing) {\n      setIsDefault(true);\n    } else {\n      setIsDefault(false);\n    }\n  }, [isEditing]);\n\n  return (\n    <DataElementWrapper\n      className={classNames({\n        'bookmark-outline-single-container': true,\n        'editing': isAdding || isEditing,\n        'default': isDefault,\n        'hover': isContextMenuOpen,\n      })}\n      tabIndex={0}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') {\n          setCurrentPage(pageIndex);\n        }\n      }}\n      onClick={(e) => {\n        if (isDefault && e.detail === 1) {\n          setClearSingleClick(setTimeout(() => {\n            setCurrentPage(pageIndex);\n          }, 300));\n        }\n      }}\n      onDoubleClick={() => {\n        if (isDefault) {\n          clearTimeout(clearSingleClick);\n        }\n      }}\n    >\n      {isMultiSelectionMode &&\n        <Choice\n          type=\"checkbox\"\n          className=\"bookmark-outline-checkbox\"\n          id={`bookmark-checkbox-${pageIndex + 1}`}\n          onClick={(e) => e.stopPropagation()}\n          onChange={(e) => setSelected(pageIndex, e.target.checked)}\n        />\n      }\n\n      <div className=\"bookmark-outline-label-row\">\n        <div className=\"bookmark-outline-label\">{(isAdding || isEditing) ? label : defaultLabel}</div>\n\n        {isDefault &&\n          <>\n            {isMultiSelectionMode &&\n              <Button\n                className=\"bookmark-outline-more-button\"\n                dataElement={`bookmark-more-button-${pageIndex}`}\n                img=\"icon-pencil-line\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setIsEditing(true);\n                }}\n                tabIndex={-1}\n              />\n            }\n            {!isMultiSelectionMode &&\n              <Button\n                className=\"bookmark-outline-more-button\"\n                dataElement={`bookmark-more-button-${panelSelector}-${pageIndex}`}\n                img=\"icon-tool-more\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setContextMenuOpen(true);\n                }}\n                tabIndex={-1}\n              />\n            }\n            {isContextMenuOpen && (\n              <MoreOptionsContextMenuPopup\n                type={'bookmark'}\n                anchorButton={`bookmark-more-button-${panelSelector}-${pageIndex}`}\n                shouldDisplayDeleteButton={true}\n                onClosePopup={() => setContextMenuOpen(false)}\n                onRenameClick={() => {\n                  setContextMenuOpen(false);\n                  setIsEditing(true);\n                }}\n                onDeleteClick={() => {\n                  setContextMenuOpen(false);\n                  onRemove(pageIndex);\n                }}\n              />\n            )}\n\n            <div\n              className=\"bookmark-outline-text bookmark-text-input\"\n              onDoubleClick={() => setIsEditing(true)}\n            >\n              {text}\n            </div>\n          </>\n        }\n\n        {(isAdding || isEditing) &&\n          <>\n            <input\n              type=\"text\"\n              name=\"bookmark\"\n              ref={inputRef}\n              className=\"bookmark-outline-input bookmark-text-input\"\n              placeholder={t('component.bookmarkTitle')}\n              aria-label={t('action.name')}\n              value={bookmarkText}\n              onKeyDown={handleKeyDown}\n              onChange={(e) => setBookmarkText(e.target.value)}\n            />\n\n            <div className=\"bookmark-outline-editing-controls\">\n              <Button\n                className=\"bookmark-outline-cancel-button\"\n                label={t('action.cancel')}\n                onClick={onCancelBookmark}\n              />\n              {isAdding &&\n                <Button\n                  className=\"bookmark-outline-save-button\"\n                  label={t('action.add')}\n                  isSubmitType\n                  onClick={onSaveBookmark}\n                />\n              }\n              {isEditing &&\n                <Button\n                  className=\"bookmark-outline-save-button\"\n                  label={t('action.save')}\n                  isSubmitType\n                  disabled={isRenameButtonDisabled()}\n                  onClick={onSaveBookmark}\n                />\n              }\n            </div>\n          </>\n        }\n      </div>\n    </DataElementWrapper>\n  );\n};\n\nBookmark.propTypes = propTypes;\n\nexport default Bookmark;\n","import Bookmark from './Bookmark';\n\nexport default Bookmark;\n","import React, { useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport Bookmark from 'components/Bookmark';\nimport Button from 'components/Button';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport DataElements from 'constants/dataElement';\nimport Choice from 'components/Choice';\n\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\n\nimport '../../constants/bookmarksOutlinesShared.scss';\nimport './BookmarksPanel.scss';\n\nconst BookmarksPanel = ({ panelSelector }) => {\n  const [\n    isDisabled,\n    bookmarks,\n    currentPageIndex,\n    pageLabels,\n    isBookmarkIconShortcutVisible\n  ] = useSelector(\n    (state) => [\n      selectors.isElementDisabled(state, DataElements.BOOKMARK_PANEL),\n      selectors.getBookmarks(state),\n      selectors.getCurrentPage(state) - 1,\n      selectors.getPageLabels(state),\n      selectors.isBookmarkIconShortcutVisible(state),\n    ],\n    shallowEqual,\n  );\n\n  const [isAddingNewBookmark, setAddingNewBookmark] = useState(false);\n  const [isMultiSelectionMode, setMultiSelectionMode] = useState(false);\n  const [selectingBookmarks, setSelectingBookmarks] = useState([]);\n\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isBookmarkIconShortcutVisible && !isDisabled) {\n      core.setBookmarkIconShortcutVisibility(true);\n    } else {\n      core.setBookmarkIconShortcutVisibility(false);\n    }\n  }, [isDisabled, isBookmarkIconShortcutVisible]);\n\n  const pageIndexes = Object.keys(bookmarks).map((pageIndex) => parseInt(pageIndex, 10));\n\n  useEffect(() => {\n    // if bookmark is deleted from the shortcut, should also remove from selectingBookmarks\n    selectingBookmarks.forEach((index) => {\n      if (!pageIndexes.includes(index)) {\n        setSelectingBookmarks(selectingBookmarks.filter((bm) => bm !== index));\n      }\n    });\n\n    const shouldResetMultiSelectMode = pageIndexes.length === 0;\n    if (shouldResetMultiSelectMode) {\n      setMultiSelectionMode(false);\n    }\n  }, [bookmarks]);\n\n  const onRemoveBookmarks = (pageIndexes) => {\n    const title = t('warning.deleteBookmark.title');\n    const message = t('warning.deleteBookmark.message');\n    const confirmationWarning = {\n      message,\n      title,\n      onConfirm: () => {\n        pageIndexes.forEach((pageIndex) => dispatch(actions.removeBookmark(pageIndex)));\n        setSelectingBookmarks([]);\n      },\n      confirmBtnText: t('action.delete'),\n    };\n    dispatch(actions.showWarningMessage(confirmationWarning));\n  };\n\n  if (isDisabled) {\n    return null;\n  }\n\n  return (\n    <div\n      className={`Panel BookmarksPanel bookmark-outline-panel ${panelSelector}`}\n      data-element={DataElements.BOOKMARK_PANEL}\n    >\n      <div className=\"bookmark-outline-panel-header\">\n        <div className=\"header-title\">\n          {t('component.bookmarksPanel')}\n        </div>\n        {!isMultiSelectionMode &&\n          <Button\n            className=\"bookmark-outline-control-button\"\n            dataElement={DataElements.BOOKMARK_MULTI_SELECT}\n            label={t('action.edit')}\n            disabled={isAddingNewBookmark || pageIndexes.length === 0}\n            onClick={() => setMultiSelectionMode(true)}\n          />\n        }\n        {isMultiSelectionMode &&\n          <Button\n            className=\"bookmark-outline-control-button\"\n            dataElement={DataElements.BOOKMARK_MULTI_SELECT}\n            label={t('option.bookmarkOutlineControls.done')}\n            disabled={isAddingNewBookmark}\n            onClick={() => {\n              setMultiSelectionMode(false);\n              setSelectingBookmarks([]);\n            }}\n          />\n        }\n      </div>\n\n      <Choice\n        dataElement={DataElements.BOOKMARK_SHORTCUT_OPTION}\n        type=\"checkbox\"\n        isSwitch\n        id=\"bookmark-view-option\"\n        className=\"bookmark-switch\"\n        label={t('message.viewBookmark')}\n        checked={isBookmarkIconShortcutVisible}\n        onChange={(e) => dispatch(actions.setBookmarkIconShortcutVisibility(e.target.checked))}\n      />\n\n      {!isAddingNewBookmark && pageIndexes.length === 0 && (\n        <div className=\"msg msg-no-bookmark-outline\">{t('message.noBookmarks')}</div>\n      )}\n\n      <div className=\"bookmark-outline-row\">\n        {isAddingNewBookmark &&\n          <Bookmark\n            isAdding\n            label={`${t('component.bookmarkPage')} ${pageLabels[currentPageIndex]} - ${t('component.bookmarkTitle')}`}\n            text={bookmarks[currentPageIndex] ?? ''}\n            pageIndex={currentPageIndex}\n            onSave={(newText) => {\n              dispatch(actions.addBookmark(currentPageIndex, newText));\n              setAddingNewBookmark(false);\n            }}\n            onCancel={() => setAddingNewBookmark(false)}\n            panelSelector={panelSelector}\n          />\n        }\n\n        {pageIndexes.map((pageIndex) => (\n          <Bookmark\n            key={pageIndex}\n            panelSelector={panelSelector}\n            isMultiSelectionMode={isMultiSelectionMode}\n            label={`${t('component.bookmarkPage')} ${pageLabels[pageIndex]} - ${t('component.bookmarkTitle')}`}\n            defaultLabel={`${t('component.bookmarkPage')} ${pageLabels[pageIndex]}`}\n            text={bookmarks[pageIndex]}\n            pageIndex={pageIndex}\n            onSave={(newText) => dispatch(actions.editBookmark(pageIndex, newText))}\n            onRemove={(index) => onRemoveBookmarks([index])}\n            setSelected={(index, val) => {\n              if (selectingBookmarks.find((bm) => bm === index)) {\n                if (!val) {\n                  setSelectingBookmarks(selectingBookmarks.filter((bm) => bm !== index));\n                }\n              } else {\n                if (val) {\n                  setSelectingBookmarks([...selectingBookmarks, index]);\n                }\n              }\n            }}\n          />\n        ))}\n      </div>\n\n      <DataElementWrapper\n        className=\"bookmark-outline-footer\"\n        dataElement={DataElements.BOOKMARK_ADD_NEW_BUTTON_CONTAINER}\n      >\n        {isMultiSelectionMode ?\n          <>\n            <Button\n              className=\"multi-selection-button\"\n              img=\"icon-menu-add\"\n              disabled={selectingBookmarks.length > 0 || !!bookmarks[currentPageIndex] || isAddingNewBookmark}\n              onClick={() => setAddingNewBookmark(true)}\n            />\n            <Button\n              className=\"multi-selection-button\"\n              img=\"icon-delete-line\"\n              disabled={selectingBookmarks.length === 0}\n              onClick={() => onRemoveBookmarks(selectingBookmarks)}\n            />\n          </>\n          :\n          <Button\n            className=\"bookmark-outline-control-button add-new-button\"\n            img=\"icon-menu-add\"\n            dataElement={DataElements.BOOKMARK_ADD_NEW_BUTTON}\n            label={`${t('action.add')} ${t('component.bookmarkPanel')}`}\n            disabled={isAddingNewBookmark || !!bookmarks[currentPageIndex]}\n            onClick={() => setAddingNewBookmark(true)}\n          />\n        }\n      </DataElementWrapper>\n    </div>\n  );\n};\n\nexport default BookmarksPanel;\n","import BookmarksPanel from './BookmarksPanel';\n\nexport default BookmarksPanel;\n"],"sourceRoot":""}