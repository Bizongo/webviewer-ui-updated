{"version":3,"sources":["webpack:///./src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.js","webpack:///./src/components/CollapsiblePanelGroup/index.js","webpack:///./src/helpers/applyRedactions.js","webpack:///./src/components/ReactSelectWebComponentProvider/ReactSelectWebComponentProvider.js","webpack:///./src/components/ReactSelectWebComponentProvider/index.js","webpack:///./src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.scss?d533","webpack:///./src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.scss","webpack:///./src/components/RedactionPanel/RedactionPanel.scss?3f31","webpack:///./src/components/RedactionPanel/RedactionPanel.scss","webpack:///./src/components/RedactionPageGroup/RedactionItem/RedactionItem.scss?dca7","webpack:///./src/components/RedactionPageGroup/RedactionItem/RedactionItem.scss","webpack:///./src/components/RedactionPageGroup/RedactionPageGroup.scss?ec4c","webpack:///./src/components/RedactionPageGroup/RedactionPageGroup.scss","webpack:///./src/components/RedactionSearchOverlay/RedactionSearchOverlay.scss?5ab6","webpack:///./src/components/RedactionSearchOverlay/RedactionSearchOverlay.scss","webpack:///./src/components/RedactionSearchResultGroup/RedactionSearchResult/RedactionSearchResult.scss?6cbf","webpack:///./src/components/RedactionSearchResultGroup/RedactionSearchResult/RedactionSearchResult.scss","webpack:///./src/components/RedactionSearchResultGroup/RedactionSearchResultGroup.scss?8831","webpack:///./src/components/RedactionSearchResultGroup/RedactionSearchResultGroup.scss","webpack:///./src/components/RedactionSearchResults/RedactionSearchResults.scss?0b21","webpack:///./src/components/RedactionSearchResults/RedactionSearchResults.scss","webpack:///./src/components/RedactionPanel/RedactionPanelContext.js","webpack:///./src/components/RedactionTextPreview/RedactionTextPreviewContainer.js","webpack:///./src/components/RedactionTextPreview/index.js","webpack:///./src/components/RedactionPageGroup/RedactionItem/RedactionItem.js","webpack:///./src/components/RedactionPageGroup/RedactionItem/RedactionItemContainer.js","webpack:///./src/components/RedactionPageGroup/RedactionItem/index.js","webpack:///./src/components/RedactionPageGroup/RedactionPageGroup.js","webpack:///./src/components/RedactionPageGroup/RedactionPageGroupContainer.js","webpack:///./src/components/RedactionPageGroup/index.js","webpack:///./src/components/RedactionPanel/RedactionPanel.js","webpack:///./src/components/CreatableMultiSelect/CreatableMultiSelect.js","webpack:///./src/components/CreatableMultiSelect/index.js","webpack:///./src/components/RedactionSearchOverlay/RedactionSearchMultiSelect/RedactionSearchMultiSelect.js","webpack:///./src/components/RedactionSearchOverlay/RedactionSearchMultiSelect/index.js","webpack:///./src/components/RedactionSearchOverlay/RedactionSearchOverlay.js","webpack:///./src/helpers/multiSearch.js","webpack:///./src/components/RedactionSearchOverlay/RedactionSearchOverlayContainer.js","webpack:///./src/components/RedactionSearchOverlay/index.js","webpack:///./src/components/RedactionSearchResultGroup/RedactionSearchResult/RedactionSearchResult.js","webpack:///./src/components/RedactionSearchResultGroup/RedactionSearchResult/index.js","webpack:///./src/components/RedactionSearchResultGroup/RedactionSearchResult/RedactionSearchResultContainer.js","webpack:///./src/components/RedactionSearchResultGroup/RedactionSearchResultGroup.js","webpack:///./src/components/RedactionSearchResultGroup/index.js","webpack:///./src/constants/searchStatus.js","webpack:///./src/components/RedactionSearchResults/RedactionSearchResults.js","webpack:///./src/components/RedactionSearchResults/RedactionSearchResultsContainer.js","webpack:///./src/components/RedactionSearchResults/index.js","webpack:///./src/components/RedactionSearchPanel/RedactionSearchPanel.js","webpack:///./src/hooks/useOnRedactionSearchCompleted/useOnRedactionSearchCompleted.js","webpack:///./src/hooks/useOnRedactionSearchCompleted/index.js","webpack:///./src/components/RedactionSearchPanel/index.js","webpack:///./src/components/RedactionSearchPanel/RedactionSearchPanelContainer.js","webpack:///./src/components/RedactionPanel/RedactionPanelContainer.js","webpack:///./src/components/RedactionPanel/index.js"],"names":["CollapsiblePanelGroup","props","header","children","className","role","style","_useState2","_slicedToArray","useState","isExpanded","setIsExpanded","t","useTranslation","React","createElement","Button","title","img","onClick","noop","annotations","onRedactionCompleted","arguments","length","undefined","activeDocumentViewerKey","dispatch","core","isWebViewerServerDocument","webViewerServerApply","webViewerApply","applyRedactions","then","results","url","downloadPdf","filename","includeAnnotations","externalURL","console","warn","warning","message","i18next","confirmBtnText","onConfirm","err","fireError","Promise","resolve","actions","showWarningMessage","EmotionNonceProvider","_NonceProvider","_this","_classCallCheck","_len","args","Array","_key","_defineProperty","_callSuper","concat","nonce","createCache","container","_inherits","NonceProvider","ReactSelectWebComponentProvider","_ref","window","isApryseWebViewerWebComponent","getRootNode","api","content","__esModule","default","module","i","options","styleTag","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","___CSS_LOADER_API_IMPORT___","RedactionPanelContext","createContext","RedactionPanelProvider","selectedRedactionItemId","setSelectedRedactionItemId","_useState4","isRedactionSearchActive","setIsRedactionSearchActive","_useState6","activeSearchResultIndex","setActiveSearchResultIndex","useEffect","onAnnotationSelected","action","redactionAnnotations","filter","annotation","Subject","selectedAnnotationId","Id","activeSearchResultChanged","newActiveSearchResult","newActiveSearchResultIndex","getPageSearchResults","findIndex","searchResult","isSearchResultEqual","addEventListener","removeEventListener","value","Provider","RedactionTextPreview","redactionPanelWidth","useSelector","state","selectors","getRedactionPanelWidth","shallowEqual","NoteTextPreview","_extends","panelWidth","comment","RedactionItem","iconColor","author","dateFormat","language","onRedactionItemDelete","onRedactionItemSelection","textPreview","isSelected","timezone","date","getLatestActivityDate","datetimeStr","toLocaleString","timeZone","Date","redactionPreview","formattedDate","dayjs","locale","format","dateAndAuthor","classNames","label","_annotation$icon","icon","redactionType","redactionTypeMap","linesToBreak","getContents","onKeyUp","event","key","tabIndex","Icon","glyph","color","OverlayText","marginLeft","ariaLabel","memo","_useContext","useContext","_useSelector2","getNoteDateFormat","getCurrentLanguage","getCustomNoteSelectionFunction","getTimezone","customNoteSelectionFunction","getCustomData","StrokeColor","toString","getDisplayAuthor","useCallback","deselectAllAnnotations","selectAnnotation","jumpToAnnotation","deleteAnnotations","RedactionPageGroup","pageNumber","redactionItems","map","redactionItem","sortedRedactionItems","setSortedRedactionItems","getSortStrategies","getSortedNotes","RedactionPanel","applyAllRedactions","deleteAllRedactionAnnotations","redactionTypesDictionary","redactionPageMap","setRedactionPageMap","redactionPageNumbers","setRedactionPageNumbers","isTestMode","mapAnnotationToRedactionType","PageNumber","_toConsumableArray","Object","keys","testModeProps","noRedactionAnnotations","redactAllButtonClassName","disabled","clearAllButtonClassName","Fragment","initialItemCount","Virtuoso","data","itemContent","index","aria-label","CreatableMultiSelect","CreatableSelect","isMulti","RedactionOption","components","Option","MultiValueLabel","display","height","RedactionSearchMultiSelect","activeTheme","redactionSearchOptions","redactionGroup","styles","isDarkMode","groupHeading","base","_objectSpread","textTransform","fontSize","paddingBottom","paddingLeft","paddingTop","group","padding","menu","menuList","backgroundColor","multiValue","borderRadius","option","isFocused","valueContainer","maxHeight","overflowY","control","minHeight","borderColor","placeholder","input","getStyles","IndicatorsContainer","formatCreateLabel","buildSearchOptions","searchTerms","textSearch","caseSensitive","searchTerm","type","regex","ignoreCase","RedactionSearchOverlay","setSearchTerms","executeRedactionSearch","DataElementWrapper","dataElement","onFocus","onCreateOption","newValue","textTerm","updatedSearchTerms","onChange","multiSearch","store","getState","redactionSearchPatterns","getRedactionSearchPatterns","searchOptionsMap","reduce","_redactionSearchPatte","searchArray","searchType","searchRegex","source","searchString","join","searchTextFullFactory","searchTextFull","clearSearchResults","multiSearchFactory","useStore","getActiveTheme","values","pattern","RedactionSearchResult","isChecked","onClickResult","isActive","displayResult","ambientStr","resultStrStart","resultStrEnd","resultStr","searchValue","slice","textBeforeSearchValue","textAfterSearchValue","displayRedactionSearchResult","searchResultClassname","active","paddingRight","Choice","checked","checkResult","setActiveSearchResult","RedactionSearchResultGroup","searchResults","selectedSearchResultIndexes","setSelectedSearchResultIndexes","groupResultIndexes","result","allItemsChecked","setAllItemsChecked","allResultsSelected","allSelected","currentIndex","checkAllResults","target","resultIndex","RedactionSearchResults","redactionSearchResults","searchStatus","onCancelSearch","isProcessingRedactionResults","markSelectedResultsForRedaction","redactSelectedResults","redactionSearchResultPageMap","setRedactionSearchResultPageMap","selectedSearchResultIndexesMap","setSelectedSearchResultIndexesMap","selectedIndexes","setSelectedIndexes","pageNum","selectedIndexesMap","redactionSearchResult","noResults","isEmptyList","resultsContainerClass","emptyList","redactAllButtonClass","markAllForRedactionButtonClass","shouldShowResultsCounterOptions","SearchStatus","flexGrow","Spinner","width","searchResultIndexMap","resultGroupPageNumbers","renderSearchResults","createRedactionAnnotations","activeToolStyles","FillColor","redaction","Core","Annotations","RedactionAnnotation","page_num","Quads","quads","quad","getPoints","setContents","result_str","Author","getCurrentUser","setCustomData","defaultRedactionStyles","Color","RedactionSearchResultsContainer","useDispatch","getActiveToolStyles","getActiveToolName","activeToolName","includes","getAnnotationManager","addAnnotations","RedactionSearchPanel","clearRedactionSearchResults","useOnRedactionSearchCompleted","setSearchStatus","setRedactionSearchResults","setIsProcessingRedactionResults","searchPatterns","useMemo","mapResultToType","resultType","find","test","_ref$icon","onSearchResultsChanged","mappedResults","searchInProgressEventHandler","isSearching","setTimeout","_useOnRedactionSearch","RedactionPanelContainer","isElementOpen","isElementDisabled","isInDesktopOnlyMode","getCustomApplyRedactionsHandler","isOpen","isDisabled","customApplyRedactionsHandler","isMobile","isMobileSize","redactionAnnotationsList","defaultRedactionTypes","closeRedactionPanel","tempDataElement","isCustomPanel","closeElement","minWidth","renderNull","setRenderNull","timeout","clearTimeout","originalApplyRedactions","callOnRedactionCompleted","RedactionPanelContainerWithProvider"],"mappings":"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","file":"chunks/30.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'components/Button';\nimport { useTranslation } from 'react-i18next';\nimport './CollapsiblePanelGroup.scss';\n\nconst CollapsiblePanelGroup = (props) => {\n  const {\n    header,\n    children,\n    className,\n    role,\n    style,\n  } = props;\n\n  const [isExpanded, setIsExpanded] = useState(true);\n  const { t } = useTranslation();\n\n  return (\n    <div className={className} role={role} style={style}>\n      <div className=\"collapsible-page-group-header\">\n        {header()}\n        <Button\n          title={isExpanded ? t('redactionPanel.collapse') : t('redactionPanel.expand')}\n          img={isExpanded ? 'icon-chevron-up' : 'icon-chevron-down'}\n          className=\"expand-arrow\"\n          onClick={() => setIsExpanded(!isExpanded)}\n        />\n      </div>\n      {isExpanded && children}\n    </div>\n  );\n};\n\nexport default CollapsiblePanelGroup;","import CollapsiblePanelGroup from './CollapsiblePanelGroup';\n\nexport default CollapsiblePanelGroup;","import core from 'core';\nimport i18next from 'i18next';\n\nimport actions from 'actions';\nimport { fireError } from 'helpers/fireEvent';\nimport downloadPdf from 'helpers/downloadPdf';\n\nfunction noop() { }\n\nexport default (annotations, onRedactionCompleted = noop, activeDocumentViewerKey = 1) => (dispatch) => {\n  if (core.isWebViewerServerDocument()) {\n    // when are using Webviewer Server, it'll download the redacted document\n    return webViewerServerApply(annotations, dispatch, activeDocumentViewerKey);\n  }\n  return webViewerApply(annotations, onRedactionCompleted, dispatch, activeDocumentViewerKey);\n};\n\nconst webViewerServerApply = (annotations, dispatch, activeDocumentViewerKey) => core.applyRedactions(annotations, activeDocumentViewerKey).then((results) => {\n  if (results && results.url) {\n    return downloadPdf(dispatch, {\n      filename: 'redacted.pdf',\n      includeAnnotations: true,\n      externalURL: results.url,\n    });\n  }\n  console.warn('WebViewer Server did not return a valid result');\n});\n\nconst webViewerApply = (annotations, onRedactionCompleted, dispatch, activeDocumentViewerKey) => {\n  const message = i18next.t('warning.redaction.applyMessage');\n  const title = i18next.t('warning.redaction.applyTile');\n  const confirmBtnText = i18next.t('action.apply');\n\n  const warning = {\n    message,\n    title,\n    confirmBtnText,\n    onConfirm: () => {\n      core.applyRedactions(annotations, activeDocumentViewerKey)\n        .then(() => {\n          onRedactionCompleted();\n        })\n        .catch((err) => fireError(err));\n      return Promise.resolve();\n    },\n  };\n\n  return dispatch(actions.showWarningMessage(warning));\n};\n","import React from 'react';\nimport { NonceProvider } from 'react-select';\nimport createCache from '@emotion/cache';\nimport getRootNode from 'helpers/getRootNode';\n\nclass EmotionNonceProvider extends NonceProvider {\n  createEmotionCache = (nonce) => {\n    return createCache({ nonce, container: this.props.container });\n  };\n}\n\nconst ReactSelectWebComponentProvider = ({ children }) => (\n  window.isApryseWebViewerWebComponent ?\n    <EmotionNonceProvider container={getRootNode()}>\n      {children}\n    </EmotionNonceProvider>\n    : children\n);\n\nexport default ReactSelectWebComponentProvider;","import ReactSelectWebComponentProvider from './ReactSelectWebComponentProvider';\n\nexport default ReactSelectWebComponentProvider;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./CollapsiblePanelGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".collapsible-page-group-header{display:flex;justify-content:space-between;align-items:baseline}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./RedactionPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.RedactionPanel{padding:16px 16px 0;display:flex;flex-direction:column}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel{width:100%;min-width:100%;padding-top:0}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .close-container{display:flex;align-items:center;justify-content:flex-end;height:64px;width:100%;padding-right:12px}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .close-container .close-icon-container{cursor:pointer}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .close-container .close-icon-container .close-icon{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel{width:100%;min-width:100%;padding-top:0}.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .close-container{display:flex;align-items:center;justify-content:flex-end;height:64px;width:100%;padding-right:12px}.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .close-container .close-icon-container{cursor:pointer}.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .close-container .close-icon-container .close-icon{width:24px;height:24px}}.RedactionPanel .marked-redaction-counter{flex:0 1 19px;margin-top:24px;margin-bottom:12px;font-size:16px}.RedactionPanel .marked-redaction-counter span{font-weight:700}.RedactionPanel .no-marked-redactions{display:flex;flex-direction:column;align-items:center;flex:1 1 auto}.RedactionPanel .no-marked-redactions .msg{text-align:center}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .no-marked-redactions .msg{line-height:15px;width:146px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .no-marked-redactions .msg{line-height:15px;width:146px}}.RedactionPanel .no-marked-redactions .empty-icon,.RedactionPanel .no-marked-redactions .empty-icon svg{width:65px;height:83px}.RedactionPanel .no-marked-redactions .empty-icon *{fill:var(--gray-5);color:var(--gray-5)}.RedactionPanel .redaction-panel-controls{flex:0 0 57px;margin-left:-16px;padding-top:13px;border-top:1px solid var(--divider);display:flex;background-color:var(--component-background);width:inherit;justify-content:flex-end;padding-right:16px}.RedactionPanel .redaction-panel-controls .redact-all-marked{padding:0;border:none;background-color:transparent;background-color:var(--primary-button);color:var(--primary-button-text);border-radius:4px;height:32px;width:90px;cursor:pointer}:host(:not([data-tabbing=true])) .RedactionPanel .redaction-panel-controls .redact-all-marked,html:not([data-tabbing=true]) .RedactionPanel .redaction-panel-controls .redact-all-marked{outline:none}.RedactionPanel .redaction-panel-controls .redact-all-marked.disabled{opacity:.5;cursor:not-allowed}.RedactionPanel .redaction-panel-controls .clear-all-marked{color:var(--secondary-button-text);background-color:transparent;border:none;height:32px;width:70px;padding:0 5px 0 0;cursor:pointer}:host(:not([data-tabbing=true])) .RedactionPanel .redaction-panel-controls .clear-all-marked,html:not([data-tabbing=true]) .RedactionPanel .redaction-panel-controls .clear-all-marked{outline:none}.RedactionPanel .redaction-panel-controls .clear-all-marked.disabled{opacity:.5;cursor:not-allowed}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .redaction-panel-controls{left:0}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .redaction-panel-controls{left:0}}.RedactionPanel .redaction-group-container{overflow-y:scroll;flex:1 1 auto}.flx-Panel-container .RedactionPanel{height:100%;padding:unset}.flx-Panel-container .RedactionPanel .redaction-panel-controls{margin-right:-16px;padding-bottom:16px}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js!./RedactionItem.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".redaction-item{display:flex;align-items:center;padding:12px 16px}.redaction-item:hover{background-color:var(--view-header-button-hover);cursor:pointer}.redaction-item-selected{background-color:var(--view-header-button-active)!important}.redaction-item-info{flex:1;padding-left:18px;padding-right:20px}.redaction-item-preview{font-size:13px;color:var(--text-color)}.redaction-item-date-author{font-size:10px;color:var(--faded-text)}.redaction-item-label-text{font-size:10px;margin:2px 0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./RedactionPageGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".redaction-items{margin-top:8px;background-color:var(--component-background);border:1px solid var(--border);border-radius:4px}.redaction-items>:first-child{padding-top:16px}.redaction-items>:last-child{padding-bottom:16px}.redaction-page-group{padding-top:12px;padding-bottom:12px}.redaction-page-group-header{display:flex;justify-content:space-between;align-items:baseline}.redaction-page-group-number{font-size:13px;color:var(--faded-text)}.expand-arrow{height:16px;cursor:pointer}.expand-arrow .Icon{width:12px;height:5px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./RedactionSearchOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.RedactionSearchOverlay input{width:100%;padding:6px}.RedactionSearchOverlay input::-moz-placeholder{color:var(--placeholder-text)}.RedactionSearchOverlay input::placeholder{color:var(--placeholder-text)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js!./RedactionSearchResult.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".redaction-search-result{display:flex;align-items:center;padding:12px;background-color:var(--component-background);border-radius:4px;box-shadow:0 0 3px var(--document-box-shadow);margin:8px 0}.redaction-search-result .Icon svg{transform:scale(1.2);padding-top:2px}.redaction-search-result .search-value{word-break:break-all;color:var(--secondary-button-text);font-weight:700}.redaction-search-result.active{background-color:var(--view-header-button-active)!important}.redaction-search-result-info{font-size:13px;color:var(--text-color)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./RedactionSearchResultGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".redaction-search-results-page-number{display:flex;align-items:center;margin-left:11px!important}.redaction-search-results-page-number label{font-size:13px;color:var(--faded-text)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./RedactionSearchResults.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.redaction-search-counter-controls{display:flex;flex-direction:row;margin-top:49px;font-size:var(--font-size-default);padding:16px;border:1px solid var(--border);background-color:var(--gray-0);border-radius:4px 4px 0 0;max-height:50px;min-height:50px}.redaction-search-counter-controls .redaction-search-results-counter{flex:3 1 auto}.redaction-search-counter-controls .redaction-search-results-counter span{font-weight:700}.redaction-search-counter-controls .spinner{margin:auto;flex:3 1 \\\"25px\\\"}.redaction-search-counter-controls button{padding:0;background-color:transparent;flex:1 1 auto;color:var(--secondary-button-text);border:none;cursor:pointer}:host(:not([data-tabbing=true])) .redaction-search-counter-controls button,html:not([data-tabbing=true]) .redaction-search-counter-controls button{outline:none}.redaction-search-counter-controls button.disabled{opacity:.5;cursor:not-allowed}.redaction-search-results-container{flex:1 1 auto;background-color:var(--gray-2);color:var(--placeholder-text);font-size:13px;border-left:1px solid var(--border);border-right:1px solid var(--border);display:flex;flex-direction:column}.redaction-search-no-results,.redaction-search-results-container.emptyList{justify-content:center;align-items:center}.redaction-search-panel-controls{display:flex;flex-direction:row;flex:0 1 52px;padding:12px;background-color:var(--component-background);border:1px solid var(--border);margin-bottom:16px}.redaction-search-panel-controls button{border:none;background-color:transparent;height:28px;padding:6px 16px;cursor:pointer}:host(:not([data-tabbing=true])) .redaction-search-panel-controls button,html:not([data-tabbing=true]) .redaction-search-panel-controls button{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .redaction-search-panel-controls button{height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .redaction-search-panel-controls button{height:32px}}.redaction-search-panel-controls .cancel{flex:2 1 auto;color:var(--secondary-button-text);border:none;cursor:pointer;margin-right:20px}.redaction-search-panel-controls .redact-all-selected{flex:1 1 auto;border:1px solid var(--secondary-button-text);border-radius:4px;color:var(--secondary-button-text);margin-right:8px}.redaction-search-panel-controls .redact-all-selected.disabled{opacity:.5;cursor:not-allowed}.redaction-search-panel-controls .mark-all-selected{flex:1 1 auto;background-color:var(--primary-button);border:1px solid var(--primary-button);color:var(--primary-button-text);border-radius:4px;cursor:pointer}.redaction-search-panel-controls .mark-all-selected.disabled{opacity:.5;cursor:not-allowed}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","import React, { useState, useEffect } from 'react';\nimport core from 'core';\n\n\nconst RedactionPanelContext = React.createContext();\n\nconst RedactionPanelProvider = ({ children }) => {\n  const [selectedRedactionItemId, setSelectedRedactionItemId] = useState(null);\n  const [isRedactionSearchActive, setIsRedactionSearchActive] = useState(false);\n  const [activeSearchResultIndex, setActiveSearchResultIndex] = useState(-1);\n\n  useEffect(() => {\n    const onAnnotationSelected = (annotations, action) => {\n      if (action === 'selected') {\n        const redactionAnnotations = annotations.filter((annotation) => annotation.Subject === 'Redact');\n        // If multiple ones selected, we only use the first one\n        const selectedAnnotationId = redactionAnnotations.length > 0 ? redactionAnnotations[0].Id : null;\n        setSelectedRedactionItemId(selectedAnnotationId);\n      } else {\n        setSelectedRedactionItemId(null);\n      }\n    };\n\n    const activeSearchResultChanged = (newActiveSearchResult) => {\n      if (!newActiveSearchResult) {\n        return;\n      }\n      const coreSearchResults = core.getPageSearchResults() || [];\n      const newActiveSearchResultIndex = coreSearchResults.findIndex((searchResult) => {\n        return core.isSearchResultEqual(searchResult, newActiveSearchResult);\n      });\n      setActiveSearchResultIndex(newActiveSearchResultIndex);\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationSelected);\n    core.addEventListener('activeSearchResultChanged', activeSearchResultChanged);\n\n    return () => {\n      core.removeEventListener('annotationSelected', onAnnotationSelected);\n      core.removeEventListener('activeSearchResultChanged', activeSearchResultChanged);\n    };\n  }, []);\n\n  const value = {\n    selectedRedactionItemId,\n    setSelectedRedactionItemId,\n    isRedactionSearchActive,\n    setIsRedactionSearchActive,\n    activeSearchResultIndex\n  };\n\n  return <RedactionPanelContext.Provider value={value}>{children}</RedactionPanelContext.Provider>;\n};\n\nexport { RedactionPanelProvider, RedactionPanelContext };\n","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport selectors from 'selectors';\nimport NoteTextPreview from '../NoteTextPreview/NoteTextPreview';\n\nconst RedactionTextPreviewContainer = (props) => {\n  const [redactionPanelWidth] = useSelector(\n    (state) => [\n      selectors.getRedactionPanelWidth(state),\n    ],\n    shallowEqual,\n  );\n\n  return (\n    <NoteTextPreview {...props} panelWidth={redactionPanelWidth} comment />\n  );\n};\n\nexport default RedactionTextPreviewContainer;","import RedactionTextPreview from './RedactionTextPreviewContainer';\n\nexport default RedactionTextPreview;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Icon from 'src/components/Icon';\nimport getLatestActivityDate from 'helpers/getLatestActivityDate';\nimport dayjs from 'dayjs';\nimport Button from 'components/Button';\nimport './RedactionItem.scss';\nimport RedactionTextPreview from 'components/RedactionTextPreview';\nimport classNames from 'classnames';\nimport { redactionTypeMap } from 'constants/redactionTypes';\n\nconst RedactionItem = (props) => {\n  const {\n    iconColor,\n    annotation,\n    author,\n    dateFormat,\n    language,\n    onRedactionItemDelete,\n    onRedactionItemSelection,\n    textPreview,\n    isSelected,\n    timezone,\n  } = props;\n  const { t } = useTranslation();\n\n  let date = getLatestActivityDate(annotation);\n\n  if (timezone) {\n    const datetimeStr = date.toLocaleString('en-US', { timeZone: timezone });\n    date = new Date(datetimeStr);\n  }\n\n  const formattedDate = date ? dayjs(date).locale(language).format(dateFormat) : t('option.notesPanel.noteContent.noDate');\n  const dateAndAuthor = `${author} - ${formattedDate}`;\n  const className = classNames('redaction-item', { 'redaction-item-selected': isSelected });\n  const {\n    label,\n    icon = 'icon-form-field-text', // Default icon if none provided\n    redactionType\n  } = annotation;\n\n  let redactionPreview;\n\n  if (redactionType === redactionTypeMap['TEXT']) {\n    redactionPreview = (\n      <RedactionTextPreview linesToBreak={2}>\n        {textPreview}\n      </RedactionTextPreview>);\n  } else if (\n    redactionType === redactionTypeMap['FULL_PAGE']\n    || redactionType === redactionTypeMap['FULL_VIDEO_FRAME']\n    || redactionType === redactionTypeMap['REGION']\n    || redactionType === redactionTypeMap['AUDIO_REDACTION']\n    || redactionType === redactionTypeMap['FULL_VIDEO_FRAME_AND_AUDIO']\n  ) {\n    redactionPreview = t(label);\n  } else {\n    redactionPreview = annotation.getContents();\n  }\n\n  const onKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      onRedactionItemSelection();\n    }\n  };\n\n  return (\n    <div role=\"listitem\" className={className} onClick={onRedactionItemSelection} onKeyUp={onKeyUp} tabIndex={0}>\n      <div className=\"redaction-icon-container\">\n        <Icon glyph={icon} color={iconColor} />\n      </div>\n      <div className=\"redaction-item-info\">\n        <div className=\"redaction-item-preview\">\n          {redactionPreview}\n        </div>\n        {\n          annotation.OverlayText ?\n            <div className=\"redaction-item-label-text\">\n              {t('option.stylePopup.labelText')}: {annotation.OverlayText}\n            </div> : null\n        }\n        <div className=\"redaction-item-date-author\">\n          {dateAndAuthor}\n        </div>\n      </div>\n      <Button\n        style={{ marginLeft: 'auto' }}\n        img={'icon-close'}\n        onClick={onRedactionItemDelete}\n        ariaLabel={t('action.delete')}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(RedactionItem);","import React, { useCallback, useContext } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport RedactionItem from './RedactionItem';\nimport core from 'core';\nimport { RedactionPanelContext } from '../../RedactionPanel/RedactionPanelContext';\n\nconst RedactionItemContainer = (props) => {\n  const { annotation } = props;\n\n  const { selectedRedactionItemId, setSelectedRedactionItemId } = useContext(RedactionPanelContext);\n\n  const [\n    dateFormat,\n    language,\n    customNoteSelectionFunction,\n    timezone,\n  ] = useSelector(\n    (state) => [\n      selectors.getNoteDateFormat(state),\n      selectors.getCurrentLanguage(state),\n      selectors.getCustomNoteSelectionFunction(state),\n      selectors.getTimezone(state)\n    ],\n    shallowEqual,\n  );\n\n  const textPreview = annotation.getCustomData('trn-annot-preview');\n  const iconColor = annotation.StrokeColor.toString();\n  const author = core.getDisplayAuthor(annotation['Author']);\n\n  const onRedactionItemSelection = useCallback(() => {\n    customNoteSelectionFunction && customNoteSelectionFunction(annotation);\n    core.deselectAllAnnotations();\n    core.selectAnnotation(annotation);\n    core.jumpToAnnotation(annotation);\n    setSelectedRedactionItemId(annotation.Id);\n  }, [annotation]);\n\n  const onRedactionItemDelete = useCallback(() => {\n    core.deleteAnnotations([annotation]);\n  }, [annotation]);\n\n  return (\n    <RedactionItem\n      dateFormat={dateFormat}\n      language={language}\n      timezone={timezone}\n      author={author}\n      annotation={annotation}\n      iconColor={iconColor}\n      textPreview={textPreview}\n      onRedactionItemDelete={onRedactionItemDelete}\n      onRedactionItemSelection={onRedactionItemSelection}\n      isSelected={selectedRedactionItemId === annotation.Id}\n    />\n  );\n};\n\nexport default RedactionItemContainer;","import RedactionItem from './RedactionItemContainer';\n\nexport default RedactionItem;","import React from 'react';\nimport RedactionItem from './RedactionItem';\nimport CollapsiblePanelGroup from 'components/CollapsiblePanelGroup';\nimport { useTranslation } from 'react-i18next';\n\nimport './RedactionPageGroup.scss';\n\nconst RedactionPageGroup = (props) => {\n  const {\n    pageNumber,\n    redactionItems,\n  } = props;\n\n  const { t } = useTranslation();\n\n  const header = () => {\n    return (\n      <div className=\"redaction-page-group-number\">\n        {t('option.shared.page')} {pageNumber}\n      </div>\n    );\n  };\n\n  return (\n    <CollapsiblePanelGroup\n      className=\"redaction-page-group\"\n      header={header}\n    >\n      <div role=\"list\" className=\"redaction-items\">\n        {redactionItems.map((redactionItem) => (\n          <RedactionItem\n            annotation={redactionItem}\n            key={`${redactionItem.Id}-${pageNumber}`}\n          />\n        ))}\n      </div>\n    </CollapsiblePanelGroup>\n  );\n};\n\nexport default RedactionPageGroup;","import React, { useEffect, useState } from 'react';\nimport RedactionPageGroup from './RedactionPageGroup';\nimport { getSortStrategies } from 'constants/sortStrategies';\n\nconst RedactionPageGroupContainer = (props) => {\n  // Putting this in the container in case we want to allow users to change sort strategies\n  // which are stored in the application state\n  const { redactionItems } = props;\n  // Sorting strategies can be applied to any list of annotations\n  const [sortedRedactionItems, setSortedRedactionItems] = useState([]);\n  useEffect(() => {\n    setSortedRedactionItems(getSortStrategies()['position'].getSortedNotes(redactionItems));\n  }, [redactionItems]);\n  return (\n    <RedactionPageGroup\n      redactionItems={sortedRedactionItems}\n      {...props}\n    />\n  );\n};\n\nexport default RedactionPageGroupContainer;","import RedactionPageGroup from './RedactionPageGroupContainer';\n\nexport default RedactionPageGroup;","import React, { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Icon from 'components/Icon';\nimport { Virtuoso } from 'react-virtuoso';\nimport { RedactionPanelContext } from './RedactionPanelContext';\nimport { mapAnnotationToRedactionType } from 'constants/redactionTypes';\n\nimport './RedactionPanel.scss';\nimport RedactionPageGroup from '../RedactionPageGroup';\n\nconst RedactionPanel = (props) => {\n  const {\n    redactionAnnotations,\n    applyAllRedactions,\n    deleteAllRedactionAnnotations,\n    redactionTypesDictionary,\n  } = props;\n\n  const { t } = useTranslation();\n  const [redactionPageMap, setRedactionPageMap] = useState({});\n  const [redactionPageNumbers, setRedactionPageNumbers] = useState([]);\n  // The following prop is needed only for the tests to actually render a list of results\n  // it only is ever injected in the tests\n  const { isTestMode } = useContext(RedactionPanelContext);\n\n  useEffect(() => {\n    const redactionPageMap = {};\n    redactionAnnotations.forEach((annotation) => {\n      const redactionType = mapAnnotationToRedactionType(annotation);\n      const { label, icon } = redactionTypesDictionary[redactionType] || {\n        icon: 'icon-tool-redaction-area',\n        label: 'redactionPanel.redactionItem.regionRedaction'\n      };\n      annotation.label = label;\n      annotation.icon = icon;\n      annotation.redactionType = redactionType;\n\n      const pageNumber = annotation.PageNumber;\n      if (redactionPageMap[pageNumber] === undefined) {\n        redactionPageMap[pageNumber] = [annotation];\n      } else {\n        redactionPageMap[pageNumber] = [annotation, ...redactionPageMap[pageNumber]];\n      }\n    });\n\n    setRedactionPageMap(redactionPageMap);\n    setRedactionPageNumbers(Object.keys(redactionPageMap));\n  }, [redactionAnnotations]);\n\n  const renderRedactionPageGroups = () => {\n    // Needed for the tests to actually render a list of results\n    // Not needed for the actual app; if we set it it kills performance when there are a lot of annotations\n    const testModeProps = isTestMode ? { initialItemCount: redactionPageNumbers.length } : {};\n    return (\n      <div className=\"redaction-group-container\" role=\"list\">\n        <Virtuoso\n          data={redactionPageNumbers}\n          itemContent={(index, pageNumber) => {\n            return (\n              <RedactionPageGroup\n                key={index}\n                pageNumber={pageNumber}\n                redactionItems={redactionPageMap[pageNumber]}\n              />);\n          }}\n          {...testModeProps}\n        />\n      </div>\n    );\n  };\n\n  const noRedactionAnnotations = (\n    <div className=\"no-marked-redactions\">\n      <div>\n        <Icon className=\"empty-icon\" glyph=\"icon-no-marked-redactions\" />\n      </div>\n      <div className=\"msg\">{t('redactionPanel.noMarkedRedactions')}</div>\n    </div>\n  );\n\n  const redactAllButtonClassName = classNames('redact-all-marked', { disabled: redactionAnnotations.length === 0 });\n  const clearAllButtonClassName = classNames('clear-all-marked', { disabled: redactionAnnotations.length === 0 });\n\n  return (\n    <>\n      <div className=\"marked-redaction-counter\">\n        <span>{t('redactionPanel.redactionCounter')}</span> {`(${redactionAnnotations.length})`}\n      </div>\n      {redactionPageNumbers.length > 0 ? renderRedactionPageGroups() : noRedactionAnnotations}\n      <div className=\"redaction-panel-controls\">\n        <button\n          disabled={redactionAnnotations.length === 0}\n          className={clearAllButtonClassName}\n          onClick={deleteAllRedactionAnnotations}\n          aria-label={t('redactionPanel.clearMarked')}\n        >\n          {t('redactionPanel.clearMarked')}\n        </button>\n        <button\n          disabled={redactionAnnotations.length === 0}\n          className={redactAllButtonClassName}\n          onClick={applyAllRedactions}\n          aria-label={t('redactionPanel.redactAllMarked')}\n        >\n          {t('redactionPanel.redactAllMarked')}\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default RedactionPanel;","import React from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport ReactSelectWebComponentProvider from '../ReactSelectWebComponentProvider';\n\nconst CreatableMultiSelect = (props) => {\n  return (\n    <ReactSelectWebComponentProvider>\n      <CreatableSelect isMulti {...props} />\n    </ReactSelectWebComponentProvider>\n  );\n};\n\nexport default CreatableMultiSelect;","import CreatableMultiSelect from './CreatableMultiSelect';\n\nexport default CreatableMultiSelect;","import React from 'react';\nimport { components } from 'react-select';\nimport Icon from 'components/Icon';\nimport CreatableMultiSelect from 'components/CreatableMultiSelect';\nimport { useTranslation } from 'react-i18next';\n\nconst getStyles = (isDarkMode) => ({\n  groupHeading: (base) => ({\n    ...base,\n    textTransform: 'none',\n    fontSize: '10px',\n    color: isDarkMode ? '#FFFFFF' : '#485056',\n    paddingBottom: '8px',\n    paddingLeft: '8px',\n    paddingTop: '10px',\n  }),\n  group: (base) => ({\n    ...base,\n    padding: '0px',\n  }),\n  menu: (base) => ({\n    ...base,\n    padding: '0px 0px 0px 0px',\n  }),\n  menuList: (base) => ({\n    ...base,\n    padding: '0px',\n    backgroundColor: isDarkMode ? '#000000' : '#FFFFFF',\n  }),\n  multiValue: (base) => ({\n    ...base,\n    backgroundColor: isDarkMode ? '#192530' : '#E7EDF3',\n\n    padding: '2px 8px',\n    fontSize: '13px',\n    borderRadius: '4px',\n  }),\n  option: (base, state) => ({\n    ...base,\n    height: '28px',\n    display: 'flex',\n    fontSize: '13px',\n    padding: '6px 8px',\n    '&:hover': {\n      backgroundColor: isDarkMode ? '#192530' : '#E7EDF3',\n    },\n    backgroundColor: state.isFocused ? (isDarkMode ? '#192530' : '#E7EDF3') : 'transparent',\n  }),\n  valueContainer: (base) => ({\n    ...base,\n    padding: '1px',\n    maxHeight: '70px',\n    overflowY: 'scroll',\n  }),\n  control: (base) => ({\n    ...base,\n    backgroundColor: isDarkMode ? '#21242A' : '#FFFFFF',\n    minHeight: '29px',\n    borderColor: isDarkMode ? '#485056' : '#CFD4DA',\n    '&:hover': {\n      borderColor: isDarkMode ? '#485056' : '#CFD4DA',\n    },\n  }),\n  placeholder: (base) => ({\n    ...base,\n    fontSize: '13px',\n    color: isDarkMode ? '#868E96' : '#ADB5BD',\n    paddingLeft: '4px',\n  }),\n  input: (base) => ({\n    ...base,\n    fontSize: '13px',\n    color: isDarkMode ? '#FFFFFF' : '#485056',\n    paddingLeft: '3px',\n  }),\n});\n\nconst RedactionOption = (props) => {\n  const { data } = props;\n  const { t } = useTranslation();\n  return (\n    <components.Option {...props}>\n      {data.icon && <Icon glyph={data.icon} />}\n      {t(data.label)}\n    </components.Option>\n  );\n};\n\nconst MultiValueLabel = ({ data }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div style={{ display: 'flex', height: '18px' }}>\n      {data.icon && <Icon glyph={data.icon} />}\n      {t(data.label)}\n    </div>\n  );\n};\n\nconst RedactionSearchMultiSelect = (props) => {\n  const { t } = useTranslation();\n  const { activeTheme, redactionSearchOptions } = props;\n\n  const redactionGroup = [\n    {\n      label: t('redactionPanel.search.pattern'),\n      options: redactionSearchOptions,\n    },\n  ];\n\n  const isDarkMode = activeTheme === 'dark';\n  const styles = getStyles(isDarkMode);\n\n  return (\n    <CreatableMultiSelect\n      options={redactionGroup}\n      styles={styles}\n      components={{ Option: RedactionOption, MultiValueLabel, IndicatorsContainer: () => null }}\n      placeholder={t('redactionPanel.redactionSearchPlaceholder')}\n      formatCreateLabel={(value) => `${t('component.searchPanel')} ${value}`}\n      {...props}\n    />\n  );\n};\n\nexport default RedactionSearchMultiSelect;\n","import RedactionSearchMultiSelect from './RedactionSearchMultiSelect';\n\nexport default RedactionSearchMultiSelect;","import React from 'react';\nimport DataElementWrapper from '../DataElementWrapper';\nimport RedactionSearchMultiSelect from './RedactionSearchMultiSelect';\nimport { redactionTypeMap } from 'constants/redactionTypes';\nimport './RedactionSearchOverlay.scss';\n\nconst buildSearchOptions = (searchTerms) => {\n  const options = {\n    textSearch: [],\n    caseSensitive: true,\n  };\n\n  if (!searchTerms) {\n    return options;\n  }\n\n  searchTerms.forEach((searchTerm) => {\n    const { type } = searchTerm;\n    if (type === redactionTypeMap['TEXT']) {\n      options.textSearch.push(searchTerm.label);\n    } else {\n      options[type] = true;\n    }\n    if (searchTerm.regex) {\n      options.caseSensitive = options.caseSensitive && !searchTerm.regex.ignoreCase;\n    }\n  });\n\n  return options;\n};\n\nconst RedactionSearchOverlay = (props) => {\n  const {\n    setIsRedactionSearchActive,\n    searchTerms,\n    setSearchTerms,\n    executeRedactionSearch,\n    activeTheme,\n    redactionSearchOptions,\n  } = props;\n\n  const handleChange = (updatedSearchTerms) => {\n    setSearchTerms(updatedSearchTerms);\n    const options = buildSearchOptions(updatedSearchTerms);\n    executeRedactionSearch(options);\n  };\n\n  const handleCreate = (newValue) => {\n    const textTerm = {\n      label: newValue,\n      value: newValue,\n      type: redactionTypeMap['TEXT']\n    };\n    // Initially search terms are null so we safeguard against this\n    const nonNullSearchTerms = searchTerms || [];\n    const updatedSearchTerms = [...nonNullSearchTerms, textTerm];\n    setSearchTerms(updatedSearchTerms);\n    const options = buildSearchOptions(updatedSearchTerms);\n    options.caseSensitive = false;\n    executeRedactionSearch(options);\n  };\n\n  return (\n    <DataElementWrapper\n      className=\"RedactionSearchOverlay\"\n      dataElement=\"redactionSearchOverlay\"\n    >\n      <RedactionSearchMultiSelect\n        onFocus={() => setIsRedactionSearchActive(true)}\n        value={searchTerms}\n        onCreateOption={handleCreate}\n        onChange={handleChange}\n        activeTheme={activeTheme}\n        redactionSearchOptions={redactionSearchOptions}\n      />\n\n    </DataElementWrapper>\n\n  );\n};\n\nexport default RedactionSearchOverlay;","import searchTextFullFactory from '../apis/searchTextFull';\nimport selectors from 'selectors';\nimport core from 'core';\n\n\nfunction multiSearch(store) {\n  return function multiSearch(searchTerms) {\n    const { getState } = store;\n    const state = getState();\n    const redactionSearchPatterns = selectors.getRedactionSearchPatterns(state);\n    // collect all regexes into an array\n    const searchOptionsMap = Object.keys(redactionSearchPatterns).reduce((map, key) => {\n      const { regex, type } = redactionSearchPatterns[key];\n      map[type] = regex;\n      return map;\n    }, {});\n\n\n    const options = {\n      regex: true,\n      caseSensitive: searchTerms.caseSensitive,\n    };\n\n    const { textSearch } = searchTerms;\n    const searchArray = [...textSearch];\n\n    // Now we can map type to regex\n    Object.keys(searchTerms).forEach((searchType) => {\n      const searchRegex = searchOptionsMap[searchType];\n      if (searchRegex) {\n        searchArray.push(searchRegex.source);\n      }\n    });\n\n    const searchString = searchArray.join('|');\n\n    // If search string is empty we return and clear searches or we send the search logic\n    // into an infinte loop\n    if (searchString === '') {\n      core.clearSearchResults();\n      return;\n    }\n\n    const searchTextFull = searchTextFullFactory();\n    searchTextFull(searchString, options);\n  };\n}\n\nexport default multiSearch;","import React, { useContext } from 'react';\nimport { useStore, useSelector, shallowEqual } from 'react-redux';\nimport selectors from 'selectors';\n\nimport RedactionSearchOverlay from './RedactionSearchOverlay';\nimport { RedactionPanelContext } from '../RedactionPanel/RedactionPanelContext';\nimport multiSearchFactory from '../../helpers/multiSearch';\n\n\nfunction executeRedactionSearch(options, store) {\n  const multiSearch = multiSearchFactory(store);\n  multiSearch(options);\n}\n\nconst RedactionSearchOverlayContainer = (props) => {\n  const { setIsRedactionSearchActive } = useContext(RedactionPanelContext);\n  const store = useStore();\n  const activeTheme = useSelector((state) => selectors.getActiveTheme(state));\n  const redactionSearchPatterns = useSelector((state) => selectors.getRedactionSearchPatterns(state), shallowEqual);\n  const redactionSearchOptions = Object.values(redactionSearchPatterns).map((pattern) => ({\n    ...pattern,\n    value: pattern.type,\n  }));\n\n  return (\n    <RedactionSearchOverlay\n      setIsRedactionSearchActive={setIsRedactionSearchActive}\n      executeRedactionSearch={(options = {}) => executeRedactionSearch(options, store)}\n      activeTheme={activeTheme}\n      redactionSearchOptions={redactionSearchOptions}\n      {...props}\n    />);\n};\n\nexport default RedactionSearchOverlayContainer;","import RedactionSearchOverlay from './RedactionSearchOverlayContainer';\n\nexport default RedactionSearchOverlay;","import React from 'react';\nimport { Choice } from '@pdftron/webviewer-react-toolkit';\nimport Icon from 'components/Icon';\nimport './RedactionSearchResult.scss';\nimport classNames from 'classnames';\nimport { redactionTypeMap } from 'constants/redactionTypes';\n\n// Alternatively wrap this in useCallback and declare inside component\nconst displayRedactionSearchResult = (props) => {\n  const { ambientStr, resultStrStart, resultStrEnd, resultStr, type } = props;\n  if (type === redactionTypeMap['TEXT']) {\n    const searchValue = ambientStr === '' ? resultStr : ambientStr.slice(resultStrStart, resultStrEnd);\n    const textBeforeSearchValue = ambientStr.slice(0, resultStrStart);\n    const textAfterSearchValue = ambientStr.slice(resultStrEnd);\n    return (\n      <>\n        {textBeforeSearchValue}\n        <span className=\"search-value\">{searchValue}</span>\n        {textAfterSearchValue}\n      </>\n    );\n  }\n  return resultStr;\n};\n\nconst RedactionSearchResult = (props) => {\n  const {\n    isChecked,\n    onChange,\n    onClickResult,\n    isActive,\n    icon,\n  } = props;\n\n  const displayResult = displayRedactionSearchResult(props);\n  const searchResultClassname = classNames('redaction-search-result', { active: isActive });\n\n  return (\n    <div className={searchResultClassname} role=\"listitem\" onClick={onClickResult}>\n      <div style={{ paddingRight: '14px' }}>\n        <Choice\n          checked={isChecked}\n          onChange={onChange}\n        />\n      </div>\n      <div style={{ paddingRight: '14px' }}>\n        <Icon glyph={icon} />\n      </div>\n      <div className=\"redaction-search-result-info\">\n        {displayResult}\n      </div>\n    </div >\n  );\n};\n\nexport default React.memo(RedactionSearchResult);","import RedactionSearchResult from './RedactionSearchResultContainer';\n\nexport default RedactionSearchResult;","import React, { useCallback, useContext } from 'react';\nimport RedactionSearchResult from './RedactionSearchResult';\nimport { RedactionPanelContext } from 'components/RedactionPanel/RedactionPanelContext';\nimport core from 'core';\n\nconst RedactionSearchResultContainer = (props) => {\n  const {\n    searchResult,\n    checked,\n    checkResult,\n  } = props;\n\n  const { activeSearchResultIndex } = useContext(RedactionPanelContext);\n\n  const { ambientStr, resultStrStart, resultStrEnd, resultStr, icon, index, type } = searchResult;\n\n  const onChange = useCallback((event) => {\n    checkResult(event, index);\n  }, [index, checkResult]);\n\n  const onClickResult = useCallback(() => {\n    core.setActiveSearchResult(searchResult);\n  }, [searchResult]);\n\n  return (\n    <RedactionSearchResult\n      ambientStr={ambientStr}\n      resultStrStart={resultStrStart}\n      resultStrEnd={resultStrEnd}\n      resultStr={resultStr}\n      icon={icon}\n      type={type}\n      isChecked={checked}\n      onChange={onChange}\n      onClickResult={onClickResult}\n      isActive={activeSearchResultIndex === index}\n    />\n  );\n};\n\nexport default RedactionSearchResultContainer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport RedactionSearchResult from './RedactionSearchResult';\nimport { Choice } from '@pdftron/webviewer-react-toolkit';\nimport { useTranslation } from 'react-i18next';\nimport CollapsiblePanelGroup from 'components/CollapsiblePanelGroup';\nimport './RedactionSearchResultGroup.scss';\n\nconst RedactionSearchResultGroup = (props) => {\n  const {\n    pageNumber,\n    searchResults,\n    selectedSearchResultIndexes,\n    setSelectedSearchResultIndexes,\n  } = props;\n\n  const { t } = useTranslation();\n  const groupResultIndexes = searchResults.map((result) => result.index);\n  const [allItemsChecked, setAllItemsChecked] = useState(false);\n\n  useEffect(() => {\n    const allResultsSelected = groupResultIndexes.reduce((allSelected, currentIndex) => {\n      return selectedSearchResultIndexes[currentIndex] && allSelected;\n    }, true);\n\n    setAllItemsChecked(allResultsSelected);\n  }, [selectedSearchResultIndexes, groupResultIndexes]);\n\n  const checkAllResults = useCallback((event) => {\n    const checked = event.target.checked;\n    groupResultIndexes.forEach((resultIndex) => {\n      selectedSearchResultIndexes[resultIndex] = checked;\n    });\n    setAllItemsChecked(checked);\n    setSelectedSearchResultIndexes({ ...selectedSearchResultIndexes });\n  }, [selectedSearchResultIndexes, groupResultIndexes]);\n\n  const checkResult = useCallback((event, index) => {\n    const checked = event.target.checked;\n    selectedSearchResultIndexes[index] = checked;\n    setSelectedSearchResultIndexes({ ...selectedSearchResultIndexes });\n  }, [selectedSearchResultIndexes]);\n\n  const header = () => {\n    return (\n      <Choice\n        checked={allItemsChecked}\n        onChange={checkAllResults}\n        label={`${t('option.shared.page')} ${pageNumber}`}\n        className=\"redaction-search-results-page-number\"\n      />\n    );\n  };\n\n  const style = {\n    paddingLeft: '12px',\n    paddingRight: '12px',\n    paddingTop: '8px',\n    paddingBottom: '4px',\n  };\n\n  return (\n    <CollapsiblePanelGroup header={header} role=\"row\" style={style}>\n      <div role=\"list\">\n        {searchResults.map((searchResult, index) => (\n          <RedactionSearchResult\n            checked={selectedSearchResultIndexes[searchResult.index]}\n            checkResult={checkResult}\n            searchResult={searchResult}\n            key={`${index}-${pageNumber}`}\n          />)\n        )}\n      </div>\n    </CollapsiblePanelGroup>\n  );\n};\n\nexport default RedactionSearchResultGroup;","import RedactionSearchResultGroup from './RedactionSearchResultGroup';\n\nexport default RedactionSearchResultGroup;","export default {\n  SEARCH_NOT_INITIATED: 'SEARCH_NOT_INITIATED',\n  SEARCH_IN_PROGRESS: 'SEARCH_IN_PROGRESS',\n  SEARCH_DONE: 'SEARCH_DONE',\n};","import React, { useState, useEffect, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport RedactionSearchResultGroup from 'components/RedactionSearchResultGroup';\nimport Spinner from 'components/Spinner';\nimport './RedactionSearchResults.scss';\nimport classNames from 'classnames';\nimport { Virtuoso } from 'react-virtuoso';\nimport SearchStatus from 'constants/searchStatus';\nimport { RedactionPanelContext } from '../RedactionPanel/RedactionPanelContext';\n\nfunction RedactionSearchResults(props) {\n  const {\n    redactionSearchResults,\n    searchStatus,\n    onCancelSearch,\n    isProcessingRedactionResults,\n    markSelectedResultsForRedaction,\n    redactSelectedResults,\n  } = props;\n\n  const { t } = useTranslation();\n  const [redactionSearchResultPageMap, setRedactionSearchResultPageMap] = useState({});\n  const [selectedSearchResultIndexesMap, setSelectedSearchResultIndexesMap] = useState({});\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  // The following prop is needed only for the tests to actually render a list of results\n  // it only is ever injected in the tests\n  const { isTestMode } = useContext(RedactionPanelContext);\n\n\n  useEffect(() => {\n    const redactionSearchResultPageMap = {};\n    redactionSearchResults.forEach((result, index) => {\n      const pageNumber = result.pageNum;\n      result.index = index;\n      if (redactionSearchResultPageMap[pageNumber] === undefined) {\n        redactionSearchResultPageMap[pageNumber] = [result];\n      } else {\n        redactionSearchResultPageMap[pageNumber] = [...redactionSearchResultPageMap[pageNumber], result];\n      }\n    });\n\n    setRedactionSearchResultPageMap(redactionSearchResultPageMap);\n\n    const selectedIndexesMap = {};\n    redactionSearchResults.forEach((value, index) => {\n      selectedIndexesMap[index] = false;\n    });\n    setSelectedSearchResultIndexesMap(selectedIndexesMap);\n  }, [redactionSearchResults]);\n\n\n  useEffect(() => {\n    const selectedIndexes = redactionSearchResults.filter((redactionSearchResult, index) => {\n      return selectedSearchResultIndexesMap[index];\n    });\n\n    setSelectedIndexes(selectedIndexes);\n  }, [selectedSearchResultIndexesMap]);\n\n\n  const renderSearchResults = () => {\n    const resultGroupPageNumbers = Object.keys(redactionSearchResultPageMap);\n    if (resultGroupPageNumbers.length > 0) {\n      // Needed for the tests to actually render a list of results\n      const testModeProps = isTestMode ? { initialItemCount: resultGroupPageNumbers.length } : {};\n      return (\n        <Virtuoso\n          data={resultGroupPageNumbers}\n          itemContent={(index, pageNumber) => {\n            return (\n              <RedactionSearchResultGroup\n                key={index}\n                pageNumber={pageNumber}\n                searchResults={redactionSearchResultPageMap[pageNumber]}\n                selectedSearchResultIndexes={selectedSearchResultIndexesMap}\n                setSelectedSearchResultIndexes={setSelectedSearchResultIndexesMap}\n              />);\n          }}\n          {...testModeProps}\n        />);\n    }\n  };\n\n  const renderStartSearch = () => (\n    <div aria-label={t('redactionPanel.search.start')}>\n      {t('redactionPanel.search.start')}\n    </div>\n  );\n\n  const noResults = (\n    <div aria-label={t('message.noResults')}>\n      {t('message.noResults')}\n    </div>\n  );\n\n  const renderSearchInProgress = () => (\n    <div >\n      <Spinner height=\"25px\" width=\"25px\" />\n    </div>\n  );\n\n  const onCancelHandler = () => {\n    setRedactionSearchResultPageMap({});\n    onCancelSearch();\n  };\n\n  const selectAllResults = () => {\n    const searchResultIndexMap = {};\n    redactionSearchResults.forEach((value, index) => {\n      searchResultIndexMap[index] = true;\n    });\n    setSelectedSearchResultIndexesMap(searchResultIndexMap);\n  };\n\n  const unselectAllResults = () => {\n    const searchResultIndexMap = {};\n    redactionSearchResults.forEach((value, index) => {\n      searchResultIndexMap[index] = false;\n    });\n    setSelectedSearchResultIndexesMap(searchResultIndexMap);\n  };\n\n  const onMarkAllForRedaction = () => {\n    markSelectedResultsForRedaction(selectedIndexes);\n    onCancelSearch();\n  };\n\n  const onRedactSelectedResults = () => {\n    redactSelectedResults(selectedIndexes);\n  };\n\n  const isEmptyList = redactionSearchResults.length === 0;\n\n  const resultsContainerClass = classNames('redaction-search-results-container', { emptyList: isEmptyList });\n  const redactAllButtonClass = classNames('redact-all-selected', { disabled: selectedIndexes.length === 0 });\n  const markAllForRedactionButtonClass = classNames('mark-all-selected', { disabled: selectedIndexes.length === 0 });\n  const shouldShowResultsCounterOptions = (searchStatus === SearchStatus['SEARCH_DONE'] && !isProcessingRedactionResults) || searchStatus === SearchStatus['SEARCH_NOT_INITIATED'];\n\n  return (\n    <>\n      <div className=\"redaction-search-counter-controls\">\n        {searchStatus === SearchStatus['SEARCH_IN_PROGRESS'] && (\n          <div style={{ flexGrow: 1 }}>\n            <Spinner height=\"18px\" width=\"18px\" />\n          </div>)}\n        {shouldShowResultsCounterOptions && (\n          <>\n            <div className=\"redaction-search-results-counter\">\n              <span>{t('redactionPanel.searchResults')}</span> ({redactionSearchResults.length})\n            </div>\n            <button\n              onClick={selectAllResults}\n              disabled={isEmptyList}\n              aria-label={t('action.selectAll')}\n            >\n              {t('action.selectAll')}\n            </button>\n            <button\n              disabled={isEmptyList}\n              onClick={unselectAllResults}\n              aria-label={t('action.unselect')}\n            >\n              {t('action.unselect')}\n            </button>\n          </>)}\n      </div>\n      <div className={resultsContainerClass} role=\"list\">\n        {searchStatus === SearchStatus['SEARCH_NOT_INITIATED'] && renderStartSearch()}\n        {(searchStatus === SearchStatus['SEARCH_IN_PROGRESS'] && isEmptyList && isProcessingRedactionResults) && renderSearchInProgress()}\n        {searchStatus === SearchStatus['SEARCH_DONE'] && isEmptyList && !isProcessingRedactionResults && noResults}\n        {(searchStatus === SearchStatus['SEARCH_IN_PROGRESS'] || searchStatus === SearchStatus['SEARCH_DONE']) && renderSearchResults()}\n      </div>\n      <div className=\"redaction-search-panel-controls\" >\n        <button\n          onClick={onCancelHandler}\n          aria-label={t('action.cancel')}\n          className=\"cancel\"\n        >\n          {t('action.cancel')}\n        </button>\n        <button\n          disabled={selectedIndexes.length === 0}\n          aria-label={t('annotation.redact')}\n          className={redactAllButtonClass}\n          onClick={onRedactSelectedResults}\n        >\n          {t('annotation.redact')}\n        </button>\n        <button\n          disabled={selectedIndexes.length === 0}\n          aria-label={t('action.addMark')}\n          className={markAllForRedactionButtonClass}\n          onClick={onMarkAllForRedaction}\n        >\n          {t('action.addMark')}\n        </button>\n      </div >\n    </>\n  );\n}\n\nexport default RedactionSearchResults;\n","import React, { useCallback } from 'react';\nimport RedactionSearchResults from './RedactionSearchResults';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport selectors from 'selectors';\nimport applyRedactions from 'helpers/applyRedactions';\nimport core from 'core';\n\nfunction createRedactionAnnotations(searchResults, activeToolStyles) {\n  const { StrokeColor, OverlayText, FillColor } = activeToolStyles;\n  const redactionAnnotations = searchResults.map((result) => {\n    const redaction = new window.Core.Annotations.RedactionAnnotation();\n    redaction.PageNumber = result.page_num;\n    redaction.Quads = result.quads.map((quad) => quad.getPoints());\n    redaction.StrokeColor = StrokeColor;\n    redaction.OverlayText = OverlayText;\n    redaction.FillColor = FillColor;\n    redaction.setContents(result.result_str);\n    redaction.type = result.type;\n    redaction.Author = core.getCurrentUser();\n\n    if (result.type === 'text') {\n      redaction.setCustomData('trn-annot-preview', result.result_str);\n    }\n\n    redaction.setCustomData('trn-redaction-type', result.type);\n\n    return redaction;\n  });\n\n  return redactionAnnotations;\n}\n\nconst defaultRedactionStyles = { OverlayText: '', StrokeColor: new window.Core.Annotations.Color(255, 0, 0) };\n\nfunction RedactionSearchResultsContainer(props) {\n  const { onCancelSearch } = props;\n  const dispatch = useDispatch();\n  // activeToolStyles is an object so we do a shallowEqual to check equality\n  const [activeToolStyles, activeToolName] = useSelector(\n    (state) => [\n      selectors.getActiveToolStyles(state),\n      selectors.getActiveToolName(state)\n    ], shallowEqual);\n\n  const redactSelectedResults = (searchResults) => {\n    const redactionAnnotations = createRedactionAnnotations(searchResults, defaultRedactionStyles);\n    dispatch(applyRedactions(redactionAnnotations, onCancelSearch));\n  };\n\n  const markSelectedResultsForRedaction = useCallback((searchResults) => {\n    const redactionStyles = activeToolName.includes('Redaction') ? activeToolStyles : defaultRedactionStyles;\n    const redactionAnnotations = createRedactionAnnotations(searchResults, redactionStyles);\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.addAnnotations(redactionAnnotations);\n  }, [activeToolStyles, activeToolName]);\n\n  return (\n    <RedactionSearchResults\n      markSelectedResultsForRedaction={markSelectedResultsForRedaction}\n      redactSelectedResults={redactSelectedResults}\n      {...props}\n    />);\n}\n\nexport default RedactionSearchResultsContainer;","import RedactionSearchResults from './RedactionSearchResultsContainer';\n\nexport default RedactionSearchResults;","import React, { useContext, useState } from 'react';\nimport RedactionSearchOverlay from 'src/components/RedactionSearchOverlay';\nimport { RedactionPanelContext } from 'components/RedactionPanel/RedactionPanelContext';\nimport RedactionSearchResults from 'components/RedactionSearchResults';\n\nconst RedactionSearchPanel = (props) => {\n  const [searchTerms, setSearchTerms] = useState([]);\n  const { isRedactionSearchActive, setIsRedactionSearchActive } = useContext(RedactionPanelContext);\n  const onCancelSearch = () => {\n    setSearchTerms([]);\n    clearRedactionSearchResults();\n    setIsRedactionSearchActive(false);\n  };\n\n  const {\n    redactionSearchResults,\n    isProcessingRedactionResults,\n    clearRedactionSearchResults,\n    searchStatus,\n  } = props;\n\n  return (\n    <>\n      <RedactionSearchOverlay\n        searchTerms={searchTerms}\n        setSearchTerms={setSearchTerms}\n      />\n      {isRedactionSearchActive &&\n        <RedactionSearchResults\n          redactionSearchResults={redactionSearchResults}\n          onCancelSearch={onCancelSearch}\n          searchStatus={searchStatus}\n          isProcessingRedactionResults={isProcessingRedactionResults}\n        />\n      }\n    </>\n  );\n};\n\nexport default RedactionSearchPanel;","import { useEffect, useState, useCallback, useMemo } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport selectors from 'selectors';\nimport core from 'core';\nimport { redactionTypeMap } from 'constants/redactionTypes';\nimport SearchStatus from 'constants/searchStatus';\n\nfunction useOnRedactionSearchCompleted() {\n  const [searchStatus, setSearchStatus] = useState(SearchStatus['SEARCH_NOT_INITIATED']);\n  const [redactionSearchResults, setRedactionSearchResults] = useState([]);\n  const [isProcessingRedactionResults, setIsProcessingRedactionResults] = useState(false);\n  const redactionSearchPatterns = useSelector((state) => selectors.getRedactionSearchPatterns(state), shallowEqual);\n\n  const searchPatterns = useMemo(() => {\n    return Object.keys(redactionSearchPatterns).reduce((map, key) => {\n      const { regex, type, icon } = redactionSearchPatterns[key];\n      map[type] = {\n        regex,\n        icon\n      };\n      return map;\n    }, {});\n  }, [redactionSearchPatterns]);\n\n  const mapResultToType = useCallback((result) => {\n    // Iterate through the patterns and return the first match\n    const { resultStr } = result;\n    const searchPatternKeys = Object.keys(searchPatterns);\n\n    const resultType = searchPatternKeys.find((key) => {\n      const { regex } = searchPatterns[key];\n      return regex.test(resultStr);\n    });\n\n    // If it didn't match any of the patterns, return the default type which is text\n    result.type = resultType === undefined ? redactionTypeMap['TEXT'] : resultType;\n    // And also set the icon to display in the panel. If no icon provided use the text icon\n    const { icon = 'icon-form-field-text' } = searchPatterns[result.type] || {};\n    result.icon = icon;\n    return result;\n  }, [searchPatterns]);// Dependency is an object but it is memoized so it will not re-create unless the patterns change\n\n  const clearRedactionSearchResults = useCallback(() => {\n    setRedactionSearchResults([]);\n    core.clearSearchResults();\n    setIsProcessingRedactionResults(false);\n  });\n\n  useEffect(() => {\n    function onSearchResultsChanged(results) {\n      const mappedResults = results.map(mapResultToType);\n      setIsProcessingRedactionResults(true);\n      setRedactionSearchResults(mappedResults);\n    }\n\n    core.addEventListener('searchResultsChanged', onSearchResultsChanged);\n    return () => {\n      core.removeEventListener('searchResultsChanged', onSearchResultsChanged);\n    };\n  }, [searchStatus]);\n\n  useEffect(() => {\n    function searchInProgressEventHandler(isSearching) {\n      if (isSearching === undefined || isSearching === null) {\n        // if isSearching is not passed at all, we consider that to mean that search was reset to original state\n        setSearchStatus(SearchStatus['SEARCH_NOT_INITIATED']);\n      } else if (isSearching) {\n        setSearchStatus(SearchStatus['SEARCH_IN_PROGRESS']);\n      } else {\n        setSearchStatus(SearchStatus['SEARCH_DONE']);\n        // Need a timeout due to timing issue as SEARCH_DONE is fired\n        // before final call to onSearchResultsChanged, otherwise we briefly show\n        // the NO RESULTS message before showing actual results.\n        setTimeout(() => {\n          setIsProcessingRedactionResults(false);\n        }, 100);\n      }\n    }\n\n    core.addEventListener('searchInProgress', searchInProgressEventHandler);\n\n    return () => {\n      core.removeEventListener('searchInProgress', searchInProgressEventHandler);\n    };\n  }, []);\n\n  return {\n    redactionSearchResults,\n    isProcessingRedactionResults,\n    clearRedactionSearchResults,\n    searchStatus,\n  };\n}\n\nexport default useOnRedactionSearchCompleted;","import useOnRedactionSearchCompleted from './useOnRedactionSearchCompleted';\n\nexport default useOnRedactionSearchCompleted;","import RedactionSearchPanel from './RedactionSearchPanelContainer';\n\nexport default RedactionSearchPanel;","import React from 'react';\nimport RedactionSearchPanel from './RedactionSearchPanel';\nimport useOnRedactionSearchCompleted from 'hooks/useOnRedactionSearchCompleted';\n\nconst ReactionSearchPanelContainer = () => {\n  const {\n    redactionSearchResults,\n    isProcessingRedactionResults,\n    clearRedactionSearchResults,\n    searchStatus,\n  } = useOnRedactionSearchCompleted();\n\n  return (\n    <RedactionSearchPanel\n      redactionSearchResults={redactionSearchResults}\n      isProcessingRedactionResults={isProcessingRedactionResults}\n      clearRedactionSearchResults={clearRedactionSearchResults}\n      searchStatus={searchStatus}\n    />\n  );\n};\n\nexport default ReactionSearchPanelContainer;","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport RedactionPanel from './RedactionPanel';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport core from 'core';\nimport applyRedactions from 'helpers/applyRedactions';\nimport { RedactionPanelContext, RedactionPanelProvider } from './RedactionPanelContext';\nimport { isMobileSize } from 'helpers/getDeviceSize';\nimport DataElementWrapper from '../DataElementWrapper';\nimport Icon from 'components/Icon';\nimport RedactionSearchPanel from 'components/RedactionSearchPanel';\nimport { defaultRedactionTypes } from 'constants/redactionTypes';\n\nexport const RedactionPanelContainer = (props) => {\n  const [\n    isOpen,\n    isDisabled,\n    redactionPanelWidth,\n    isInDesktopOnlyMode,\n    customApplyRedactionsHandler,\n    redactionSearchPatterns,\n  ] = useSelector(\n    (state) => [\n      selectors.isElementOpen(state, 'redactionPanel'),\n      selectors.isElementDisabled(state, 'redactionPanel'),\n      selectors.getRedactionPanelWidth(state),\n      selectors.isInDesktopOnlyMode(state),\n      selectors.getCustomApplyRedactionsHandler(state),\n      selectors.getRedactionSearchPatterns(state),\n    ],\n    shallowEqual,\n  );\n\n  const isMobile = isMobileSize();\n\n  const { redactionAnnotationsList } = props;\n\n  const redactionTypesDictionary = useMemo(() => {\n    const storedRedactionTypes = Object.keys(redactionSearchPatterns).reduce((map, key) => {\n      const { label, type, icon } = redactionSearchPatterns[key];\n      map[type] = {\n        label,\n        icon,\n      };\n      return map;\n    }, {});\n\n    return { ...storedRedactionTypes, ...defaultRedactionTypes };\n  }, [redactionSearchPatterns]);\n\n  const deleteAllRedactionAnnotations = () => {\n    core.deleteAnnotations(redactionAnnotationsList);\n  };\n\n  const dispatch = useDispatch();\n  const applyAllRedactions = () => {\n    const originalApplyRedactions = () => {\n      const callOnRedactionCompleted = props.isCustomPanel\n        ? closeRedactionPanel : () => { };\n\n      dispatch(applyRedactions(redactionAnnotationsList, callOnRedactionCompleted));\n    };\n    if (customApplyRedactionsHandler) {\n      customApplyRedactionsHandler(redactionAnnotationsList, originalApplyRedactions);\n    } else {\n      originalApplyRedactions();\n    }\n  };\n  const closeRedactionPanel = () => {\n    const tempDataElement = props.isCustomPanel ? props.dataElement : 'redactionPanel';\n    dispatch(actions.closeElement(tempDataElement));\n  };\n\n  const renderMobileCloseButton = () => {\n    return (\n      <div className=\"close-container\">\n        <div className=\"close-icon-container\" onClick={closeRedactionPanel}>\n          <Icon glyph=\"ic_close_black_24px\" className=\"close-icon\" />\n        </div>\n      </div>\n    );\n  };\n\n  const style = props.isCustomPanel || !isInDesktopOnlyMode && isMobile ? {} : { width: `${redactionPanelWidth}px`, minWidth: `${redactionPanelWidth}px` };\n\n  const { isRedactionSearchActive } = useContext(RedactionPanelContext);\n\n  const [renderNull, setRenderNull] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setRenderNull(!isOpen);\n    }, 500);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [isOpen]);\n\n  if (isDisabled || (!isOpen && renderNull && !props.isCustomPanel)) {\n    return null;\n  }\n\n  const dataElement = props.isCustomPanel ? props.dataElement : 'redactionPanel';\n\n  return (\n    <DataElementWrapper dataElement={dataElement} className=\"Panel RedactionPanel\" style={style}>\n      {!isInDesktopOnlyMode && isMobile && renderMobileCloseButton()}\n      <RedactionSearchPanel />\n      {!isRedactionSearchActive && (\n        <RedactionPanel\n          redactionAnnotations={redactionAnnotationsList}\n          redactionTypesDictionary={redactionTypesDictionary}\n          applyAllRedactions={applyAllRedactions}\n          deleteAllRedactionAnnotations={deleteAllRedactionAnnotations}\n        />\n      )}\n    </DataElementWrapper>\n  );\n};\n\nconst RedactionPanelContainerWithProvider = (props) => {\n  return (\n    <RedactionPanelProvider>\n      <RedactionPanelContainer {...props} />\n    </RedactionPanelProvider>\n  );\n};\n\nexport default RedactionPanelContainerWithProvider;","import RedactionPanel from './RedactionPanelContainer';\n\nexport default RedactionPanel;"],"sourceRoot":""}