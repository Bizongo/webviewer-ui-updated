{"version":3,"sources":["webpack:///./src/components/ScaleModal/ScaleModal.scss?56ab","webpack:///./src/components/ScaleModal/ScaleModal.scss","webpack:///./src/components/ScaleModal/ScaleCustom.js","webpack:///./src/components/ScaleModal/ScaleModal.js","webpack:///./src/components/ScaleModal/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","___CSS_LOADER_API_IMPORT___","Scale","Core","ScaleCustomProps","scale","PropTypes","array","onScaleChange","func","precision","number","ScaleCustom","_ref","measurementUnits","_slicedToArray","useSelector","state","selectors","getMeasurementUnits","shallowEqual","_useState2","useState","pageValueDisplay","setPageValueDisplay","_useState4","worldValueDisplay","setWorldValueDisplay","_useState6","isFractionalPrecision","setIsFractionalPrecision","_useState8","pageWarningMessage","setPageWarningMessage","_useState10","worldWarningMessage","setWorldWarningMessage","_useState12","scaleValueBlurFlag","setScaleValueBlurFlag","pageValueInput","useRef","worldValueInput","t","useTranslation","filterFractionalUnits","units","filter","unit","fractionalUnits","includes","unitFromOptions","from","unitToOptions","to","useEffect","onScaleUnitChange","formatDecimal","value","toFixed","toString","current","activeElement","getFormattedValue","ifFractionalPrecision","hintValues","isWorldValueValid","onInputValueChange","isPageValueValid","pageScale","newScale","worldScale","_onScaleChange","pageValueClass","classNames","worldValueClass","getPrecision","isPageValue","getNewScale","updateScaleValue","scaleValue","inputValue","trim","scaleUnit","inFractionalRegex","test","result","parseInFractional","ftInFractionalRegex","parseFtInFractional","floatRegex","parseFloat","ftInDecimalRegex","parseFtInDecimal","undefined","newUnit","isPageUnit","newPageScale","newWorldScale","convertUnit","getInputPlaceholder","onInputBlur","flag","React","createElement","className","type","min","data-element","onChange","e","target","placeholder","ref","onBlur","Tooltip","Dropdown","dataElement","items","onClickItem","currentSelectionKey","concat","propTypes","scaleOptions","ScaleModal","_customScale$pageScal","_customScale$worldSca2","annotations","selectedTool","dispatch","useDispatch","_useSelector2","isElementDisabled","DataElements","SCALE_MODAL","isElementOpen","isElementHidden","getCurrentToolbarGroup","getSelectedScale","getActiveToolName","getIsAddingNewScale","getMeasurementScalePreset","getCalibrationInfo","getIsMultipleScalesMode","isDisabled","isOpen","isHidden","currentToolbarGroup","selectedScale","activeToolName","isAddingNewScale","measurementScalePreset","_useSelector2$","tempScale","isFractionalUnit","isMultipleScalesMode","precisionOptions","PrecisionType","DECIMAL","precisionOption","setPrecisionOption","scaleOption","setScaleOption","PresetMeasurementSystems","METRIC","presetScale","setPresetScale","customScale","setCustomScale","hasScaleChanged","setHasScaleChanged","totalScalesCount","Object","keys","core","getScales","precisionType","presetMeasurementSystem","getScaleRatioAsArray","getScalePrecision","isFractional","precisionItem","getPrecisionType","find","item","setTimeout","useDidUpdate","presetPrecisionOption","scalePresetPrecision","closeModal","newPrecisionOption","actions","updateCalibrationInfo","isCalibration","initialScale","closeElement","getCurrentScale","getPrecisionsValue","temp","precisionValue","Math","round","isCustomOption","modalClass","open","closed","IMPERIAL","FRACTIONAL","isCurrentScaleValid","isValid","isFractionalUnitsToggleDisabled","Swipeable","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","FocusTrap","locked","Button","title","img","onClick","Choice","radio","name","checked","label","center","onMouseDown","_customScale$worldSca","setToolMode","previousToolName","defaultUnit","setIsElementHidden","map","_item","isSwitch","leftLabel","id","disabled","DataElementWrapper","originalScales","replaceScales","applyTo","_toConsumableArray","createAndApplyScale"],"mappings":"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","file":"chunks/68.chunk.js","sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./ScaleModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".open.ScaleModal{visibility:visible}.closed.ScaleModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ScaleModal{position:fixed;left:0;bottom:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.ScaleModal .modal-container .wrapper .modal-content{padding:10px}.ScaleModal .footer{display:flex;flex-direction:row;justify-content:flex-end;width:100%;margin-top:13px}.ScaleModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.ScaleModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.ScaleModal .footer .modal-button.cancel{color:var(--secondary-button-text);border:1px solid var(--secondary-button-text)}.ScaleModal .footer .modal-button.cancel:hover{background-color:var(--document-background-color);color:var(--secondary-button-hover);border:1px solid var(--secondary-button-hover)}.ScaleModal .footer .modal-button.confirm{margin-left:4px;color:var(--primary-button-text);font-weight:600;background:var(--primary-button)}.ScaleModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover)}.ScaleModal .footer .modal-button.confirm.disabled{background:var(--primary-button)!important;opacity:.5}.ScaleModal .footer .modal-button.secondary-btn-custom{border-radius:4px;border:1px solid var(--primary-button);color:var(--primary-button);padding:2px 20px 4px;cursor:pointer;background-color:#fff}.ScaleModal .footer .modal-button.secondary-btn-custom:hover{color:var(--secondary-button-hover)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .footer .modal-button{padding:23px 8px}}.ScaleModal .swipe-indicator{background:var(--divider);border-radius:2px;height:4px;width:38px;position:absolute;top:12px;margin-left:auto;margin-right:auto;left:0;right:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .swipe-indicator{display:none}}.ScaleModal .container{box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background);overflow-y:auto;max-height:100%}@media(max-height:500px){.App:not(.is-web-component) .ScaleModal .container,.ScaleModal .App:not(.is-web-component) .container{overflow:auto;max-height:100%}}@container (max-height: 500px){.App.is-web-component .ScaleModal .container,.ScaleModal .App.is-web-component .container{overflow:auto;max-height:100%}}.ScaleModal .container{display:flex;flex-direction:column;width:480px;padding:0;border-radius:4px;box-shadow:0 0 3px var(--document-box-shadow);overflow:visible}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container{width:100%;position:fixed;border-radius:0;left:0;bottom:0}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container{width:100%;position:fixed;border-radius:0;left:0;bottom:0}}.ScaleModal .container .header-container{box-shadow:inset 0 -1px 0 var(--modal-stroke-and-border);padding:20px 16px 16px}.ScaleModal .container .header{margin:0;display:flex;align-items:center;width:100%;height:24px}.ScaleModal .container .header p{font-size:16px;font-weight:700;width:89.286%;margin:0 16px 0 0}.ScaleModal .container .header .scaleModalCloseButton{position:static;height:32px;width:32px}.ScaleModal .container .header .scaleModalCloseButton:hover{background:var(--view-header-button-hover);border-radius:4px}.ScaleModal .container .header .scaleModalCloseButton.selected{background:var(--view-header-button-active);cursor:default}.ScaleModal .container .content-container{padding:24px 16px 16px}.ScaleModal .container .content-container .ui__choice__label{font-weight:700;font-size:13px;line-height:16px;display:flex;align-items:center}.ScaleModal .container .content-container .scaleSetting .custom-option-wrapper{display:flex;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .scaleSetting .custom-option-wrapper .calibrate-btn{font-weight:400;line-height:16px;display:flex;align-items:center;text-align:center;color:#3183c8;background-color:transparent;border:none;cursor:pointer}.ScaleModal .container .content-container .scaleSetting .selector{margin-top:16px;width:100%;height:32px;margin-bottom:18px}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown{height:100%;width:100%!important;text-align:left}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown .arrow{flex:0 1 auto}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown__items{width:100%}.ScaleModal .container .content-container .scaleSetting .block{height:36px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container{margin-top:16px;margin-bottom:16px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .scale-ratio-display{display:flex;flex-direction:row;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper{display:flex;flex-direction:row}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{border-radius:4px;border:1px solid var(--border);width:94px;height:32px;margin-right:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{width:79px;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{width:79px;height:32px}}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input.invalid-value{border-color:red}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:100px;height:32px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper .Dropdown{height:100%;text-align:left}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper .Dropdown__items{width:100%}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:4rem;height:2rem}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:4rem;height:2rem}}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .warning-messages{height:16px;font-weight:400;color:red;margin-top:4px;position:relative;display:flex}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .warning-messages .world-value-warning{position:absolute;left:246px}.ScaleModal .container .content-container .precision-container{display:flex;font-size:13px;font-weight:400;margin-top:16px;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .precision-container .precision-selector{display:flex;justify-content:space-between;align-items:center;width:288px;height:32px}.ScaleModal .container .content-container .precision-container .precision-selector .precision-title{height:1rem;font-weight:400;font-size:13px;line-height:16px}.ScaleModal .container .content-container .precision-container .precision-selector .selector{width:223px;height:32px;z-index:0}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown{height:100%;width:100%!important;text-align:left}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown .arrow{flex:0 1 auto}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown__items{width:100%}.ScaleModal .container .content-container .precision-container .ui__choice__label{font-weight:400}.ScaleModal .container .content-container .precision-container .ui__choice--disabled .ui__choice__label{color:#cfd4da}.ScaleModal .container .footer{display:flex;padding:16px;align-items:center;justify-content:flex-end;width:100%;box-shadow:inset 0 1px 0 var(--modal-stroke-and-border);margin:0}.ScaleModal .container .footer .scale-update{height:32px;min-width:72px;display:flex;align-items:center;justify-content:center;color:var(--blue-5);background-color:transparent;border:1px solid var(--blue-5);box-sizing:border-box;border-radius:4px;cursor:pointer;margin-right:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .footer .scale-update{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .footer .scale-update{font-size:13px}}.ScaleModal .container .footer .scale-update:enabled:hover{background:var(--outline-hover)}.ScaleModal .container .footer .scale-update:disabled{opacity:.5;cursor:not-allowed}.ScaleModal .container .footer .scale-create{border:none;background-color:transparent;background:var(--primary-button);border-radius:4px;padding:0 8px;height:32px;min-width:72px;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}:host(:not([data-tabbing=true])) .ScaleModal .container .footer .scale-create,html:not([data-tabbing=true]) .ScaleModal .container .footer .scale-create{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .footer .scale-create{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .footer .scale-create{font-size:13px}}.ScaleModal .container .footer .scale-create:enabled:hover{background:var(--primary-button-hover)}.ScaleModal .container .footer .scale-create:disabled{opacity:.5;cursor:not-allowed}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport selectors from 'selectors';\nimport Tooltip from '../Tooltip';\nimport Dropdown from '../Dropdown';\nimport {\n  ifFractionalPrecision,\n  hintValues,\n  convertUnit,\n  fractionalUnits,\n  floatRegex,\n  inFractionalRegex,\n  ftInFractionalRegex,\n  ftInDecimalRegex,\n  parseFtInDecimal,\n  parseInFractional,\n  parseFtInFractional\n} from 'constants/measurementScale';\nimport classNames from 'classnames';\n\nconst Scale = window.Core.Scale;\n\nconst ScaleCustomProps = {\n  scale: PropTypes.array,\n  onScaleChange: PropTypes.func,\n  precision: PropTypes.number\n};\n\nfunction ScaleCustom({ scale, onScaleChange, precision }) {\n  const [measurementUnits] = useSelector((state) => [selectors.getMeasurementUnits(state)], shallowEqual);\n  const [pageValueDisplay, setPageValueDisplay] = useState('');\n  const [worldValueDisplay, setWorldValueDisplay] = useState('');\n  const [isFractionalPrecision, setIsFractionalPrecision] = useState(false);\n  const [pageWarningMessage, setPageWarningMessage] = useState('');\n  const [worldWarningMessage, setWorldWarningMessage] = useState('');\n  const [scaleValueBlurFlag, setScaleValueBlurFlag] = useState(false);\n\n  const pageValueInput = useRef(null);\n  const worldValueInput = useRef(null);\n\n  const [t] = useTranslation();\n\n  const filterFractionalUnits = (units) => units.filter((unit) => fractionalUnits.includes(unit));\n  const unitFromOptions = isFractionalPrecision ? filterFractionalUnits(measurementUnits.from) : measurementUnits.from;\n  const unitToOptions = isFractionalPrecision ? filterFractionalUnits(measurementUnits.to) : measurementUnits.to;\n\n  // If our scale has a unit that is not in the current 'from' measurement units, change it\n  // to the first unit in the list.\n  useEffect(() => {\n    if (!unitFromOptions.includes(scale[0][1])) {\n      onScaleUnitChange(unitFromOptions[0], true);\n    }\n  }, [scale[0][1]]);\n\n  // If our scale has a unit that is not in the current 'to' measurement units, change it\n  // to the first unit in the list. We want to wait until the 'from' unit is valid before\n  // setting the 'to' unit. Otherwise, we will reset the 'from' unit.\n  useEffect(() => {\n    if (unitFromOptions.includes(scale[0][1]) && !unitToOptions.includes(scale[1][1])) {\n      onScaleUnitChange(unitToOptions[0], false);\n    }\n  }, [scale[0][1], scale[1][1]]);\n\n  useEffect(() => {\n    const formatDecimal = (value) => {\n      return value?.toFixed((1 / precision).toString().length - 1);\n    };\n\n    if (scale[0][0] && pageValueInput?.current !== document.activeElement) {\n      if (!isFractionalPrecision) {\n        setPageValueDisplay(formatDecimal(scale[0][0]) || '');\n      } else {\n        setPageValueDisplay(Scale.getFormattedValue(scale[0][0], scale[0][1], precision, false, true) || '');\n      }\n    }\n    if (scale[1][0] && !(worldValueInput && worldValueInput.current === document.activeElement)) {\n      if (!isFractionalPrecision && scale[1][1] !== 'ft-in') {\n        setWorldValueDisplay(formatDecimal(scale[1][0]) || '');\n      } else {\n        setWorldValueDisplay(Scale.getFormattedValue(scale[1][0], scale[1][1], precision, false, true) || '');\n      }\n    }\n  }, [scale, precision, worldValueInput, pageValueInput, isFractionalPrecision, scaleValueBlurFlag]);\n\n  useEffect(() => {\n    setIsFractionalPrecision(ifFractionalPrecision(precision));\n  }, [precision]);\n\n  useEffect(() => {\n    if (isFractionalPrecision) {\n      setPageWarningMessage(hintValues[scale[0][1]]);\n      setWorldWarningMessage(hintValues[scale[1][1]]);\n    } else if (scale[1][1] === 'ft-in') {\n      setPageWarningMessage('');\n      setWorldWarningMessage(hintValues['ft-in decimal']);\n    } else {\n      setPageWarningMessage('');\n      setWorldWarningMessage('');\n    }\n  }, [scale, isFractionalPrecision]);\n\n  // Re-validate invalid world value input when world unit changes\n  useEffect(() => {\n    !isWorldValueValid && onInputValueChange(worldValueInput.current.value, false);\n  }, [scale[1][1]]);\n\n  // Re-validate invalid scale value input when isFractionalPrecision value changes\n  useEffect(() => {\n    if (!isPageValueValid && !isWorldValueValid) {\n      let pageScale = {\n        value: scale[0][0],\n        unit: scale[0][1]\n      };\n      onInputValueChange(pageValueInput.current.value, true, (newScale) => {\n        pageScale = newScale.pageScale;\n      });\n      let worldScale = {\n        value: scale[1][0],\n        unit: scale[1][1]\n      };\n      onInputValueChange(worldValueInput.current.value, false, (newScale) => {\n        worldScale = newScale.worldScale;\n      });\n\n      _onScaleChange(new Scale({ pageScale, worldScale }));\n    } else {\n      !isPageValueValid && onInputValueChange(pageValueInput.current.value, true);\n      !isWorldValueValid && onInputValueChange(worldValueInput.current.value, false);\n    }\n  }, [isFractionalPrecision]);\n\n  const isPageValueValid = !!scale[0][0];\n  const isWorldValueValid = !!scale[1][0];\n\n  const pageValueClass = classNames('scale-input', {\n    'invalid-value': !isPageValueValid\n  });\n  const worldValueClass = classNames('scale-input', {\n    'invalid-value': !isWorldValueValid\n  });\n\n  // If scale value is smaller than the current precision, replace it with precision value to prevent 0 value.\n  const _onScaleChange = (newScale) => {\n    const getPrecision = (unit) => (unit === 'ft-in' ? precision / 12 : precision);\n\n    if (newScale.pageScale.value && newScale.pageScale.value < precision) {\n      newScale.pageScale.value = getPrecision(newScale.pageScale.unit);\n    }\n    if (newScale.worldScale.value && newScale.worldScale.value < precision) {\n      newScale.worldScale.value = getPrecision(newScale.worldScale.unit);\n    }\n    onScaleChange(newScale);\n  };\n\n  const onInputValueChange = (value, isPageValue, getNewScale) => {\n    const updateScaleValue = (scaleValue) => {\n      if ((isPageValue && scaleValue !== scale[0][0]) || (!isPageValue && scaleValue !== scale[1][0])) {\n        const newScale = new Scale({\n          pageScale: { value: isPageValue ? scaleValue : scale[0][0], unit: scale[0][1] },\n          worldScale: { value: !isPageValue ? scaleValue : scale[1][0], unit: scale[1][1] }\n        });\n        if (getNewScale) {\n          getNewScale(newScale);\n        } else {\n          _onScaleChange(newScale);\n        }\n      }\n    };\n\n    if (isPageValue) {\n      setPageValueDisplay(value);\n    } else {\n      setWorldValueDisplay(value);\n    }\n    const inputValue = value.trim();\n    if (!isFractionalPrecision) {\n      if (!isPageValue && scale[1][1] === 'ft-in') {\n        if (ftInDecimalRegex.test(inputValue)) {\n          const result = parseFtInDecimal(inputValue);\n          if (result > 0) {\n            updateScaleValue(result);\n            return;\n          }\n        }\n      } else if (floatRegex.test(inputValue)) {\n        const scaleValue = parseFloat(inputValue) || 0;\n        updateScaleValue(scaleValue);\n        return;\n      }\n    } else {\n      const scaleUnit = isPageValue ? scale[0][1] : scale[1][1];\n      if (scaleUnit === 'in') {\n        if (inFractionalRegex.test(inputValue)) {\n          const result = parseInFractional(inputValue);\n          if (result > 0) {\n            updateScaleValue(result);\n            return;\n          }\n        }\n      } else if (scaleUnit === 'ft-in') {\n        if (ftInFractionalRegex.test(inputValue)) {\n          const result = parseFtInFractional(inputValue);\n          if (result > 0) {\n            updateScaleValue(result);\n            return;\n          }\n        }\n      }\n    }\n    updateScaleValue(undefined);\n  };\n\n  const onScaleUnitChange = (newUnit, isPageUnit) => {\n    let newPageScale;\n    if (isPageUnit && newUnit !== scale[0][1]) {\n      newPageScale = {\n        value: scale[0][0] ? convertUnit(scale[0][0], scale[0][1], newUnit) : scale[0][0],\n        unit: newUnit\n      };\n    } else {\n      newPageScale = { value: scale[0][0], unit: scale[0][1] };\n    }\n    let newWorldScale;\n    if (!isPageUnit && newUnit !== scale[1][1]) {\n      newWorldScale = {\n        value: scale[1][0] ? convertUnit(scale[1][0], scale[1][1], newUnit) : scale[1][0],\n        unit: newUnit\n      };\n    } else {\n      newWorldScale = { value: scale[1][0], unit: scale[1][1] };\n    }\n\n    _onScaleChange(new Scale({ pageScale: newPageScale, worldScale: newWorldScale }));\n  };\n\n  const getInputPlaceholder = (isPageValue) => {\n    const unit = isPageValue ? scale[0][1] : scale[1][1];\n    return isFractionalPrecision ? hintValues[unit] : (unit === 'ft-in' ? hintValues['ft-in decimal'] : '');\n  };\n\n  const onInputBlur = () => {\n    setScaleValueBlurFlag((flag) => !flag);\n  };\n\n  return (\n    <div className=\"custom-scale-container\">\n      <div className=\"scale-ratio-input-container\">\n        <div className=\"scale-ratio-display\">\n          <div className=\"input-wrapper\">\n            <input\n              type={isFractionalPrecision ? 'text' : 'number'}\n              min=\"0\"\n              className={pageValueClass}\n              value={pageValueDisplay}\n              data-element=\"customPageScaleValue\"\n              onChange={(e) => onInputValueChange(e.target.value, true)}\n              placeholder={getInputPlaceholder(true)}\n              ref={pageValueInput}\n              onBlur={onInputBlur}\n            />\n            <Tooltip content={'option.measurement.scaleModal.paperUnits'}>\n              <div className=\"unit-input\">\n                <Dropdown\n                  dataElement=\"customPageScaleUnit\"\n                  items={unitFromOptions}\n                  onClickItem={(value) => onScaleUnitChange(value, true)}\n                  currentSelectionKey={scale[0][1]}\n                />\n              </div>\n            </Tooltip>\n          </div>\n          {' = '}\n          <div className=\"input-wrapper\">\n            <input\n              type={(isFractionalPrecision || scale[1][1] === 'ft-in') ? 'text' : 'number'}\n              min='0'\n              className={worldValueClass}\n              value={worldValueDisplay}\n              data-element=\"customDisplayScaleValue\"\n              onChange={(e) => onInputValueChange(e.target.value, false)}\n              placeholder={getInputPlaceholder(false)}\n              ref={worldValueInput}\n              onBlur={onInputBlur}\n            />\n            <Tooltip content={'option.measurement.scaleModal.displayUnits'}>\n              <div className=\"unit-input\">\n                <Dropdown\n                  items={unitToOptions}\n                  dataElement=\"customDisplayScaleUnit\"\n                  onClickItem={(value) => onScaleUnitChange(value, false)}\n                  currentSelectionKey={scale[1][1]}\n                />\n              </div>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n      <div className=\"warning-messages\">\n        {!isPageValueValid && (\n          <div>\n            {`${t('option.measurement.scaleModal.incorrectSyntax')} ${pageWarningMessage}`}\n          </div>\n        )}\n        {!isWorldValueValid && (\n          <div className=\"world-value-warning\">\n            {`${t('option.measurement.scaleModal.incorrectSyntax')} ${worldWarningMessage}`}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nScaleCustom.propTypes = ScaleCustomProps;\n\nexport default ScaleCustom;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Swipeable } from 'react-swipeable';\nimport { Choice, FocusTrap } from '@pdftron/webviewer-react-toolkit';\nimport classNames from 'classnames';\nimport {\n  precisionOptions,\n  PrecisionType,\n  scalePresetPrecision,\n  PresetMeasurementSystems,\n  fractionalUnits,\n  ifFractionalPrecision,\n  initialScale\n} from 'constants/measurementScale';\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport ScaleCustom from './ScaleCustom';\nimport DataElements from 'constants/dataElement';\nimport useDidUpdate from 'hooks/useDidUpdate';\nimport Button from 'components/Button';\nimport Dropdown from 'components/Dropdown';\nimport Tooltip from 'components/Tooltip';\nimport DataElementWrapper from 'components/DataElementWrapper';\n\nimport './ScaleModal.scss';\n\nconst Scale = window.Core.Scale;\n\nexport const scaleOptions = {\n  CUSTOM: 'custom',\n  PRESET: 'preset'\n};\n\nconst ScaleModal = ({ annotations, selectedTool }) => {\n  const dispatch = useDispatch();\n  const [t] = useTranslation();\n\n  const [\n    isDisabled,\n    isOpen,\n    isHidden,\n    currentToolbarGroup,\n    selectedScale,\n    activeToolName,\n    isAddingNewScale,\n    measurementScalePreset,\n    { tempScale, isFractionalUnit },\n    isMultipleScalesMode\n  ] = useSelector((state) => [\n    selectors.isElementDisabled(state, DataElements.SCALE_MODAL),\n    selectors.isElementOpen(state, DataElements.SCALE_MODAL),\n    selectors.isElementHidden(state, DataElements.SCALE_MODAL),\n    selectors.getCurrentToolbarGroup(state),\n    selectors.getSelectedScale(state),\n    selectors.getActiveToolName(state),\n    selectors.getIsAddingNewScale(state),\n    selectors.getMeasurementScalePreset(state),\n    selectors.getCalibrationInfo(state),\n    selectors.getIsMultipleScalesMode(state)\n  ]);\n\n  const [isFractionalPrecision, setIsFractionalPrecision] = useState(false);\n  const [precisionOption, setPrecisionOption] = useState(precisionOptions[PrecisionType.DECIMAL][0]);\n  const [scaleOption, setScaleOption] = useState(scaleOptions.CUSTOM);\n  const [presetScale, setPresetScale] = useState(measurementScalePreset[PresetMeasurementSystems.METRIC][0]);\n  const [customScale, setCustomScale] = useState(new Scale(''));\n  const [hasScaleChanged, setHasScaleChanged] = useState(false);\n\n  const totalScalesCount = Object.keys(core.getScales()).length;\n\n  useEffect(() => {\n    if (!precisionOptions[precisionType].includes(precisionOption)) {\n      setPrecisionOption(precisionOptions[precisionType][0]);\n    }\n    setPresetScale(measurementScalePreset[presetMeasurementSystem][0]);\n  }, [isFractionalPrecision]);\n\n  useEffect(() => {\n    setScaleOption(scaleOptions.CUSTOM);\n    setCustomScale(new Scale(selectedScale.getScaleRatioAsArray()));\n\n    const precision = core.getScalePrecision(selectedScale);\n    if (!precision) {\n      return;\n    }\n    const isFractional = ifFractionalPrecision(precision);\n    setIsFractionalPrecision(isFractional);\n\n    const precisionItems = precisionOptions[getPrecisionType(isFractional)];\n    const precisionItem = precisionItems.find((item) => item[1] === precision);\n    setPrecisionOption(precisionItem);\n\n    // Update/Create button should be disabled until the user makes a change\n    setTimeout(() => {\n      setHasScaleChanged(false);\n    });\n  }, [selectedScale]);\n\n  useDidUpdate(() => {\n    if (scaleOption === scaleOptions.CUSTOM) {\n      setCustomScale(presetScale[1]);\n    } else {\n      const presetPrecisionOption = scalePresetPrecision[presetScale[0]];\n      if (presetPrecisionOption && presetPrecisionOption !== precisionOption) {\n        setPrecisionOption(presetPrecisionOption);\n      }\n    }\n  }, [scaleOption]);\n\n  useDidUpdate(() => {\n    if (currentToolbarGroup === 'toolbarGroup-Measure') {\n      closeModal();\n    }\n  }, [currentToolbarGroup]);\n\n  useEffect(() => {\n    const newPrecisionOption = scalePresetPrecision[presetScale[0]];\n    if (newPrecisionOption && scaleOption === scaleOptions.PRESET) {\n      setPrecisionOption(newPrecisionOption);\n    }\n  }, [presetScale]);\n\n  useEffect(() => {\n    if (!isHidden && tempScale) {\n      // Triggered when calibration is applied\n      setCustomScale(new Scale(tempScale));\n      dispatch(actions.updateCalibrationInfo({ isCalibration: false }));\n      setIsFractionalPrecision(isFractionalUnit);\n    }\n  }, [isHidden]);\n\n  useEffect(() => {\n    setHasScaleChanged(true);\n  }, [precisionOption, customScale, presetScale, scaleOption]);\n\n  useEffect(() => {\n    // Reset component state when adding new scale\n    if (isOpen && isAddingNewScale && !tempScale) {\n      setScaleOption(scaleOptions.CUSTOM);\n      setCustomScale(initialScale);\n      setIsFractionalPrecision(false);\n      setPrecisionOption(precisionOptions[PrecisionType.DECIMAL][0]);\n    }\n  }, [isOpen, isAddingNewScale]);\n\n  const closeModal = () => {\n    dispatch(actions.closeElement(DataElements.SCALE_MODAL));\n  };\n\n  const createAndApplyScale = (scale, applyTo) => {\n    core.createAndApplyScale(scale, applyTo);\n    closeModal();\n  };\n\n  const replaceScales = (originalScales, scale) => {\n    core.replaceScales(originalScales, scale);\n    closeModal();\n  };\n\n  const toggleFractionalPrecision = () => {\n    setIsFractionalPrecision((isFractionalPrecision) => !isFractionalPrecision);\n  };\n\n  const openCalibrationTool = () => {\n    core.setToolMode('AnnotationCreateCalibrationMeasurement');\n    const unit = isCustomOption ? (customScale.worldScale?.unit || '') : presetScale[1].worldScale.unit;\n    dispatch(actions.updateCalibrationInfo({ isCalibration: true, previousToolName: activeToolName, defaultUnit: unit }));\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, true));\n  };\n\n  const getCurrentScale = () => {\n    const getPrecisionsValue = (value, unit) => {\n      let temp = value;\n      let precisionValue = precisionOption[1];\n\n      if (!isFractionalPrecision) {\n        if (unit !== 'ft-in') {\n          temp = temp.toFixed((1 / precisionValue).toString().length - 1);\n        }\n      } else {\n        if (unit === 'ft-in') {\n          precisionValue /= 12;\n        }\n        temp = Math.round(temp / precisionValue) * precisionValue;\n      }\n\n      return temp * 1;\n    };\n\n    if (isCustomOption) {\n      const scale = customScale.getScaleRatioAsArray();\n      scale[0][0] = getPrecisionsValue(scale[0][0], scale[0][1]);\n      scale[1][0] = getPrecisionsValue(scale[1][0], scale[1][1]);\n      return scale;\n    }\n    return presetScale[1].toString();\n  };\n\n  const onUpdate = () => {\n    replaceScales(\n      [selectedScale],\n      new Scale(getCurrentScale(), precisionOption[1])\n    );\n  };\n\n  const onCreate = () => {\n    createAndApplyScale(\n      new Scale(getCurrentScale(), precisionOption[1]),\n      [...annotations, selectedTool]\n    );\n  };\n\n  const modalClass = classNames('Modal', 'ScaleModal', {\n    open: !isHidden,\n    closed: isHidden\n  });\n  const isCustomOption = scaleOption === scaleOptions.CUSTOM;\n  const presetMeasurementSystem = isFractionalPrecision ? PresetMeasurementSystems.IMPERIAL : PresetMeasurementSystems.METRIC;\n  const getPrecisionType = (isFractional) => (isFractional ? PrecisionType.FRACTIONAL : PrecisionType.DECIMAL);\n  const precisionType = getPrecisionType(isFractionalPrecision);\n  const isCurrentScaleValid = !isCustomOption || customScale.isValid();\n  const isFractionalUnitsToggleDisabled = isCustomOption && !(fractionalUnits.includes(customScale.pageScale?.unit) && fractionalUnits.includes(customScale.worldScale?.unit));\n\n  return !isDisabled && (\n    <Swipeable onSwipedUp={closeModal} onSwipedDown={closeModal} preventDefaultTouchmoveEvent>\n      <FocusTrap locked={!isHidden}>\n        <div className={modalClass} data-element={DataElements.SCALE_MODAL}>\n          <div className=\"container\">\n            <div className=\"header-container\">\n              <div className=\"header\">\n                <p>{t('option.measurementOption.scale')}</p>\n                <Button\n                  className=\"scaleModalCloseButton\"\n                  title=\"action.close\"\n                  img=\"ic_close_black_24px\"\n                  onClick={closeModal}\n                />\n              </div>\n            </div>\n            <div className=\"content-container\">\n              <div className=\"scaleSetting\">\n                <div className=\"custom-option-wrapper\">\n                  <div className=\"custom-scale-option\">\n                    <Choice\n                      data-element=\"customScaleOption\"\n                      radio\n                      name=\"setting\"\n                      onChange={() => setScaleOption(scaleOptions.CUSTOM)}\n                      checked={isCustomOption}\n                      label={`${t('option.measurement.scaleModal.custom')}:`}\n                      center\n                    />\n                  </div>\n                  {isCustomOption && (\n                    <button data-element=\"calibrate\" className=\"calibrate-btn\" onMouseDown={openCalibrationTool}>\n                      {t('option.measurement.scaleModal.calibrate')}\n                    </button>\n                  )}\n                </div>\n                {isCustomOption ? (\n                  <ScaleCustom\n                    scale={customScale.getScaleRatioAsArray()}\n                    onScaleChange={setCustomScale}\n                    precision={precisionOption[1]}\n                  />\n                ) : (\n                  <div className=\"block\" />\n                )}\n                <Choice\n                  data-element=\"presetScaleOption\"\n                  radio\n                  onChange={() => setScaleOption(scaleOptions.PRESET)}\n                  name=\"setting\"\n                  checked={!isCustomOption}\n                  label={`${t('option.measurement.scaleModal.preset')}:`}\n                  center\n                />\n                {!isCustomOption && (\n                  <div className=\"scaleModal__preset-container\">\n                    <div className=\"selector\">\n                      <Dropdown\n                        dataElement=\"presetScales\"\n                        items={measurementScalePreset[presetMeasurementSystem].map((item) => item[0])}\n                        currentSelectionKey={presetScale[0]}\n                        onClickItem={(_item, i) => setPresetScale(measurementScalePreset[presetMeasurementSystem][i])}\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n              <div className=\"precision-container\">\n                <div className=\"precision-selector\">\n                  <div className=\"precision-title\">{t('option.shared.precision')}:</div>\n                  <div className=\"selector\">\n                    <Dropdown\n                      dataElement=\"scalePrecisions\"\n                      items={precisionOptions[precisionType].map((item) => item[0])}\n                      currentSelectionKey={precisionOption[0]}\n                      onClickItem={(_item, i) => setPrecisionOption(precisionOptions[precisionType][i])}\n                    />\n                  </div>\n                </div>\n                <Tooltip content={t('option.measurement.scaleModal.fractionUnitsTooltip')}>\n                  <div>\n                    <Choice\n                      isSwitch\n                      leftLabel\n                      id=\"scale-modal-fractional-units\"\n                      label={t('option.measurement.scaleModal.fractionalUnits')}\n                      checked={isFractionalPrecision}\n                      onChange={toggleFractionalPrecision}\n                      disabled={isFractionalUnitsToggleDisabled}\n                    />\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n            <div className=\"footer\">\n              <DataElementWrapper\n                type={'button'}\n                onClick={onUpdate}\n                className=\"scale-update\"\n                dataElement=\"updateScale\"\n                disabled={isAddingNewScale || !isCurrentScaleValid || !hasScaleChanged}\n              >\n                {t('action.update')}\n              </DataElementWrapper>\n              <button\n                onClick={onCreate}\n                className=\"scale-create\"\n                data-element=\"createScale\"\n                disabled={!isCurrentScaleValid || (!isMultipleScalesMode && totalScalesCount) || (!isAddingNewScale && !hasScaleChanged)}\n              >\n                {t('action.create')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </FocusTrap>\n    </Swipeable>\n  );\n};\n\nexport default ScaleModal;\n","import ScaleModal from './ScaleModal';\n\nexport default ScaleModal;"],"sourceRoot":""}