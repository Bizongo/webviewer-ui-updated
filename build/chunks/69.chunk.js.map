{"version":3,"sources":["webpack:///./src/components/ScaleOverlay/ScaleOverlay.scss?c621","webpack:///./src/components/ScaleOverlay/ScaleOverlay.scss","webpack:///./src/components/ScaleOverlay/ScaleSelector.js","webpack:///./src/components/ScaleOverlay/ScaleHeader.js","webpack:///./src/constants/measurementTypes.js","webpack:///./src/helpers/getNumberOfDecimalPlaces.js","webpack:///./src/helpers/getAngleInRadians.js","webpack:///./src/components/MeasurementOverlay/LineMeasurementInput.js","webpack:///./src/helpers/getFormattedUnit.js","webpack:///./src/components/MeasurementOverlay/EllipseMeasurementOverlay.js","webpack:///./src/components/ScaleOverlay/MeasurementDetail.js","webpack:///./src/components/ScaleOverlay/CalibrationOverlay.js","webpack:///./src/components/ScaleOverlay/ScaleOverlay.js","webpack:///./src/components/ScaleOverlay/ScaleOverlayContainer.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","___CSS_LOADER_API_IMPORT___","propTypes","scales","PropTypes","arrayOf","object","isRequired","selectedScales","string","onScaleSelected","func","onAddingNewScale","Scale","Core","ScaleSelector","_ref","_ref$scales","_ref$selectedScales","t","_slicedToArray","useTranslation","dispatch","useDispatch","isMultipleScalesMode","useSelector","state","selectors","getIsMultipleScalesMode","isMultipleScales","openScaleDeletionModal","scale","deleteScale","scaleInfo","core","getScales","measurements","relatedPages","Set","toString","measurementItem","Annotations","Annotation","add","measurementsNum","pages","_toConsumableArray","getScaleInfo","warning","message","React","createElement","concat","join","title","confirmBtnText","onConfirm","actions","showWarningMessage","renderScale","precision","getScalePrecision","pageScaleStr","getFormattedValue","pageScale","value","unit","worldScaleStr","worldScale","scaleDisplay","selectedScale","_useState2","useState","isDropDownOpen","setOpenDropDown","selectorRef","useRef","useOnClickOutside","DataElementWrapper","className","dataElement","tabIndex","onClick","prevValue","ref","Icon","glyph","classNames","map","key","onMouseDown","e","preventDefault","stopPropagation","disabled","includes","ScaleHeader","data-element","measurementTypeTranslationMap","distanceMeasurement","perimeterMeasurement","areaMeasurement","rectangularAreaMeasurement","cloudyRectangularAreaMeasurement","ellipseMeasurement","arcMeasurement","split","pt1","pt2","pt3","angle","AB","Math","sqrt","pow","x","y","BC","AC","acos","atan2","abs","PI","unitMap","LineMeasurementInput","annotation","isOpen","bool","selectedTool","_selectedTool$Measure","_annotation$getMeasur","isReadOnly","isDocumentReadOnly","factor","Measure","axis","DisplayUnits","getLineLength","toFixed","setLength","_useState4","toggleDistanceInput","setDistanceInputToggle","_useState6","toggleAngleInput","setAngleToggle","useEffect","onAnnotationChanged","setAngle","computeAngle","addEventListener","removeEventListener","onInputChanged","event","target","validateLineLength","finishAnnotation","getTool","finish","selectAnnotation","getAnnotationManager","deselectAnnotation","Precision","ensureLineIsWithinBounds","useCallback","lengthInPts","value1","value2","maxLengthInPts","getMaxLineLengthInPts","setLineLength","min","forceLineRedraw","getAnnotationUnit","_annotation$DisplayUn","annotUnit","annotationManager","drawAnnotations","PageNumber","trigger","maxX","maxY","currentPageNumber","getCurrentPage","documentWidth","getPageWidth","documentHeight","getPageHeight","angleInDegrees","getAngle","startPoint","getStartPoint","startX","startY","maxLenX","cos","maxLenY","sin","onAngleChange","angleInRadians","start","Start","endX","endY","setEndPoint","adjustRect","setLineAngle","_useState8","Fragment","type","autoFocus","isMobileDevice","onChange","onBlur","onKeyDown","getMeasurementTextWithScaleAndUnits","call","max","getAngleInRadians","End","deltaX","deltaY","renderDeltas","props","propName","componentName","checkPropTypes","shape","number","getContents","Error","defaults","EllipseMeasurementOverlay","_selectedTool$default","_selectedTool$default2","area","data","getFormattedUnit","refreshRadius","setRadius","computeRadius","onAnnotationDeselected","annotations","action","ensureDiameterIsWithinBounds","getWidth","decimalPlaces","getNumberOfDecimalPlaces","Width","onChangeRadiusLength","eventValue","radius","diameterInPts","rect","getRect","newRect","x1","y1","x2","y2","setHeight","setWidth","resize","forceEllipseRedraw","redrawAnnotation","getMaxDiameterInPts","boundingRect","width","height","Height","precisionFractions","validateDiameter","MeasurementDetail","icon","color","translationKey","useMemo","_selectedTool$default3","mapAnnotationToKey","mapToolNameToKey","name","getDataWithKey","Color","toHexString","StrokeColor","contents","keyDisplayNameMap","renderValue","Length","Radius","getIPathAnnotationPts","path","getPath","pts","_ref2","filter","pt","apply","Angle","undefined","renderAngle","renderDetails","CalibrationOverlayPropTypes","tempScale","onCancelCalibrationMode","onApplyCalibration","CalibrationOverlay","_Scale$worldScale","isCalibrationPopupOpen","isElementOpen","canApplyCalibration","onTouchStart","updateIsCalibration","enableOrDisableToolElements","ScaleOverlay","forceUpdate","_useSelector2","getCalibrationInfo","getActiveToolName","shallowEqual","_useSelector2$","isCalibration","_useSelector2$$previo","previousToolName","isFractionalUnit","activeToolName","setScales","shouldShowMeasurementDetail","Object","keys","onScaleUpdated","newScales","updateScales","onCreateAnnotationWithNoScale","_measurementItem$Meas","has","totalScales","memo","measurementDataElements","ScaleOverlayContainer","isElementDisabled","DataElements","SCALE_OVERLAY_CONTAINER","getScaleOverlayPosition","isDisabled","initialPosition","position","setPosition","useReducer","_useSelector4","getDocumentContainerWidth","getDocumentContainerHeight","documentContainerWidth","documentContainerHeight","containerRef","documentElement","getViewerElement","documentContainerElement","getScrollViewElement","style","initialPositionParts","offset","left","top","offsetTop","containerHeight","current","getBoundingClientRect","offsetLeft","offsetWidth","containerWidth","isNaN","calculateStyle","bounds","syncDraggablePosition","updateCalibrationInfo","setCustomElementOverrides","openScaleModal","setSelectedScale","openElements","SCALE_MODAL","setIsAddingNewScale","newScale","applyTo","scaleToDelete","getDocumentViewer","getMeasurementManager","getOldScalesToDeleteAfterApplying","createAndApplyScale","confirmScaleToDelete","setToolMode","setIsElementHidden","deleteAnnotations","Draggable","bottom","right","DEFAULT_DISTANCE","onDrag","onStop","cancel","Overlay","open","closed"],"mappings":"+EAAA,IAAIA,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,SAAUC,GAgBX,IAAKC,OAAOC,8BAEV,YADAC,SAASC,KAAKC,YAAYL,GAI5B,IAAIM,EAEJA,EAAgBH,SAASI,qBAAqB,oBAEzCD,EAAcE,SACjBF,EAzBF,SAASG,EAAwBC,EAASC,EAAOR,UAC/C,MAAMS,EAAW,GAYjB,OATAD,EAAKE,iBAAiBH,GAASI,QAAQC,GAAMH,EAASI,KAAKD,IAG3DJ,EAAKE,iBAAiB,KAAKC,QAAQC,IAC7BA,EAAGE,YACLL,EAASI,QAAQP,EAAwBC,EAASK,EAAGE,eAIlDL,EAYSH,CAAwB,qBAG1C,MAAMS,EAAkB,GACxB,IAAK,IAAIpB,EAAI,EAAGA,EAAIQ,EAAcE,OAAQV,IAAK,CAC7C,MAAMqB,EAAeb,EAAcR,GACnC,GAAU,IAANA,EACFqB,EAAaF,WAAWZ,YAAYL,GACpCA,EAASoB,OAAS,WACZF,EAAgBV,OAAS,GAC3BU,EAAgBJ,QAASO,IAEvBA,EAAUC,UAAYtB,EAASsB,iBAIhC,CACL,MAAMD,EAAYrB,EAASuB,WAAU,GACrCJ,EAAaF,WAAWZ,YAAYgB,GACpCH,EAAgBF,KAAKK,MAIzC,WAAoB,GAEP5B,EAAIC,EAASK,GAI1BF,EAAO2B,QAAU9B,EAAQ+B,QAAU,I,sBChEnCD,EADkC,EAAQ,GAChCE,EAA4B,IAE9BV,KAAK,CAACnB,EAAOC,EAAI,swQAAuwQ,KAEhyQ0B,EAAQC,OAAS,CAChB,kBAAqB,OACrB,mBAAsB,QAEvB5B,EAAO2B,QAAUA,G,yqDCEjB,IAAMG,EAAY,CAChBC,OAAQC,IAAUC,QAAQD,IAAUE,QAAQC,WAC5CC,eAAgBJ,IAAUC,QAAQD,IAAUK,QAAQF,WACpDG,gBAAiBN,IAAUO,KAAKJ,WAChCK,iBAAkBR,IAAUO,KAAKJ,YAG7BM,EAAQrC,OAAOsC,KAAKD,MAEpBE,EAAgB,SAAHC,GAAgF,IAAAC,EAAAD,EAA1Eb,cAAM,IAAAc,EAAG,GAAEA,EAAAC,EAAAF,EAAER,sBAAc,IAAAU,EAAG,GAAEA,EAAER,EAAeM,EAAfN,gBAAiBE,EAAgBI,EAAhBJ,iBACnEO,EAAqBC,EAAhBC,cAAgB,GAApB,GACFC,EAAWC,cAEXC,EAAuBC,aAAY,SAACC,GAAK,OAAKC,IAAUC,wBAAwBF,MAEhFG,EAAmBrB,EAAezB,OAAS,EAkB3C+C,EAAyB,SAACC,GAC9B,GAAKA,EAAL,CAGA,IAAMC,EAAc,IAAInB,EAAMkB,GACxBE,EArBa,SAACD,GACpB,IAAM7B,EAAS+B,IAAKC,YACdC,EAAe,GACfC,EAAe,IAAIC,IAOzB,OANAnC,EAAO6B,EAAYO,YAAYlD,SAAQ,SAACmD,GAClCA,aAA2BhE,OAAOsC,KAAK2B,YAAYC,aACrDL,EAAaM,IAAIH,EAA4B,YAC7CJ,EAAa7C,KAAKiD,OAGf,CACLI,gBAAiBR,EAAarD,OAC9B8D,MAAKC,EAAMT,IASKU,CAAaf,GAoCzBgB,EAAU,CACdC,UApCkChB,EAAUY,MAAM9D,OAElDmE,IAAAC,cAAA,WACED,IAAAC,cAAA,SACED,IAAAC,cAAA,YACGhC,EAAE,6DACH+B,IAAAC,cAAA,aAAAC,OAAQjC,EAAE,wDAAuD,KAAAiC,OAAInB,EAAUY,MAAMQ,KAAK,MAAK,MAC9FlC,EAAE,6DACH+B,IAAAC,cAAA,aAAAC,OAAQnB,EAAUW,gBAAe,KAAAQ,OAAInB,EAAUW,gBAAkB,EAAIzB,EAAE,oDAAsDA,EAAE,mDAAkD,OAEnL+B,IAAAC,cAAA,YAAM,KACND,IAAAC,cAAA,YACGhC,EAAE,kDACH+B,IAAAC,cAAA,aAAAC,OAAQjC,EAAE,oDAAmD,MAC5DA,EAAE,+DAGP+B,IAAAC,cAAA,SACGhC,EAAE,uDAIP+B,IAAAC,cAAA,WACED,IAAAC,cAAA,SACED,IAAAC,cAAA,YACGhC,EAAE,kDACH+B,IAAAC,cAAA,aAAAC,OAAQjC,EAAE,oDAAmD,OAC5DA,EAAE,wDAUTmC,MALY,GAAHF,OAAMjC,EAAE,mDAAkD,KAAAiC,OAAIpB,EAAYO,YAMnFgB,eALqBpC,EAAE,kBAMvBqC,UAAW,kBAAMtB,IAAKF,YAAYA,KAEpCV,EAASmC,IAAQC,mBAAmBV,MAGhCW,EAAc,SAAC5B,GACnB,IAAM6B,EAAY1B,IAAK2B,kBAAkB9B,GACnC+B,EAAejD,EAAMkD,kBAAkBhC,EAAMiC,UAAUC,MAAOlC,EAAMiC,UAAUE,KAAMN,GAAW,GAC/FO,EAAgBtD,EAAMkD,kBAAkBhC,EAAMqC,WAAWH,MAAOlC,EAAMqC,WAAWF,KAAMN,GAAW,GAClGS,EAAe,GAAHjB,OAAMU,EAAY,OAAAV,OAAMe,GAE1C,OAAOjB,IAAAC,cAAA,WAAKD,IAAAC,cAAA,YAAOkB,KAGjBf,EAAQnC,EAAE,kDAEd,GAAIX,EAAezB,SAAW8C,EAAkB,CAC9C,IAAMyC,EAAgB,IAAIzD,EAAML,EAAe,IAC/C8C,EAAQK,EAAYW,GAMtB,IAAyDC,EAAAnD,EAAfoD,oBAAS,GAAM,GAAlDC,EAAcF,EAAA,GAAEG,EAAeH,EAAA,GAKhCI,EAAcC,iBAAO,MAM3B,OAJAC,YAAkBF,GAAa,WAC7BD,GAAgB,MAIhBxB,IAAAC,cAAC2B,IAAkB,CACjBC,UAAU,yBACVC,YAAY,gBACZC,SAAU,EACVC,QAfmB,WACrBR,GAAgB,SAACS,GAAS,OAAMA,MAe9BC,IAAKT,GAELzB,IAAAC,cAAA,UAAQ4B,UAAU,2BACfzB,EACDJ,IAAAC,cAACkC,IAAI,CAACN,UAAU,sBAAsBO,MAAM,uBAE7Cb,GACCvB,IAAAC,cAAA,MAAI4B,UAAWQ,IAAW,uBACxBrC,IAAAC,cAAA,UACED,IAAAC,cAAA,WAAMG,GACNJ,IAAAC,cAACkC,IAAI,CAACN,UAAU,sBAAsBO,MAAM,qBAE7CnF,EAAOqF,KAAI,SAACvB,GAAK,OAChBf,IAAAC,cAAA,MAAIsC,IAAKxB,EAAM1B,YACbW,IAAAC,cAAA,UACE4B,UAAU,SACVW,YAAa,SAACC,GACZA,EAAEC,iBACFD,EAAEE,kBACF/D,EAAuBmC,EAAM1B,aAE/BuD,SAAU3F,EAAOpB,QAAU,GAE3BmE,IAAAC,cAACkC,IAAI,CAACC,MAAM,sBAEdpC,IAAAC,cAAA,UACE4B,UAAWQ,IAAW,CACpBjH,SAAS,EACT,kBAAmBkC,EAAeuF,SAAS9B,EAAM1B,cAEnDmD,YAAa,kBAAMhF,EAAgBF,EAAgByD,EAAM1B,cAExDoB,EAAYM,QAIlBzC,GACC0B,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAQuC,YAAa9E,EAAkBmE,UAAU,iBAC9C5D,EAAE,oDAUnBJ,EAAcb,UAAYA,EAEXa,Q,+hCChLf,IAAMb,EAAY,CAChBC,OAAQC,IAAUC,QAAQD,IAAUE,QAAQC,WAC5CC,eAAgBJ,IAAUC,QAAQD,IAAUK,QAAQF,WACpDG,gBAAiBN,IAAUO,KAAKJ,WAChCK,iBAAkBR,IAAUO,KAAKJ,YAG7ByF,EAAc,SAAHhF,GAAsE,IAAhEb,EAAMa,EAANb,OAAQK,EAAcQ,EAAdR,eAAgBE,EAAeM,EAAfN,gBAAiBE,EAAgBI,EAAhBJ,iBACvDO,EAAqBC,EAAhBC,cAAgB,GAApB,GAER,OACE6B,IAAAC,cAAA,OAAK4B,UAAU,wBACb7B,IAAAC,cAACkC,IAAI,CAACC,MAAM,eAAeP,UAAU,uBACrC7B,IAAAC,cAAA,OAAK4B,UAAU,uBAAuB5D,EAAE,mCACvChB,EAAOpB,OACNmE,IAAAC,cAACpC,EAAa,CACZZ,OAAQA,EACRK,eAAgBA,EAChBE,gBAAiBA,EACjBE,iBAAkBA,IAGpBsC,IAAAC,cAAA,UAAQ4B,UAAU,gBAAgBG,QAAStE,EAAkBqF,eAAa,eAAe9E,EAAE,kDAMnG6E,EAAY9F,UAAYA,EACT8F,Q,uBCnCFE,EAAgC,CAC3CC,oBAAqB,gDACrBC,qBAAsB,iDACtBC,gBAAiB,4CACjBC,2BAA4B,4CAC5BC,iCAAkC,4CAClCC,mBAAoB,4CACpBC,eAAgB,4C,SCPH,WAAC7C,GAAS,OAAoB,IAAdA,EAAkB,EAAIA,aAAS,EAATA,EAAWrB,WAAWmE,MAAM,KAAK,GAAG3H,Q,QCA1E,WAAC4H,EAAKC,EAAKC,GACxB,IAAIC,EAEJ,GAAIH,GAAOC,EACT,GAAIC,EAAK,CAEP,IAAME,EAAKC,KAAKC,KAAKD,KAAKE,IAAIN,EAAIO,EAAIR,EAAIQ,EAAG,GAAKH,KAAKE,IAAIN,EAAIQ,EAAIT,EAAIS,EAAG,IACpEC,EAAKL,KAAKC,KAAKD,KAAKE,IAAIN,EAAIO,EAAIN,EAAIM,EAAG,GAAKH,KAAKE,IAAIN,EAAIQ,EAAIP,EAAIO,EAAG,IACpEE,EAAKN,KAAKC,KAAKD,KAAKE,IAAIL,EAAIM,EAAIR,EAAIQ,EAAG,GAAKH,KAAKE,IAAIL,EAAIO,EAAIT,EAAIS,EAAG,IAC1EN,EAAQE,KAAKO,MAAMF,EAAKA,EAAKN,EAAKA,EAAKO,EAAKA,IAAO,EAAID,EAAKN,SAG5DD,EAAQE,KAAKQ,MAAMZ,EAAIQ,EAAIT,EAAIS,EAAGR,EAAIO,EAAIR,EAAIQ,GAG9CL,GADAA,EAAQE,KAAKS,IAAIX,IACDE,KAAKU,GAAK,EAAIV,KAAKU,GAAKZ,EAAQA,EAIpD,OAAOA,G,+hCCVT,IAAMa,EAAU,CACd,MAAQ,KACR,MAAQ,MAGVC,EAAqB1H,UAAY,CAC/B2H,WAAYzH,IAAUE,OACtBwH,OAAQ1H,IAAU2H,KAAKxH,WACvByH,aAAc5H,IAAUE,QAG1B,IAAMO,EAAQrC,OAAOsC,KAAKD,MAE1B,SAAS+G,EAAoB5G,GAAuC,IAAAiH,EAAAC,EAApCL,EAAU7G,EAAV6G,WAAYC,EAAM9G,EAAN8G,OAAQE,EAAYhH,EAAZgH,aAC3C7G,EAAqBC,EAAhBC,cAAgB,GAApB,GACF8G,EAAa1G,aAAY,SAACC,GAAK,OAAKC,IAAUyG,mBAAmB1G,MACjE2G,EAASR,aAAU,EAAVA,EAAYS,QAAQC,KAAK,GAAGF,OACrCnE,GAAO2D,aAAU,EAAVA,EAAYW,aAAa,MAAMR,SAAqB,QAATC,EAAZD,EAAcM,eAAO,IAAAL,OAAT,EAAZA,EAAuB/D,MACyBK,EAAAnD,EAAhEoD,qBAAUqD,aAAU,EAAVA,EAAYY,iBAAkBJ,GAAU,GAAGK,QAAQ,IAAG,GAArF3J,EAAMwF,EAAA,GAAEoE,EAASpE,EAAA,GAC6CqE,EAAAxH,EAAfoD,oBAAS,GAAM,GAA9DqE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GACQG,EAAA3H,EAAfoD,oBAAS,GAAM,GAAnDwE,EAAgBD,EAAA,GAAEE,EAAcF,EAAA,GAEvCG,qBAAU,WACR,GAAKrB,EAAL,CAIA,IAAMsB,EAAsB,WAC1BR,GAAWd,EAAWY,gBAAkBJ,GAAQK,QAAQ,IACxDU,EAASC,MAIX,OAFAnH,IAAKoH,iBAAiB,YAAaH,GAE5B,WACLjH,IAAKqH,oBAAoB,YAAaJ,IAVtCC,EAASC,OAYV,CAACxB,EAAYwB,EAAchB,EAAQL,IAEtC,IAAMwB,EAAiB,SAACC,GACtBd,EAAUc,EAAMC,OAAOzF,OACvB0F,EAAmBF,GACnBG,KAGIA,EAAmB,WACV1H,IAAK2H,QAAQ,uCACrBC,UAGDC,EAAmB,WACG7H,IAAK8H,uBACbD,iBAAiBlC,IAG/BoC,EAAqB,WACC/H,IAAK8H,uBACbC,mBAAmBpC,IAGjC8B,EAAqB,SAACF,GAC1B,GAAK5B,EAAL,CAGA,IAAI9I,EAASiI,KAAKS,IAAIgC,EAAMC,OAAOzF,OAC/BlF,EAAS8I,EAAWqC,YACtBnL,EAAS8I,EAAWqC,UACpBvB,EAAU5J,IAEZ,IAAMsJ,EAASR,EAAWS,QAAQC,KAAK,GAAGF,OAE1C8B,EADoBpL,EAASsJ,KAQzB8B,EAA2BC,uBAC/B,SAACC,GACC,GAN0BC,EAMAzC,EAAWY,gBANH8B,EAMoBF,IALjDrD,KAAKS,IAAI6C,EAASC,GAAU,IAKmC,CAClE,IAAMC,EAAiBC,IACvB5C,EAAW6C,cAAc1D,KAAK2D,IAAIH,EAAgBH,IAClDO,IATuB,IAACN,EAAQC,IAYpC,CAAC1C,EAAY+C,EAAiBH,IAG1BI,EAAoB,SAAChD,GAAe,IAAAiD,EACpCC,EAQJ,OAPIlD,SAAwB,QAAdiD,EAAVjD,EAAYW,oBAAY,IAAAsC,GAAxBA,EAA0B/L,SAE1BgM,EADqC,IAAnClD,EAAWW,aAAazJ,QAA+C,QAA/B8I,EAAWW,aAAa,IAA+C,QAA/BX,EAAWW,aAAa,GAC9F,KAEAX,EAAWW,aAAa,IAGjCb,EAAQoD,IAAcA,GAAapD,EAAQzD,IAASA,GA2BvD0G,EAAkBR,uBAAY,WAClC,IAAMY,EAAoB9I,IAAK8H,uBAC/BgB,EAAkBC,gBAAgBpD,EAAWqD,YAC7CF,EAAkBG,QAAQ,oBAAqB,CAAC,CAACtD,GAAa,SAAU,OACvE,CAACA,IAEE4C,EAAwBL,uBAAY,WACxC,IAQIgB,EACAC,EATEC,EAAoBpJ,IAAKqJ,iBACzBC,EAAgBtJ,IAAKuJ,aAAaH,GAClCI,EAAiBxJ,IAAKyJ,cAAcL,GACpCM,EAAiB/D,EAAWgE,YAAc,IAAM7E,KAAKU,IAAIgB,QAAQ,GACjEoD,EAAajE,EAAWkE,gBACxBC,EAASF,EAAW3E,EACpB8E,EAASH,EAAW1E,EAKxBgE,EADEpE,KAAKS,IAAImE,GAAkB,GACtBJ,EAEA,EAIPH,EADEO,EAAiB,EACZF,EAEA,EAGT,IAAMQ,EAAUlF,KAAKS,KAAK2D,EAAOY,GAAUhF,KAAKmF,IAAItE,EAAWgE,aACzDO,EAAUpF,KAAKS,KAAK4D,EAAOY,GAAUjF,KAAKqF,IAAIxE,EAAWgE,aAE/D,OAAO7E,KAAK2D,IAAIuB,EAASE,KACxB,CAACvE,IAcEyE,EAAgB,SAAC7C,GACrBL,EAASK,EAAMC,OAAOzF,OAbH,SAACwF,GACpB,IACM8C,EADQ9C,EAAMC,OAAOzF,OACK+C,KAAKU,GAAK,MAAQ,EAC5C2C,EAAcxC,EAAWY,gBACzB+D,EAAQ3E,EAAW4E,MACnBC,EAAO1F,KAAKmF,IAAII,GAAkBlC,EAAcmC,EAAMrF,EACtDwF,EAAO3F,KAAKqF,IAAIE,GAAkBlC,EAAcmC,EAAMpF,EAC5DS,EAAW+E,YAAYF,EAAMC,GAC7B9E,EAAWgF,aACXjC,IAKAkC,CAAarD,GACbG,KAGIP,EAAee,uBAAY,WAC/B,IAAKvC,EACH,OAAO,EAET,IAAI0E,EAAiB1E,EAAWgE,WAIhC,QADAU,GADAA,IAAmB,GACe,EAAIA,EAAiB,EAAIvF,KAAKU,GAAK6E,GAC3CvF,KAAKU,GAAM,KAAKgB,QAAQ,KACjD,CAACb,IAE8CkF,EAAA3L,EAAxBoD,mBAAS6E,KAAe,GAA3CvC,EAAKiG,EAAA,GAAE3D,EAAQ2D,EAAA,GAQtB,OANA7D,qBAAU,WACHpB,GACHqC,EAAyBtC,EAAWY,mBAErC,CAACZ,EAAYsC,EAA0BrC,IAGxC5E,IAAAC,cAAAD,IAAA8J,SAAA,KACE9J,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBACZ5D,EAAE,sCAAsC,KAExC0G,GAAegB,EAKhB3F,IAAAC,cAAAD,IAAA8J,SAAA,KACE9J,IAAAC,cAAA,SACE4B,UAAU,cACVkI,KAAK,SACLtC,IAAI,IACJ7E,SAAUqC,EACVlE,MAAOlF,EACPmO,WAAYC,IACZC,SAAU,SAAC3D,GACTD,EAAeC,GACfM,KAEFsD,OAAQ,SAAC5D,GACPE,EAAmBF,GACnBX,GAAuB,IAEzBwE,UAAW,SAAC7D,GACQ,UAAdA,EAAMhE,MACR+D,EAAeC,GACfQ,QAIL/F,GA3BHhB,IAAAC,cAAA,OAAK+B,QAAS,kBAAM4D,GAAuB,IAAO/D,UAAU,kBACzD8C,SAA+C,QAArCK,EAAVL,EAAY0F,2CAAmC,IAAArF,OAArC,EAAVA,EAAAsF,KAAA3F,KAAuD,IA8B9D3E,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,mCAAmC,KACrE0G,GAAemB,EAKhB9F,IAAAC,cAAAD,IAAA8J,SAAA,KACE9J,IAAAC,cAAA,SACE4B,UAAU,cACVkI,KAAK,SACLtC,IAAI,IACJ8C,IAAI,MACJ3H,SAAUqC,EACVlE,MAAO6C,EACPoG,WAAYC,IACZC,SAAU,SAAC3D,GACT6C,EAAc7C,GACdM,KAEFsD,OAAQ,kBAAMpE,GAAe,IAC7BqE,UAAW,SAAC7D,GACQ,UAAdA,EAAMhE,MACR6G,EAAc7C,GACdQ,QAGJ,KAxBJ/G,IAAAC,cAAA,OAAK+B,QAAS,kBAAM+D,GAAe,IAAOlE,UAAU,iBACjD+B,EAAM,MA1II,WACnB,IAAMA,EAASe,GAAc6F,EAAkB7F,EAAW4E,MAAO5E,EAAW8F,MAAS,EAC/EzJ,EAAO2G,EAAkBhD,GACzB+F,EAAS/M,EAAMkD,kBAAkB8D,GAAcb,KAAKS,IAAI1I,EAASiI,KAAKmF,IAAIrF,IAAS5C,EAAM2D,aAAU,EAAVA,EAAYqC,WACrG2D,EAAShN,EAAMkD,kBAAkB8D,GAAcb,KAAKS,IAAI1I,EAASiI,KAAKqF,IAAIvF,IAAS5C,EAAM2D,aAAU,EAAVA,EAAYqC,WAE3G,OACEhH,IAAAC,cAAAD,IAAA8J,SAAA,KACE9J,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAmB,MAClC7B,IAAAC,cAAA,WACGyK,IAGL1K,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAmB,MAClC7B,IAAAC,cAAA,WACG0K,KAqJNC,IAKQlG,QCxRA,WAAC1D,GACd,OAAQA,GACN,IAAK,MACH,MAAO,KACT,IAAK,MACH,MAAO,KACT,IAAK,QACH,MAAO,KACT,QACE,OAAOA,I,+hCCEb,IAAMhE,EAAY,CAChB2H,WAAY,SAACkG,EAAOC,EAAUC,GAC5B,OAAKF,EAAMlG,YAAekG,EAAM/F,cAG5B+F,EAAMlG,YACRzH,IAAU8N,eACR,CACErG,WAAYzH,IAAU+N,MAAM,CAC1BjE,UAAW9J,IAAUgO,OACrB5F,aAAcpI,IAAUC,QAAQD,IAAUK,QAC1C4N,YAAajO,IAAUO,QAG3B,CAAEkH,WAAYkG,EAAMlG,YACpB,OACA,6BAGG,MAhBE,IAAIyG,MAAM,qEAADlL,OAAsE6K,EAAa,QAkBvGjG,aAAc,SAAC+F,EAAOC,EAAUC,GAC9B,OAAKF,EAAMlG,YAAekG,EAAM/F,cAG5B+F,EAAM/F,cACR5H,IAAU8N,eACR,CACElG,aAAc5H,IAAU+N,MAAM,CAC5BI,SAAUnO,IAAU+N,MAAM,CACxBjE,UAAW9J,IAAUgO,SAEvB9F,QAASlI,IAAU+N,MAAM,CACvBjK,KAAM9D,IAAUK,YAItB,CAAEuH,aAAc+F,EAAM/F,cACtB,OACA,6BAGG,MAnBE,IAAIsG,MAAM,qEAADlL,OAAsE6K,EAAa,QAqBvGnG,OAAQ1H,IAAU2H,KAAKxH,YAGzB,SAASiO,EAAyBxN,GAAuC,IAAAkH,EAAAuG,EAAAC,EAApC7G,EAAU7G,EAAV6G,WAAYC,EAAM9G,EAAN8G,OAAQE,EAAYhH,EAAZgH,aAC/C7G,EAAME,cAANF,EAEFgH,EAAa1G,aAAY,SAACC,GAAK,OAAKC,IAAUyG,mBAAmB1G,MACjEiN,GAAO9G,SAA+C,QAArCK,EAAVL,EAAY0F,2CAAmC,IAAArF,OAArC,EAAVA,EAAAsF,KAAA3F,KAAuD,EAC9D+G,EAAO,CACXhL,UAAYiE,EAAiDA,EAAWqC,UAA/ClC,SAAsB,QAAVyG,EAAZzG,EAAcuG,gBAAQ,IAAAE,OAAV,EAAZA,EAAwBvE,UACjDhG,KAAM2K,IAAkBhH,aAAU,EAAVA,EAAYhH,SAASmH,SAAsB,QAAV0G,EAAZ1G,EAAcuG,gBAAQ,IAAAG,OAAV,EAAZA,EAAwB7N,QAAO,GAAG,IAC/E8N,QAGIG,EAAgB,WACpBC,EAAUC,MAGZ9F,qBAAU,WAIR,OAHA4F,IACA5M,IAAKoH,iBAAiB,YAAawF,GAE5B,WACL5M,IAAKqH,oBAAoB,YAAauF,MAEvC,CAACjH,IAEJqB,qBAAU,WACR,IAAM+F,EAAyB,SAACC,EAAaC,GAC3C,GAAe,eAAXA,EAAyB,CAC3B,IAAMtH,EAAaqH,EAAY,GAC/BE,EAA6BvH,EAAWwH,WAAYxH,KAMxD,OAFA3F,IAAKoH,iBAAiB,qBAAsB2F,GAErC,WACL/M,IAAKqH,oBAAoB,qBAAsB0F,MAEhD,IAEH,IAAMD,EAAgB,WACpB,IAAKnH,EACH,OAAO,EAET,IAAMyH,EAAgBzH,GAAc0H,EAAyB1H,EAAWqC,YAAc,EAChF7B,EAASR,EAAWS,QAAQC,KAAK,GAAGF,OAE1C,QADqBR,EAAW2H,MAAQ,GAAG9G,QAAQ4G,GAC7BjH,GAAQK,QAAQ4G,IAkBlCG,EAAuB,SAAChG,GAC5B,IAAMiG,EAAajG,EAAMC,OAAOzF,OAAS,EACnC0L,EAASD,EAAa,EAAIA,EAAa,KAGvCE,EAA8B,GADhBD,EADL9H,EAAWS,QAAQC,KAAK,GAAGF,QAGpCwH,EAAOhI,EAAWiI,UAMlBC,EAAU,CAAEC,GAJbH,EAAS,GAIYI,GAHrBJ,EAAS,GAGoBK,GAF7BL,EAAS,GAAID,EAEwBO,GADrCN,EAAS,GAAID,GAGlB/H,EAAWuI,UAAUR,GACrB/H,EAAWwI,SAAST,GACpB/H,EAAWyI,OAAOP,GAClBhB,EAAUY,GACVY,EAAmB1I,GAhCN3F,IAAK2H,QAAQ,sCACrBC,UAmCDyG,EAAqB,SAAC1I,GAC1B,IAAMmD,EAAoB9I,IAAK8H,uBAC/BgB,EAAkBwF,iBAAiB3I,GACnCmD,EAAkBG,QAAQ,oBAAqB,CAAC,CAACtD,GAAa,SAAU,MAGpE4I,EAAsBrG,uBAAY,SAACvC,GACvC,IAAMyD,EAAoBpJ,IAAKqJ,iBACzBC,EAAgBtJ,IAAKuJ,aAAaH,GAClCI,EAAiBxJ,IAAKyJ,cAAcL,GAIpCF,EAAOI,EAHE3D,EAAc,EAIvBwD,EAAOK,EAHE7D,EAAc,EAK7B,OAAOb,KAAK2D,IAAIS,EAAMC,MAYlB+D,EAA+BhF,uBAAY,SAACwF,EAAe/H,GAG/D,GAAI+H,EAFqBa,EAAoB5I,GAEP,CACpC,IAAM6I,EAAe7I,EAAWiI,UACxBE,EAAmBU,EAAnBV,GAAIE,EAAeQ,EAAfR,GAAID,EAAWS,EAAXT,GAAIE,EAAOO,EAAPP,GAChBQ,EAAQ9I,EAAW2H,MACnBoB,EAAS/I,EAAWgJ,OAClBvF,EAAoBpJ,IAAKqJ,iBACzBC,EAAgBtJ,IAAKuJ,aAAaH,GAClCI,EAAiBxJ,IAAKyJ,cAAcL,GAEtC4E,EAAK1E,IACPkF,EAAiB,GAAIlF,EACrBmF,EAAQnF,EAAgBwE,GAEtBG,EAAKzE,IACPgF,EAAiB,GAAIhF,EACrBkF,EAASlF,EAAiBuE,GAGxBU,EAAQnF,EACV3D,EAAWwI,SAASM,GAEpB9I,EAAWwI,SAAS7E,GAElBoF,EAASlF,EACX7D,EAAWuI,UAAUQ,GAErB/I,EAAWuI,UAAU1E,GAEvB7D,EAAWyI,OAAOI,GAClBH,EAAmB1I,MAEpB,CAAC4I,IAEJvH,qBAAU,WACHpB,GACHsH,EAA6BvH,EAAWwH,WAAYxH,KAErD,CAACA,EAAYuH,EAA8BtH,IAE9C,IAAqDvD,EAAAnD,EAAzBoD,mBAASwK,KAAgB,GAA9CW,EAAMpL,EAAA,GAAEwK,EAASxK,EAAA,GAExB,OACErB,IAAAC,cAAA,OAAK4B,UAAU,iCACb7B,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,2BAA2B,KAC/D2P,IAAmBlC,EAAKhL,YAAcgL,EAAKhL,WAE9CV,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,kCAAkC,KACvE+B,IAAAC,cAAA,OAAK4B,UAAU,iBAAiB6J,EAAKD,OAEvCzL,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,oCAAoC,KACxE0G,EACC3E,IAAAC,cAAAD,IAAA8J,SAAA,KACE9J,IAAAC,cAAA,SACE+J,WAAYC,IACZpI,UAAU,cACVkI,KAAK,SACLtC,IAAI,IACJ7E,SAAUqC,EACVlE,MAAO0L,EACPvC,SAAU,SAAC3D,GACTgG,EAAqBhG,GA7HPvH,IAAK8H,uBACbD,iBAAiBlC,IA+HzBwF,OAAQ,SAAC5D,GAAK,OA9ED,SAACA,GACxB,IAAMkG,EAAS3I,KAAKS,IAAIgC,EAAMC,OAAOzF,OAC/BoE,EAASR,EAAWS,QAAQC,KAAK,GAAGF,OAG1C+G,EADoC,GADhBO,EAAStH,GAEeR,GAC5CiH,IAwE6BiC,CAAiBtH,IACpC6D,UAAW,SAAC7D,GACQ,UAAdA,EAAMhE,MACRgK,EAAqBhG,GA9HTvH,IAAK8H,uBACbC,mBAAmBpC,OAkI5B+G,EAAK1K,MAGRhB,IAAAC,cAAA,WAAK,OAOfqL,EAA0BtO,UAAYA,EAEvBsO,Q,qwBCvPf,IAAMtO,EAAY,CAChB2H,WAAYzH,IAAUE,OACtBwH,OAAQ1H,IAAU2H,KAAKxH,WACvByH,aAAc5H,IAAUE,QAGpB0Q,EAAoB,SAAHhQ,GAA6C,IAgBxDyE,EAAKwL,EAAMC,EACbC,EAjBmBtJ,EAAU7G,EAAV6G,WAAYC,EAAM9G,EAAN8G,OAAQE,EAAYhH,EAAZgH,aACvC7G,EAAME,cAANF,EAEFyN,EAAOwC,mBAAQ,WAAM,IAAA3C,EAAAC,EAAAxG,EAAAmJ,EACnB5L,EAAMoC,EAAayJ,YAAmBzJ,GAAc0J,YAAiBvJ,EAAawJ,MAExF,MAAO,CACL/L,MACAwL,KAAMQ,YAAehM,GAAKwL,KAC1BC,MAAOrJ,EAAaA,EAAW6J,MAAMC,cAAgB3J,SAAsB,QAAVyG,EAAZzG,EAAcuG,gBAAQ,IAAAE,GAAa,QAAbC,EAAtBD,EAAwBmD,mBAAW,IAAAlD,OAAvB,EAAZA,EAAqCiD,cAC1FE,SAAUhK,EAA2D,QAAjDK,EAAGL,EAAW0F,2CAAmC,IAAArF,OAAA,EAA9CA,EAAAsF,KAAA3F,GAAqD,EAC5EjE,UAAYiE,EAAiDA,EAAWqC,UAA/ClC,SAAsB,QAAVqJ,EAAZrJ,EAAcuG,gBAAQ,IAAA8C,OAAV,EAAZA,EAAwBnH,cA8HrD,OACEhH,IAAAC,cAAA,OAAK4B,UAAU,sBA1HPU,EAAqBmJ,EAArBnJ,IAAKwL,EAAgBrC,EAAhBqC,KAAMC,EAAUtC,EAAVsC,MACbC,EAAiBjL,EAA8BT,GAGnDvC,IAAAC,cAAA,OAAK4B,UAAU,UACb7B,IAAAC,cAACkC,IAAI,CAACC,MAAO2L,EAAMC,MAAOA,EAAOnM,UAAU,SAC3C7B,IAAAC,cAAA,WAAMhC,EAAEgQ,MAsFQ,WACpB,IATMxB,EATA5Q,EAkBE0G,EAAmBmJ,EAAnBnJ,IAAK7B,EAAcgL,EAAdhL,UACb,MAAY,uBAAR6B,EACKvC,IAAAC,cAACqL,EAAyB,CAAC3G,WAAYA,EAAYG,aAAcA,EAAcF,OAAQA,IAI9F5E,IAAAC,cAAA,OAAK4B,UAAU,iCACb7B,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,2BAA2B,KAC/D2P,IAAmBlN,IAAcA,GAE3B,wBAAR6B,GACCvC,IAAAC,cAACyE,EAAoB,CAACC,WAAYA,EAAYC,OAAQA,EAAQE,aAAcA,IAE7E,CACC,6BACA,mCACA,uBACA,mBACAjC,SAASN,IArGG,WAClB,IAAQA,EAAkBmJ,EAAlBnJ,IAAKoM,EAAajD,EAAbiD,SAEPC,EAAoB,CACxB3L,oBAAqBhF,EAAE,sCACvBiF,qBAAsBjF,EAAE,uCACxBkF,gBAAiBlF,EAAE,kCACnBmF,2BAA4BnF,EAAE,kCAC9BoF,iCAAkCpF,EAAE,mCAGtC,OACE+B,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB+M,EAAkBrM,GAAK,KACzDoM,GAuFkBE,GACV,mBAARtM,IAtCC1G,GAAS8I,aAAU,EAAVA,EAAYmK,SAAU,EAEnC9O,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,qCAA0C,IAAEpC,IAoCxE,mBAAR0G,IA9BCkK,GAAS9H,aAAU,EAAVA,EAAYoK,SAAU,EAEnC/O,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,qCAA0C,IAAEwO,KA4B/E,CAAC,6BAA8B,sBAAuB,oCAAoC5J,SAASN,IArFvF,WAClB,IAAKoC,EACH,OACE3E,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,mCAAmC,KAAO,OAIrF,IAAQsE,EAAQmJ,EAARnJ,IACFyM,EAAwB,SAACrK,GAC7B,IAAMsK,EAAOtK,EAAWuK,UAClBrT,EAASoT,EAAKpT,OACpB,MAAO,CAACoT,EAAKpT,EAAS,GAAIoT,EAAKpT,EAAS,GAAIoT,EAAKpT,EAAS,KAUtDsT,EARW,CACflM,oBAAqB,SAAAmM,GAAa,MAAO,CAAZA,EAAL7F,MAAU6F,EAAH3E,MAC/BvH,qBAAsB8L,EACtB7L,gBAAiB6L,EACjB5L,2BAA4B4L,EAC5B3L,iCAAkC2L,EAClCzL,eAAgByL,GAEGzM,GAAKoC,GAAY0K,QAAO,SAACC,GAAE,QAAOA,KAEnD1L,EAAQ4G,EAAiB+E,WAAC,EAAD3P,EAAIuP,IACjC,GAAIvL,EAAO,CACT,IAAMwI,EAAgBC,EAAyB1H,EAAWqC,WAC1DpD,GAAUA,EAAQE,KAAKU,GAAM,KAAKgB,QAAQ4G,GAO5C,MAJY,mBAAR7J,IACFqB,EAAQe,EAAW6K,MAAMhK,QAAQ,SAIvBiK,IAAV7L,GACE5D,IAAAC,cAAA,OAAK4B,UAAU,4BACb7B,IAAAC,cAAA,OAAK4B,UAAU,oBAAoB5D,EAAE,mCAAmC,KACvE2F,EAAM,KAgDP8L,IAQHC,KAKP7B,EAAkB9Q,UAAYA,EAEf8Q,Q,kiCChKf,IAAMnQ,GAAQrC,OAAOsC,KAAKD,MAEpBiS,GAA8B,CAClCC,UAAW3S,IAAUK,OACrBuS,wBAAyB5S,IAAUO,KACnCsS,mBAAoB7S,IAAUO,MAG1BuS,GAAqB,SAAHlS,GAAmE,IAAAmS,EAA7DJ,EAAS/R,EAAT+R,UAAWC,EAAuBhS,EAAvBgS,wBAAyBC,EAAkBjS,EAAlBiS,mBACzD9R,EAAqBC,EAAhBC,cAAgB,GAApB,GAEF+R,EAAyB3R,aAAY,SAACC,GAAK,OAAKC,IAAU0R,cAAc3R,EAAO,sBAE/E4R,EAAsBF,GAA0BL,EAEtD,OACE7P,IAAAC,cAAA,OAAK4B,UAAU,2BACb7B,IAAAC,cAAA,OAAK4B,UAAU,wBACb7B,IAAAC,cAACkC,IAAI,CAACC,MAAM,eAAeP,UAAU,uBACrC7B,IAAAC,cAAA,OAAK4B,UAAU,uBAAuB5D,EAAE,6CAE1C+B,IAAAC,cAAA,OAAK4B,UAAU,yBAGT5D,EAFFmS,EAEI,qDADA,oDAGRpQ,IAAAC,cAAA,OAAK4B,UAAU,YACf7B,IAAAC,cAAA,OAAK4B,UAAU,wBACb7B,IAAAC,cAAA,UACE4B,UAAU,qBACVW,YAAasN,GAEZ7R,EAAE,kBAEL+B,IAAAC,cAAA,UACE4B,UAAU,oBACVe,WAAYsN,GAA0BL,IAA6C,QAA/BI,EAAA,IAAItS,GAAMkS,GAAW3O,kBAAU,IAAA+O,OAAA,EAA/BA,EAAiClP,OAAQ,GAC7FgC,eAAa,mBACbP,YAAauN,EACbM,aAAcN,GAEb9R,EAAE,oBAOb+R,GAAmBhT,UAAY4S,GAEhBI,U,y4CC9Cf,IAAMrS,GAAQrC,OAAOsC,KAAKD,MAEpBX,GAAY,CAChBgP,YAAa9O,IAAUC,QAAQD,IAAUE,QAAQC,WACjDyH,aAAc5H,IAAUE,OACxBkT,oBAAqBpT,IAAUO,KAAKJ,WACpCkT,4BAA6BrT,IAAUO,KAAKJ,WAC5CG,gBAAiBN,IAAUO,KAAKJ,WAChCyS,wBAAyB5S,IAAUO,KAAKJ,WACxC0S,mBAAoB7S,IAAUO,KAAKJ,WACnCK,iBAAkBR,IAAUO,KAAKJ,YAG7BmT,GAAe,SAAH1S,GAUZ,IATJkO,EAAWlO,EAAXkO,YACAlH,EAAYhH,EAAZgH,aACAwL,EAAmBxS,EAAnBwS,oBACAC,EAA2BzS,EAA3ByS,4BACA/S,EAAeM,EAAfN,gBACAsS,EAAuBhS,EAAvBgS,wBACAC,EAAkBjS,EAAlBiS,mBACArS,EAAgBI,EAAhBJ,iBACA+S,EAAW3S,EAAX2S,YAQgBC,EAAAxS,GAHZK,aAAY,SAACC,GAAK,MAAK,CACzBC,IAAUkS,mBAAmBnS,GAC7BC,IAAUmS,kBAAkBpS,MAC3BqS,KAAa,GAAAC,EAAAJ,EAAA,GALZK,EAAaD,EAAbC,cAAelB,EAASiB,EAATjB,UAASmB,EAAAF,EAAEG,wBAAgB,IAAAD,EAAG,sCAAqCA,EAAEE,EAAgBJ,EAAhBI,iBACtFC,EAAcT,EAAA,GAKsCrP,EAAAnD,GAA1BoD,mBAAStC,IAAKC,aAAY,GAA/ChC,EAAMoE,EAAA,GAAE+P,EAAS/P,EAAA,GAClBgQ,KAAgCC,OAAOC,KAAKtU,GAAQpB,SAAaiJ,KAAkBkH,EAAYnQ,QAAUmQ,EAAYnQ,OAAS,IAEpImK,qBAAU,WACRyK,MACC,CAACxT,IAEJ+I,qBAAU,WACR,IAAMwL,EAAiB,SAACC,GACtBL,EAAUK,IAENC,EAAe,WACnBN,EAAUpS,IAAKC,cAGX0S,EAAgC,WACpCjU,KAOF,OALAsB,IAAKoH,iBAAiB,eAAgBoL,GACtCxS,IAAKoH,iBAAiB,8BAA+BuL,GACrD3S,IAAKoH,iBAAiB,oBAAqBsL,GAC3C1S,IAAKoH,iBAAiB,oBAAqBsL,GAEpC,WACL1S,IAAKqH,oBAAoB,eAAgBmL,GACzCxS,IAAKqH,oBAAoB,8BAA+BsL,GACxD3S,IAAKqH,oBAAoB,oBAAqBqL,GAC9C1S,IAAKqH,oBAAoB,oBAAqBqL,MAE/C,IAEH1L,qBAAU,WACe,2CAAnBmL,IACDJ,GAAiBT,GAAoB,GACtCC,GAA4B,KAE5BD,GAAoB,GACpBC,GAA4B,MAE7B,CAACY,EAAgBb,EAAqBC,IAEzC,IAAMjT,EAAiB4Q,mBAAQ,WAC7B,IAAMjR,EAAS,IAAImC,IAOnB,MANA,GAAAc,OAAAN,GAAIoM,GAAW,CAAElH,IAAc3I,SAAQ,SAACmD,GAAoB,IAAAsS,EACpD/S,EAAQS,SAAwB,QAATsS,EAAftS,EAAiB8F,eAAO,IAAAwM,OAAT,EAAfA,EAA0B/S,MACpCA,IAAU5B,EAAO4U,IAAIhT,IACvB5B,EAAOwC,IAAIZ,MAGfe,GAAW3C,KACV,CAAC+O,EAAalH,EAAc7H,IAEzB6U,EAAcR,OAAOC,KAAKtU,GAAQqF,KAAI,SAACzD,GAAK,OAAK,IAAIlB,GAAMkB,MAEjE,OAAOkS,EACL/Q,IAAAC,cAAC+P,GAAkB,CACjBH,UAAWA,EACXC,wBAAyB,kBAAMA,EAAwBmB,IACvDlB,mBAAoB,kBAAMA,EAAmBkB,EAAkBpB,EAAWqB,IAC1ED,iBAAkBA,IAGpBjR,IAAAC,cAAAD,IAAA8J,SAAA,KACE9J,IAAAC,cAAC6C,EAAW,CACV7F,OAAQ6U,EACRxU,eAAgBA,EAChBE,gBAAiBA,EACjBE,iBAAkBA,IAEnB2T,GACCrR,IAAAC,cAAC6N,EAAiB,CAChBnJ,WAAYqH,EAAYnQ,OAAS,EAAI,KAAOmQ,EAAY,IAAM,KAC9DlH,aAAcA,EACdF,QAAM,MAOhB4L,GAAaxT,UAAYA,GAEV+U,sBAAKvB,I,s6CC/GpB,IAAM7S,GAAQrC,OAAOsC,KAAKD,MAEpBqU,GAA0B,CAC9B,0BACA,gCACA,2BACA,sBACA,+BACA,6BACA,uBACA,qCACA,sBA2PaC,UAnPe,SAAHnU,GAAsC,IAAhCkO,EAAWlO,EAAXkO,YAAalH,EAAYhH,EAAZgH,aACtC1G,EAAWC,cACVJ,EAAqBC,GAAhBC,cAAgB,GAApB,GAWPuS,EAAAxS,GANGK,aACF,SAACC,GAAK,MAAK,CACTC,IAAUyT,kBAAkB1T,EAAO2T,KAAaC,yBAChD3T,IAAU0R,cAAc3R,EAAO2T,KAAaC,yBAC5C3T,IAAU4T,wBAAwB7T,OAErC,GATC8T,EAAU5B,EAAA,GACV9L,EAAM8L,EAAA,GACN6B,EAAe7B,EAAA,GAQuCrP,EAAAnD,GAAxBoD,mBAAS,CAAE2C,EAAG,EAAGC,EAAG,IAAI,GAAjDsO,EAAQnR,EAAA,GAAEoR,EAAWpR,EAAA,GACnBoP,EAAmDvS,GAApCwU,sBAAW,SAACzO,GAAC,OAAKA,EAAI,IAAG,GAAG,kBAAM,KAAE,GAAxC,GAQlB0O,EAAAzU,GAHEK,aAAY,SAACC,GAAK,MAAK,CACzBC,IAAUmU,0BAA0BpU,GACpCC,IAAUoU,2BAA2BrU,OACrC,GALAsU,EAAsBH,EAAA,GACtBI,EAAuBJ,EAAA,GAMnBK,EAAetR,iBAAO,MAEtBuR,EAAkBjU,IAAKkU,mBACvBC,EAA2BnU,IAAKoU,uBAqChCC,EAnCiB,WACrB,IAAMC,EAAuBf,EAAgB/O,MAAM,KAC7C+P,EAAS,CAAEC,KAAM,EAAGC,IAAK,GAC/B,GAAgC,QAA5BH,EAAqB,GACvBC,EAAOE,KAAMR,aAAe,EAAfA,EAAiBS,WApCX,IAHY,OAwC1B,CACL,IAAIC,EAAkB,IAClBX,WAAcY,UAChBD,EAAkBX,EAAaY,QAAQC,wBAAwBnG,QAEjE6F,EAAOE,IAAMV,GAA0BI,aAAwB,EAAxBA,EAA0BO,WA1C9C,GA0C6EC,GA7CjE,GAgDjC,GAAgC,UAA5BL,EAAqB,GACvBC,EAAOC,KA/Ce,KA+CRV,EACVG,SAAmBD,KAAcY,UACnCL,EAAOC,KAAO1P,KAAK2D,KACjBwL,aAAe,EAAfA,EAAiBa,aAAab,aAAe,EAAfA,EAAiBc,aAjDhC,IAiDkER,EAAOC,KACxFV,EAAyBE,EAAaY,QAAQC,wBAAwBpG,MAlDvD,SAqDd,CACL,GAAIwF,SAAmBD,KAAcY,QAAS,CAC5C,IAAMI,EAAiBhB,EAAaY,QAAQC,wBAAwBpG,MACpE8F,EAAOC,MAAOP,aAAe,EAAfA,EAAiBa,YAxDd,GAwD8CE,GAxD9C,GAyDbb,GAA4BI,EAAOC,KAAOL,EAAyBW,aACrEP,EAAOC,KAAOL,EAAyBW,WA1DxB,MA6DdP,EAAOC,MAAQS,MAAMV,EAAOC,OAASD,EAAOC,KAAO,KACtDD,EAAOC,KA9DU,IAiErB,OAAOD,EAEKW,GAEdlO,qBAAU,WACRyM,EAAY,CAAExO,EAAG,EAAGC,EAAG,MACtB,CAACqO,IAEJ,IACQe,EACAa,EAsCFC,EAAwB,SAAC3R,EAAC2M,GAAe,IAAXnL,EAACmL,EAADnL,EAAGC,EAACkL,EAADlL,EACrCuO,EAAY,CACVxO,IACAC,OAIEoM,EAAsBpJ,uBAAY,SAAC6J,GACvC3S,EAASmC,IAAQ8T,sBAAsB,CAAEtD,qBACxC,IAEGR,EAA8BrJ,uBAAY,SAACtE,GAC/CoP,GAAwB7V,SAAQ,SAAC2F,GAC/B1D,EACEmC,IAAQ+T,0BAA0BxS,EAAa,CAC7Cc,mBAIL,IAIG2R,EAAiBrN,uBAAY,SAACrI,GAClCA,GAHuB,SAACA,GAAUT,EAASmC,IAAQiU,iBAAiB3V,IAG3D2V,CAAiB,IAAI7W,GAAMkB,IACpCT,EAASmC,IAAQkU,aAAa,CAACtC,KAAauC,eAC5CtW,EAASmC,IAAQoU,yBAChB,IAEGnX,EAAkB0J,uBAAY,SAAC5J,EAAgBuB,GACnD,IAAM+V,EAAW,IAAIjX,GAAMkB,GAC3B,GAA8B,IAA1BvB,EAAezB,QAAgByB,EAAeuF,SAAShE,GACzD0V,EAAe1V,OACV,CACL,IAAMgW,EAAU,GAAH3U,OAAAN,GAAOoM,GAAW,CAAElH,IAC3BgQ,EAAgB9V,IAAK+V,oBAAoBC,wBAAwBC,kCAAkC,CAAEpW,MAAO+V,EAAUC,YAAW,GACjIK,EAAsB,WAC1BlW,IAAKkW,oBACHN,EAAQ,GAAA1U,OAAAN,GACJoM,GAAW,CAAElH,MAGjBgQ,EACFK,EAAqBL,EAAeI,GAEpCA,OAGH,CAAClJ,EAAalH,IAEXqQ,EAAuB,SAACL,EAAeI,GAC3C,IAmBMpV,EAAU,CACdC,QAnBAC,IAAAC,cAAA,WACED,IAAAC,cAAA,SACED,IAAAC,cAAA,YACGhC,EAAE,qDACH+B,IAAAC,cAAA,SAAI6U,GACH7W,EAAE,2DAGP+B,IAAAC,cAAA,SACED,IAAAC,cAAA,YACGhC,EAAE,uDAUTmC,MALY,GAAHF,OAAMjC,EAAE,mDAAkD,KAAAiC,OAAI4U,GAMvEzU,eALqBpC,EAAE,kBAMvBqC,UAAW,kBAAM4U,MAEnB9W,EAASmC,IAAQC,mBAAmBV,KAGhCgQ,EAA0B5I,uBAAY,SAAC+J,GAC3CjS,IAAKoW,YAAYnE,GACjBX,GAAoB,GACpBlS,EAASmC,IAAQ8U,mBAAmBlD,KAAauC,aAAa,MAC7D,IAEG3E,EAAqB7I,uBAAY,SAAC+J,EAAkBpB,EAAWqB,GACnE9S,EAASmC,IAAQ8T,sBAAsB,CAAEtD,eAAe,EAAOlB,YAAWqB,sBAC1E9S,EAASmC,IAAQ8U,mBAAmBlD,KAAauC,aAAa,IAC9D1V,IAAKoW,YAAYnE,GACjBjS,IAAKsW,kBAAkB,CAACtJ,EAAY,OACnC,CAACA,IAEEtO,EAAmBwJ,uBAAY,WACnCqN,IACAnW,EAASmC,IAAQoU,qBAAoB,MACpC,IAEH,OAAQrC,GACNtS,IAAAC,cAACsV,KAAS,CACR/C,SAAUA,EACV2B,QA3IIb,EAAuBf,EAAgB/O,MAAM,KAC7C2Q,EAAS,CAAEV,IAAK,EAAG+B,OAAQ,EAAGhC,KAAM,EAAGiC,MAAO,GACpB,QAA5BnC,EAAqB,IACvBa,EAAOV,IAAM,EACbU,EAAOqB,OAASzC,EAA2B2C,GACvC1C,EAAaY,QACfO,EAAOqB,QAAUxC,EAAaY,QAAQC,wBAAwBnG,OAE9DyG,EAAOqB,QArFsB,KAwF/BrB,EAAOV,IAAkCiC,GAA3B3C,EACVC,EAAaY,QACfO,EAAOV,KAAOT,EAAaY,QAAQC,wBAAwBnG,OAE3DyG,EAAOV,KA5FsB,GA8F/BU,EAAOqB,OAAS,GAGc,UAA5BlC,EAAqB,IACvBa,EAAOX,MAAQV,EACfqB,EAAOsB,MAAQ3C,EAAyB,EACpCO,IACFc,EAAOsB,MAAQ3C,EAAyBO,EAAY,QAGtDc,EAAOX,KAAOL,aAAwB,EAAxBA,EAA0BW,WACpCT,IACFc,EAAOX,MAAOL,aAAwB,EAAxBA,EAA0BW,YAAaT,EAAY,KAvGhD,IAyGnBc,EAAOsB,MAAQ3C,EAzGI,GAFc,GA4G7BO,IACFc,EAAOsB,OAASpC,EAAY,OAGzBc,GAwGLwB,OAAQvB,EACRwB,OAAQxB,EACRyB,OAAQ,2CAER7V,IAAAC,cAAA,OACE4B,UAAWQ,IAAW,CACpByT,SAAS,EACTtF,cAAc,EACduF,KAAMnR,EACNoR,QAASpR,IAEX7B,eAAcoP,KAAaC,wBAC3BiB,MAAOA,EACPnR,IAAK8Q,GAELhT,IAAAC,cAACuQ,GAAY,CACXxE,YAAaA,EACblH,aAAcA,EACdwL,oBAAqBA,EACrBC,4BAA6BA,EAC7B/S,gBAAiBA,EACjBsS,wBAAyBA,EACzBC,mBAAoBA,EACpBrS,iBAAkBA,EAClB+S,YAAaA","file":"chunks/69.chunk.js","sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./ScaleOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ScaleOverlay{position:absolute;z-index:95;border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background)}.open.ScaleOverlay{visibility:visible}.closed.ScaleOverlay{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ScaleOverlay{flex-direction:column;font-size:.81rem;padding:.375rem .375rem .375rem 1rem}.ScaleOverlay .divider{width:calc(100% + 1.375rem);height:1px;margin-left:-1rem;background:#cfd4da;margin-top:12px}.ScaleOverlay .scale-overlay-header{position:relative;display:flex;flex-direction:row;justify-content:left;font-weight:400;align-items:center;padding-right:.75rem}.ScaleOverlay .scale-overlay-header .scale-overlay-title{margin-left:.8rem;color:var(--text-color);font-weight:700;line-height:1rem}.ScaleOverlay .scale-overlay-header .add-new-scale{margin-left:1.3rem;min-height:2rem;background-color:transparent;color:#3183c8;font-weight:400;font-size:.8rem;line-height:1rem;border-radius:.3rem;border:1px solid #3183c8;cursor:pointer!important}.ScaleOverlay .scale-overlay-header .scale-overlay-icon{width:1rem;height:1.3rem}.ScaleOverlay .scale-overlay-header .scale-overlay-selector{margin-left:1.3rem;position:relative}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-selection{height:2rem;min-width:9rem;position:relative;background-color:transparent;border:1px solid var(--border);border-radius:.3rem;line-height:2rem;padding:0 32px 0 .5rem;color:var(--text-color);font-weight:400;font-size:.8rem;text-align:left;text-overflow:ellipsis;white-space:nowrap}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-arrow{position:absolute;top:50%;right:8px;transform:translateY(-50%);display:flex;justify-content:center;width:16px;height:16px;padding:2px;color:var(--text-color)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector ul{margin:0;list-style-type:none;position:absolute;min-width:10rem;left:0;top:0;text-align:left;letter-spacing:0;display:none;border-radius:4px;pointer-events:all;z-index:1000;background-color:var(--component-background);box-shadow:0 0 4px #868e96;padding-left:0}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li{display:block;line-height:2rem;height:2rem;position:relative;font-weight:400;font-size:.8rem;padding-left:.5rem;padding-right:32px;max-width:100%}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li :hover{cursor:pointer}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:not(:last-child):not(:first-child) .options:hover{background-color:var(--scale-overlay-item-hover)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:last-child{padding-top:.5rem;padding-bottom:.5rem;height:-moz-fit-content;height:fit-content}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:last-child :hover{cursor:default}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .option-selected{color:#3183c8}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .delete{position:absolute;top:50%;right:8px;width:16px;height:16px;transform:translateY(-50%);border:none;background-color:transparent;padding:0;border-radius:2px;display:flex;align-items:center;justify-content:center}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .delete .Icon{width:11px;height:11px;display:flex}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .delete:hover{background-color:var(--scale-overlay-item-hover)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .delete:disabled{background-color:transparent;cursor:not-allowed}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .add-new-scale{margin-left:0;width:100%}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .add-new-scale :hover{cursor:pointer}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .options{border:none;background-color:transparent;padding:0;text-align:left;display:flex;align-items:center;justify-content:space-between;height:100%;z-index:1}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-value{margin-right:1px}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-list{display:block;pointer-events:all;transform:translateY(0)}.ScaleOverlay .scale-overlay-content{width:192px;min-height:32px;font-weight:400;font-size:13px;line-height:16px;margin-top:16px}.ScaleOverlay .scale-overlay-calibrate{padding-top:20px}.ScaleOverlay .scale-overlay-footer{display:flex;flex-direction:row;justify-content:space-between;width:220px;height:49px;align-items:center}.ScaleOverlay .scale-overlay-footer .calibration-cancel{padding:0;background-color:transparent;color:var(--secondary-button-text);display:flex;align-items:center;justify-content:center;cursor:pointer;border:none;font-size:13px}:host(:not([data-tabbing=true])) .ScaleOverlay .scale-overlay-footer .calibration-cancel,html:not([data-tabbing=true]) .ScaleOverlay .scale-overlay-footer .calibration-cancel{outline:none}.ScaleOverlay .scale-overlay-footer .calibration-cancel:enabled:hover{color:var(--secondary-button-hover)}.ScaleOverlay .scale-overlay-footer .calibration-cancel:disabled{opacity:.5}.ScaleOverlay .scale-overlay-footer .calibration-apply{border:none;background-color:transparent;background:var(--primary-button);border-radius:4px;padding:0 8px;height:32px;width:72px;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}:host(:not([data-tabbing=true])) .ScaleOverlay .scale-overlay-footer .calibration-apply,html:not([data-tabbing=true]) .ScaleOverlay .scale-overlay-footer .calibration-apply{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleOverlay .scale-overlay-footer .calibration-apply{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleOverlay .scale-overlay-footer .calibration-apply{font-size:13px}}.ScaleOverlay .scale-overlay-footer .calibration-apply:enabled:hover{background:var(--primary-button-hover)}.ScaleOverlay .scale-overlay-footer .calibration-apply:disabled{opacity:.5}.ScaleOverlay .MeasurementDetail{word-wrap:break-word;flex-wrap:wrap;font-weight:400;font-size:.81rem;line-height:1rem;margin-bottom:1rem}.ScaleOverlay .MeasurementDetail .header{display:flex;justify-content:left;align-items:center;width:100%;margin-top:.75rem;margin-bottom:.75rem;font-weight:700;font-size:.81rem}.ScaleOverlay .MeasurementDetail .header .icon{width:1.5rem;height:1.5rem;margin-right:.67rem}.ScaleOverlay .MeasurementDetail .scale-input{width:45px}.ScaleOverlay .MeasurementDetail .measurement__detail-container{margin-left:2.17rem}.ScaleOverlay .MeasurementDetail .measurement__detail-container .measurement__detail-item{display:flex;height:1.5rem;align-items:center}.ScaleOverlay .MeasurementDetail .distance_input{display:flex;margin-top:.5rem}.ScaleOverlay .MeasurementDetail .distance_input .distance-show{margin-right:.5rem}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleOverlay .MeasurementDetail .distance_input .distance-show{width:79px;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleOverlay .MeasurementDetail .distance_input .distance-show{width:79px;height:32px}}.ScaleOverlay .MeasurementDetail .angle_input,.ScaleOverlay .MeasurementDetail .measurement__deltas--X,.ScaleOverlay .MeasurementDetail .measurement__deltas--Y{display:flex;margin-top:.5rem}.ScaleOverlay .MeasurementDetail .measurement_list{width:5rem;margin-right:.5rem}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","import classNames from 'classnames';\nimport Icon from 'components/Icon';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport actions from 'actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport core from 'core';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nconst propTypes = {\n  scales: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedScales: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onScaleSelected: PropTypes.func.isRequired,\n  onAddingNewScale: PropTypes.func.isRequired\n};\n\nconst Scale = window.Core.Scale;\n\nconst ScaleSelector = ({ scales = [], selectedScales = [], onScaleSelected, onAddingNewScale }) => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n\n  const isMultipleScalesMode = useSelector((state) => selectors.getIsMultipleScalesMode(state));\n\n  const isMultipleScales = selectedScales.length > 1;\n\n  const getScaleInfo = (deleteScale) => {\n    const scales = core.getScales();\n    const measurements = [];\n    const relatedPages = new Set();\n    scales[deleteScale.toString()].forEach((measurementItem) => {\n      if (measurementItem instanceof window.Core.Annotations.Annotation) {\n        relatedPages.add(measurementItem['PageNumber']);\n        measurements.push(measurementItem);\n      }\n    });\n    return {\n      measurementsNum: measurements.length,\n      pages: [...relatedPages]\n    };\n  };\n\n  const openScaleDeletionModal = (scale) => {\n    if (!scale) {\n      return;\n    }\n    const deleteScale = new Scale(scale);\n    const scaleInfo = getScaleInfo(deleteScale);\n    const hasAssociatedMeasurements = !!scaleInfo.pages.length;\n    const message = hasAssociatedMeasurements ? (\n      <div>\n        <p>\n          <span>\n            {t('option.measurement.deleteScaleModal.scaleIsOn-delete-info')}\n            <b>{` ${t('option.measurement.deleteScaleModal.page-delete-info')} ${scaleInfo.pages.join(', ')} `}</b>\n            {t('option.measurement.deleteScaleModal.appliedTo-delete-info')}\n            <b>{` ${scaleInfo.measurementsNum} ${scaleInfo.measurementsNum > 1 ? t('option.measurement.deleteScaleModal.measurements') : t('option.measurement.deleteScaleModal.measurement')}.`}</b>\n          </span>\n          <span> </span>\n          <span>\n            {t('option.measurement.deleteScaleModal.deletionIs')}\n            <b>{` ${t('option.measurement.deleteScaleModal.irreversible')} `}</b>\n            {t('option.measurement.deleteScaleModal.willDeleteMeasurement')}\n          </span>\n        </p>\n        <p>\n          {t('option.measurement.deleteScaleModal.confirmDelete')}\n        </p>\n      </div>\n    ) : (\n      <div>\n        <p>\n          <span>\n            {t('option.measurement.deleteScaleModal.deletionIs')}\n            <b>{` ${t('option.measurement.deleteScaleModal.irreversible')}. `}</b>\n            {t('option.measurement.deleteScaleModal.confirmDelete')}\n          </span>\n        </p>\n      </div>\n    );\n    const title = `${t('option.measurement.deleteScaleModal.deleteScale')} ${deleteScale.toString()}`;\n    const confirmBtnText = t('action.confirm');\n\n    const warning = {\n      message,\n      title,\n      confirmBtnText,\n      onConfirm: () => core.deleteScale(deleteScale)\n    };\n    dispatch(actions.showWarningMessage(warning));\n  };\n\n  const renderScale = (scale) => {\n    const precision = core.getScalePrecision(scale);\n    const pageScaleStr = Scale.getFormattedValue(scale.pageScale.value, scale.pageScale.unit, precision, false);\n    const worldScaleStr = Scale.getFormattedValue(scale.worldScale.value, scale.worldScale.unit, precision, false);\n    const scaleDisplay = `${pageScaleStr} = ${worldScaleStr}`;\n\n    return <div><span>{scaleDisplay}</span></div>;\n  };\n\n  let title = t('option.measurement.scaleOverlay.multipleScales');\n\n  if (selectedScales.length && !isMultipleScales) {\n    const selectedScale = new Scale(selectedScales[0]);\n    title = renderScale(selectedScale);\n  }\n\n  // TODO: This is a bandaid solution to fix a Safari bug. This dropdown should be refactored to use a react-select component\n  // instead of hiding and displaying based on focus pseudoclasses,\n  // otherwise it is hard to debug as the open/close logic is in a CSS stylesheet and not super evident\n  const [isDropDownOpen, setOpenDropDown] = useState(false);\n  const toggleDropdown = () => {\n    setOpenDropDown((prevValue) => !prevValue);\n  };\n\n  const selectorRef = useRef(null);\n\n  useOnClickOutside(selectorRef, () => {\n    setOpenDropDown(false);\n  });\n\n  return (\n    <DataElementWrapper\n      className=\"scale-overlay-selector\"\n      dataElement=\"scaleSelector\"\n      tabIndex={0}\n      onClick={toggleDropdown}\n      ref={selectorRef}\n    >\n      <button className=\"scale-overlay-selection\">\n        {title}\n        <Icon className=\"scale-overlay-arrow\" glyph=\"icon-chevron-down\" />\n      </button>\n      {isDropDownOpen && (\n        <ul className={classNames('scale-overlay-list')} >\n          <li>\n            <div>{title}</div>\n            <Icon className=\"scale-overlay-arrow\" glyph=\"icon-chevron-up\" />\n          </li>\n          {scales.map((value) => (\n            <li key={value.toString()}>\n              <button\n                className=\"delete\"\n                onMouseDown={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  openScaleDeletionModal(value.toString());\n                }}\n                disabled={scales.length <= 1}\n              >\n                <Icon glyph=\"icon-delete-line\" />\n              </button>\n              <button\n                className={classNames({\n                  options: true,\n                  'option-selected': selectedScales.includes(value.toString()),\n                })}\n                onMouseDown={() => onScaleSelected(selectedScales, value.toString())}\n              >\n                {renderScale(value)}\n              </button>\n            </li>\n          ))}\n          {isMultipleScalesMode && (\n            <li>\n              <button onMouseDown={onAddingNewScale} className=\"add-new-scale\">\n                {t('option.measurement.scaleOverlay.addNewScale')}\n              </button>\n            </li>\n          )}\n        </ul>\n      )}\n    </DataElementWrapper>\n  );\n};\n\nScaleSelector.propTypes = propTypes;\n\nexport default ScaleSelector;\n","import React from 'react';\nimport Icon from 'components/Icon';\nimport ScaleSelector from './ScaleSelector';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nconst propTypes = {\n  scales: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedScales: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onScaleSelected: PropTypes.func.isRequired,\n  onAddingNewScale: PropTypes.func.isRequired,\n};\n\nconst ScaleHeader = ({ scales, selectedScales, onScaleSelected, onAddingNewScale }) => {\n  const [t] = useTranslation();\n\n  return (\n    <div className=\"scale-overlay-header\">\n      <Icon glyph=\"ic-calibrate\" className=\"scale-overlay-icon\" />\n      <div className=\"scale-overlay-title\">{t('option.measurementOption.scale')}</div>\n      {scales.length ? (\n        <ScaleSelector\n          scales={scales}\n          selectedScales={selectedScales}\n          onScaleSelected={onScaleSelected}\n          onAddingNewScale={onAddingNewScale}\n        />\n      ) : (\n        <button className=\"add-new-scale\" onClick={onAddingNewScale} data-element=\"addNewScale\">{t('option.measurement.scaleOverlay.addNewScale')}</button>\n      )}\n    </div>\n  );\n};\n\nScaleHeader.propTypes = propTypes;\nexport default ScaleHeader;\n","export const measurementTypeTranslationMap = {\n  distanceMeasurement: 'option.measurementOverlay.distanceMeasurement',\n  perimeterMeasurement: 'option.measurementOverlay.perimeterMeasurement',\n  areaMeasurement: 'option.measurementOverlay.areaMeasurement',\n  rectangularAreaMeasurement: 'option.measurementOverlay.areaMeasurement',\n  cloudyRectangularAreaMeasurement: 'option.measurementOverlay.areaMeasurement',\n  ellipseMeasurement: 'option.measurementOverlay.areaMeasurement',\n  arcMeasurement: 'option.measurementOverlay.arcMeasurement',\n};","export default (precision) => (precision === 1 ? 0 : precision?.toString().split('.')[1].length);\n","export default (pt1, pt2, pt3) => {\n  let angle;\n\n  if (pt1 && pt2) {\n    if (pt3) {\n      // calculate the angle using Law of cosines\n      const AB = Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n      const BC = Math.sqrt(Math.pow(pt2.x - pt3.x, 2) + Math.pow(pt2.y - pt3.y, 2));\n      const AC = Math.sqrt(Math.pow(pt3.x - pt1.x, 2) + Math.pow(pt3.y - pt1.y, 2));\n      angle = Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB));\n    } else {\n      // if there are only two points returns the angle in the plane (in radians) between the positive x-axis and the ray from (0,0) to the point (x,y)\n      angle = Math.atan2(pt2.y - pt1.y, pt2.x - pt1.x);\n      // keep the angle range between 0 and Math.PI / 2\n      angle = Math.abs(angle);\n      angle = angle > Math.PI / 2 ? Math.PI - angle : angle;\n    }\n  }\n\n  return angle;\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport core from 'core';\nimport { isMobileDevice } from 'helpers/device';\nimport selectors from 'selectors';\nimport getAngleInRadians from 'helpers/getAngleInRadians';\n\nconst unitMap = {\n  'in\\\"': 'in',\n  'ft\\'': 'ft'\n};\n\nLineMeasurementInput.propTypes = {\n  annotation: PropTypes.object,\n  isOpen: PropTypes.bool.isRequired,\n  selectedTool: PropTypes.object,\n};\n\nconst Scale = window.Core.Scale;\n\nfunction LineMeasurementInput({ annotation, isOpen, selectedTool }) {\n  const [t] = useTranslation();\n  const isReadOnly = useSelector((state) => selectors.isDocumentReadOnly(state));\n  const factor = annotation?.Measure.axis[0].factor;\n  const unit = annotation?.DisplayUnits[0] || selectedTool?.Measure?.unit;\n  const [length, setLength] = useState((annotation?.getLineLength() * factor || 0).toFixed(2));\n  const [toggleDistanceInput, setDistanceInputToggle] = useState(false);\n  const [toggleAngleInput, setAngleToggle] = useState(false);\n\n  useEffect(() => {\n    if (!annotation) {\n      setAngle(computeAngle());\n      return;\n    }\n    const onAnnotationChanged = () => {\n      setLength((annotation.getLineLength() * factor).toFixed(2));\n      setAngle(computeAngle());\n    };\n    core.addEventListener('mouseMove', onAnnotationChanged);\n\n    return () => {\n      core.removeEventListener('mouseMove', onAnnotationChanged);\n    };\n  }, [annotation, computeAngle, factor, selectedTool]);\n\n  const onInputChanged = (event) => {\n    setLength(event.target.value);\n    validateLineLength(event);\n    finishAnnotation();\n  };\n\n  const finishAnnotation = () => {\n    const tool = core.getTool('AnnotationCreateDistanceMeasurement');\n    tool.finish();\n  };\n\n  const selectAnnotation = () => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.selectAnnotation(annotation);\n  };\n\n  const deselectAnnotation = () => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.deselectAnnotation(annotation);\n  };\n\n  const validateLineLength = (event) => {\n    if (!annotation) {\n      return;\n    }\n    let length = Math.abs(event.target.value);\n    if (length < annotation.Precision) {\n      length = annotation.Precision;\n      setLength(length);\n    }\n    const factor = annotation.Measure.axis[0].factor;\n    const lengthInPts = length / factor;\n    ensureLineIsWithinBounds(lengthInPts);\n  };\n\n  const isApproximatelyEqual = (value1, value2) => {\n    return Math.abs(value1 - value2) < 0.1;\n  };\n\n  const ensureLineIsWithinBounds = useCallback(\n    (lengthInPts) => {\n      if (!isApproximatelyEqual(annotation.getLineLength(), lengthInPts)) {\n        const maxLengthInPts = getMaxLineLengthInPts();\n        annotation.setLineLength(Math.min(maxLengthInPts, lengthInPts));\n        forceLineRedraw();\n      }\n    },\n    [annotation, forceLineRedraw, getMaxLineLengthInPts],\n  );\n\n  const getAnnotationUnit = (annotation) => {\n    let annotUnit;\n    if (annotation?.DisplayUnits?.length) {\n      if (annotation.DisplayUnits.length === 2 && annotation.DisplayUnits[0] === \"ft'\" && annotation.DisplayUnits[1] === 'in\"') {\n        annotUnit = 'in';\n      } else {\n        annotUnit = annotation.DisplayUnits[0];\n      }\n    }\n    return unitMap[annotUnit] || annotUnit || unitMap[unit] || unit;\n  };\n\n  const renderDeltas = () => {\n    const angle = (annotation && getAngleInRadians(annotation.Start, annotation.End)) || 0;\n    const unit = getAnnotationUnit(annotation);\n    const deltaX = Scale.getFormattedValue(annotation && Math.abs(length * Math.cos(angle)), unit, annotation?.Precision);\n    const deltaY = Scale.getFormattedValue(annotation && Math.abs(length * Math.sin(angle)), unit, annotation?.Precision);\n\n    return (\n      <>\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">X:</div>\n          <div>\n            {deltaX}\n          </div>\n        </div>\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">Y:</div>\n          <div>\n            {deltaY}\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  const forceLineRedraw = useCallback(() => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.drawAnnotations(annotation.PageNumber);\n    annotationManager.trigger('annotationChanged', [[annotation], 'modify', {}]);\n  }, [annotation]);\n\n  const getMaxLineLengthInPts = useCallback(() => {\n    const currentPageNumber = core.getCurrentPage();\n    const documentWidth = core.getPageWidth(currentPageNumber);\n    const documentHeight = core.getPageHeight(currentPageNumber);\n    const angleInDegrees = annotation.getAngle() * (180 / Math.PI).toFixed(2);\n    const startPoint = annotation.getStartPoint();\n    const startX = startPoint.x;\n    const startY = startPoint.y;\n\n    let maxX;\n    let maxY;\n    if (Math.abs(angleInDegrees) < 90) {\n      maxX = documentWidth;\n    } else {\n      maxX = 0;\n    }\n\n    if (angleInDegrees > 0) {\n      maxY = documentHeight;\n    } else {\n      maxY = 0;\n    }\n\n    const maxLenX = Math.abs((maxX - startX) / Math.cos(annotation.getAngle()));\n    const maxLenY = Math.abs((maxY - startY) / Math.sin(annotation.getAngle()));\n\n    return Math.min(maxLenX, maxLenY);\n  }, [annotation]);\n\n  const setLineAngle = (event) => {\n    const angle = event.target.value;\n    const angleInRadians = angle * (Math.PI / 180) * -1;\n    const lengthInPts = annotation.getLineLength();\n    const start = annotation.Start;\n    const endX = Math.cos(angleInRadians) * lengthInPts + start.x;\n    const endY = Math.sin(angleInRadians) * lengthInPts + start.y;\n    annotation.setEndPoint(endX, endY);\n    annotation.adjustRect();\n    forceLineRedraw();\n  };\n\n  const onAngleChange = (event) => {\n    setAngle(event.target.value);\n    setLineAngle(event);\n    finishAnnotation();\n  };\n\n  const computeAngle = useCallback(() => {\n    if (!annotation) {\n      return 0;\n    }\n    let angleInRadians = annotation.getAngle();\n    // Multiply by -1 to achieve 0-360 degrees counterclockwise\n    angleInRadians *= -1;\n    angleInRadians = angleInRadians < 0 ? angleInRadians + 2 * Math.PI : angleInRadians;\n    return ((angleInRadians / Math.PI) * 180).toFixed(2);\n  }, [annotation]);\n\n  const [angle, setAngle] = useState(computeAngle());\n\n  useEffect(() => {\n    if (!isOpen) {\n      ensureLineIsWithinBounds(annotation.getLineLength());\n    }\n  }, [annotation, ensureLineIsWithinBounds, isOpen]);\n\n  return (\n    <>\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">\n          {t('option.measurementOverlay.distance')}:\n        </div>\n        {(!annotation || !toggleDistanceInput) ? (\n          <div onClick={() => setDistanceInputToggle(true)} className=\"distance-show\">\n            {annotation?.getMeasurementTextWithScaleAndUnits?.() || 0}\n          </div>\n        ) : (\n          <>\n            <input\n              className=\"scale-input\"\n              type=\"number\"\n              min=\"0\"\n              disabled={isReadOnly}\n              value={length}\n              autoFocus={!isMobileDevice}\n              onChange={(event) => {\n                onInputChanged(event);\n                selectAnnotation();\n              }}\n              onBlur={(event) => {\n                validateLineLength(event);\n                setDistanceInputToggle(false);\n              }}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  onInputChanged(event);\n                  deselectAnnotation();\n                }\n              }}\n            />\n            {unit}\n          </>\n        )}\n      </div>\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div>\n        {(!annotation || !toggleAngleInput) ? (\n          <div onClick={() => setAngleToggle(true)} className=\"distance-show\">\n            {angle}&deg;\n          </div>\n        ) : (\n          <>\n            <input\n              className=\"scale-input\"\n              type=\"number\"\n              min=\"0\"\n              max=\"360\"\n              disabled={isReadOnly}\n              value={angle}\n              autoFocus={!isMobileDevice}\n              onChange={(event) => {\n                onAngleChange(event);\n                selectAnnotation();\n              }}\n              onBlur={() => setAngleToggle(false)}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  onAngleChange(event);\n                  deselectAnnotation();\n                }\n              }}\n            />\n            &deg;\n          </>\n        )}\n      </div>\n      {renderDeltas()}\n    </>\n  );\n}\n\nexport default LineMeasurementInput;\n","export default (unit) => {\n  switch (unit) {\n    case 'ft\\'':\n      return 'ft';\n    case 'in\"':\n      return 'in';\n    case 'ft-in':\n      return 'ft';\n    default:\n      return unit;\n  }\n};\n","import core from 'core';\nimport getNumberOfDecimalPlaces from 'helpers/getNumberOfDecimalPlaces';\nimport { isMobileDevice } from 'src/helpers/device';\nimport { precisionFractions } from 'constants/measurementScale';\nimport PropTypes from 'prop-types';\nimport selectors from 'selectors';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport getFormattedUnit from 'src/helpers/getFormattedUnit';\n\nconst propTypes = {\n  annotation: (props, propName, componentName) => {\n    if (!props.annotation && !props.selectedTool) {\n      return new Error(`One of props 'annotation' or 'selectedTool' was not specified in '${componentName}'.`);\n    }\n    if (props.annotation) {\n      PropTypes.checkPropTypes(\n        {\n          annotation: PropTypes.shape({\n            Precision: PropTypes.number,\n            DisplayUnits: PropTypes.arrayOf(PropTypes.string),\n            getContents: PropTypes.func,\n          }),\n        },\n        { annotation: props.annotation },\n        'prop',\n        'EllipseMeasurementOverlay',\n      );\n    }\n    return null;\n  },\n  selectedTool: (props, propName, componentName) => {\n    if (!props.annotation && !props.selectedTool) {\n      return new Error(`One of props 'annotation' or 'selectedTool' was not specified in '${componentName}'.`);\n    }\n    if (props.selectedTool) {\n      PropTypes.checkPropTypes(\n        {\n          selectedTool: PropTypes.shape({\n            defaults: PropTypes.shape({\n              Precision: PropTypes.number,\n            }),\n            Measure: PropTypes.shape({\n              unit: PropTypes.string,\n            }),\n          }),\n        },\n        { selectedTool: props.selectedTool },\n        'prop',\n        'EllipseMeasurementOverlay',\n      );\n    }\n    return null;\n  },\n  isOpen: PropTypes.bool.isRequired,\n};\n\nfunction EllipseMeasurementOverlay({ annotation, isOpen, selectedTool }) {\n  const { t } = useTranslation();\n\n  const isReadOnly = useSelector((state) => selectors.isDocumentReadOnly(state));\n  const area = annotation?.getMeasurementTextWithScaleAndUnits?.() || 0;\n  const data = {\n    precision: !annotation ? selectedTool?.defaults?.Precision : annotation.Precision,\n    unit: getFormattedUnit((annotation?.Scale || selectedTool?.defaults?.Scale)[1][1]),\n    area,\n  };\n\n  const refreshRadius = () => {\n    setRadius(computeRadius());\n  };\n\n  useEffect(() => {\n    refreshRadius();\n    core.addEventListener('mouseMove', refreshRadius);\n\n    return () => {\n      core.removeEventListener('mouseMove', refreshRadius);\n    };\n  }, [annotation]);\n\n  useEffect(() => {\n    const onAnnotationDeselected = (annotations, action) => {\n      if (action === 'deselected') {\n        const annotation = annotations[0];\n        ensureDiameterIsWithinBounds(annotation.getWidth(), annotation);\n      }\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationDeselected);\n\n    return () => {\n      core.removeEventListener('annotationSelected', onAnnotationDeselected);\n    };\n  }, []);\n\n  const computeRadius = () => {\n    if (!annotation) {\n      return 0;\n    }\n    const decimalPlaces = annotation && getNumberOfDecimalPlaces(annotation.Precision) || 0;\n    const factor = annotation.Measure.axis[0].factor;\n    const radiusInPts = (annotation.Width / 2).toFixed(decimalPlaces);\n    return (radiusInPts * factor).toFixed(decimalPlaces);\n  };\n\n  const finishAnnotation = () => {\n    const tool = core.getTool('AnnotationCreateEllipseMeasurement');\n    tool.finish();\n  };\n\n  const selectAnnotation = () => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.selectAnnotation(annotation);\n  };\n\n  const deselectAnnot = () => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.deselectAnnotation(annotation);\n  };\n\n  const onChangeRadiusLength = (event) => {\n    const eventValue = event.target.value || 0;\n    const radius = eventValue > 0 ? eventValue : 0.0001;\n    const factor = annotation.Measure.axis[0].factor;\n    const radiusInPts = radius / factor;\n    const diameterInPts = radiusInPts * 2;\n    const rect = annotation.getRect();\n    let { X1, X2, Y1, Y2 } = 0;\n    X1 = rect['x1'];\n    Y1 = rect['y1'];\n    X2 = rect['x1'] + diameterInPts;\n    Y2 = rect['y1'] + diameterInPts;\n    const newRect = { x1: X1, y1: Y1, x2: X2, y2: Y2 };\n\n    annotation.setHeight(diameterInPts);\n    annotation.setWidth(diameterInPts);\n    annotation.resize(newRect);\n    setRadius(radius);\n    forceEllipseRedraw(annotation);\n    finishAnnotation();\n  };\n\n  const forceEllipseRedraw = (annotation) => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.redrawAnnotation(annotation);\n    annotationManager.trigger('annotationChanged', [[annotation], 'modify', []]);\n  };\n\n  const getMaxDiameterInPts = useCallback((annotation) => {\n    const currentPageNumber = core.getCurrentPage();\n    const documentWidth = core.getPageWidth(currentPageNumber);\n    const documentHeight = core.getPageHeight(currentPageNumber);\n    const startX = annotation['X'];\n    const startY = annotation['Y'];\n\n    const maxX = documentWidth - startX;\n    const maxY = documentHeight - startY;\n\n    return Math.min(maxX, maxY);\n  });\n\n  const validateDiameter = (event) => {\n    const radius = Math.abs(event.target.value);\n    const factor = annotation.Measure.axis[0].factor;\n    const radiusInPts = radius / factor;\n    const diameterInPts = radiusInPts * 2;\n    ensureDiameterIsWithinBounds(diameterInPts, annotation);\n    refreshRadius();\n  };\n\n  const ensureDiameterIsWithinBounds = useCallback((diameterInPts, annotation) => {\n    const maxDiameterInPts = getMaxDiameterInPts(annotation);\n\n    if (diameterInPts > maxDiameterInPts) {\n      const boundingRect = annotation.getRect();\n      const { x1, x2, y1, y2 } = boundingRect;\n      let width = annotation.Width;\n      let height = annotation.Height;\n      const currentPageNumber = core.getCurrentPage();\n      const documentWidth = core.getPageWidth(currentPageNumber);\n      const documentHeight = core.getPageHeight(currentPageNumber);\n\n      if (x2 > documentWidth) {\n        boundingRect['x2'] = documentWidth;\n        width = documentWidth - x1;\n      }\n      if (y2 > documentHeight) {\n        boundingRect['y2'] = documentHeight;\n        height = documentHeight - y1;\n      }\n\n      if (width < documentWidth) {\n        annotation.setWidth(width);\n      } else {\n        annotation.setWidth(documentWidth);\n      }\n      if (height < documentHeight) {\n        annotation.setHeight(height);\n      } else {\n        annotation.setHeight(documentHeight);\n      }\n      annotation.resize(boundingRect);\n      forceEllipseRedraw(annotation);\n    }\n  }, [getMaxDiameterInPts]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      ensureDiameterIsWithinBounds(annotation.getWidth(), annotation);\n    }\n  }, [annotation, ensureDiameterIsWithinBounds, isOpen]);\n\n  const [radius, setRadius] = useState(computeRadius());\n\n  return (\n    <div className=\"measurement__detail-container\">\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.shared.precision')}:</div>\n        {precisionFractions[data.precision] || data.precision}\n      </div>\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.area')}:</div>\n        <div className=\"distance-show\">{data.area}</div>\n      </div>\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.radius')}:</div>\n        {annotation ? (\n          <>\n            <input\n              autoFocus={!isMobileDevice}\n              className=\"scale-input\"\n              type=\"number\"\n              min=\"0\"\n              disabled={isReadOnly}\n              value={radius}\n              onChange={(event) => {\n                onChangeRadiusLength(event);\n                selectAnnotation();\n              }}\n              onBlur={(event) => validateDiameter(event)}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  onChangeRadiusLength(event);\n                  deselectAnnot();\n                }\n              }}\n            />\n            {data.unit}\n          </>\n        ) : (\n          <div>0</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nEllipseMeasurementOverlay.propTypes = propTypes;\n\nexport default EllipseMeasurementOverlay;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { mapAnnotationToKey, mapToolNameToKey, getDataWithKey } from 'constants/map';\nimport { measurementTypeTranslationMap } from 'constants/measurementTypes';\nimport { precisionFractions } from 'constants/measurementScale';\nimport getNumberOfDecimalPlaces from 'helpers/getNumberOfDecimalPlaces';\nimport Icon from 'components/Icon';\nimport LineMeasurementInput from 'components/MeasurementOverlay/LineMeasurementInput';\nimport EllipseMeasurementOverlay from 'components/MeasurementOverlay/EllipseMeasurementOverlay';\nimport getAngleInRadians from 'helpers/getAngleInRadians';\n\nimport './ScaleOverlay.scss';\n\nconst propTypes = {\n  annotation: PropTypes.object,\n  isOpen: PropTypes.bool.isRequired,\n  selectedTool: PropTypes.object,\n};\n\nconst MeasurementDetail = ({ annotation, isOpen, selectedTool }) => {\n  const { t } = useTranslation();\n\n  const data = useMemo(() => {\n    const key = annotation ? mapAnnotationToKey(annotation) : mapToolNameToKey(selectedTool.name);\n\n    return {\n      key,\n      icon: getDataWithKey(key).icon,\n      color: annotation ? annotation.Color.toHexString() : selectedTool?.defaults?.StrokeColor?.toHexString(),\n      contents: annotation ? annotation.getMeasurementTextWithScaleAndUnits?.() : 0,\n      precision: !annotation ? selectedTool?.defaults?.Precision : annotation.Precision,\n    };\n  });\n\n  const renderTitle = () => {\n    const { key, icon, color } = data;\n    const translationKey = measurementTypeTranslationMap[key];\n\n    return (\n      <div className=\"header\">\n        <Icon glyph={icon} color={color} className=\"icon\" />\n        <div>{t(translationKey)}</div>\n      </div>\n    );\n  };\n\n  const renderValue = () => {\n    const { key, contents } = data;\n\n    const keyDisplayNameMap = {\n      distanceMeasurement: t('option.measurementOverlay.distance'),\n      perimeterMeasurement: t('option.measurementOverlay.perimeter'),\n      areaMeasurement: t('option.measurementOverlay.area'),\n      rectangularAreaMeasurement: t('option.measurementOverlay.area'),\n      cloudyRectangularAreaMeasurement: t('option.measurementOverlay.area'),\n    };\n\n    return (\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{keyDisplayNameMap[key]}:</div>\n        {contents}\n      </div>\n    );\n  };\n\n  const renderAngle = () => {\n    if (!annotation) {\n      return (\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div> 0&deg;\n        </div>\n      );\n    }\n    const { key } = data;\n    const getIPathAnnotationPts = (annotation) => {\n      const path = annotation.getPath();\n      const length = path.length;\n      return [path[length - 3], path[length - 2], path[length - 1]];\n    };\n    const keyPtMap = {\n      distanceMeasurement: ({ Start, End }) => [Start, End],\n      perimeterMeasurement: getIPathAnnotationPts,\n      areaMeasurement: getIPathAnnotationPts,\n      rectangularAreaMeasurement: getIPathAnnotationPts,\n      cloudyRectangularAreaMeasurement: getIPathAnnotationPts,\n      arcMeasurement: getIPathAnnotationPts,\n    };\n    const pts = keyPtMap[key](annotation).filter((pt) => !!pt);\n\n    let angle = getAngleInRadians(...pts);\n    if (angle) {\n      const decimalPlaces = getNumberOfDecimalPlaces(annotation.Precision);\n      angle = ((angle / Math.PI) * 180).toFixed(decimalPlaces);\n    }\n\n    if (key === 'arcMeasurement') {\n      angle = annotation.Angle.toFixed(2);\n    }\n\n    return (\n      angle !== undefined && (\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div>\n          {angle}&deg;\n        </div>\n      )\n    );\n  };\n\n  const renderLength = () => {\n    const length = annotation?.Length || 0;\n    return (\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.length')}</div> {length}\n      </div>\n    );\n  };\n\n  const renderRadius = () => {\n    const radius = annotation?.Radius || 0;\n    return (\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.radius')}</div> {radius}\n      </div>\n    );\n  };\n\n  const renderDetails = () => {\n    const { key, precision } = data;\n    if (key === 'ellipseMeasurement') {\n      return <EllipseMeasurementOverlay annotation={annotation} selectedTool={selectedTool} isOpen={isOpen} />;\n    }\n\n    return (\n      <div className=\"measurement__detail-container\">\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">{t('option.shared.precision')}:</div>\n          {precisionFractions[precision] || precision}\n        </div>\n        {key === 'distanceMeasurement' && (\n          <LineMeasurementInput annotation={annotation} isOpen={isOpen} selectedTool={selectedTool} />\n        )}\n        {[\n          'rectangularAreaMeasurement',\n          'cloudyRectangularAreaMeasurement',\n          'perimeterMeasurement',\n          'areaMeasurement',\n        ].includes(key) && renderValue()}\n        {key === 'arcMeasurement' && renderLength()}\n        {key === 'arcMeasurement' && renderRadius()}\n        {!['rectangularAreaMeasurement', 'distanceMeasurement', 'cloudyRectangularAreaMeasurement'].includes(key) &&\n          renderAngle()}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"MeasurementDetail\">\n      {renderTitle()}\n      {renderDetails()}\n    </div>\n  );\n};\n\nMeasurementDetail.propTypes = propTypes;\n\nexport default MeasurementDetail;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport Icon from 'components/Icon';\nimport PropTypes from 'prop-types';\n\nconst Scale = window.Core.Scale;\n\nconst CalibrationOverlayPropTypes = {\n  tempScale: PropTypes.string,\n  onCancelCalibrationMode: PropTypes.func,\n  onApplyCalibration: PropTypes.func\n};\n\nconst CalibrationOverlay = ({ tempScale, onCancelCalibrationMode, onApplyCalibration }) => {\n  const [t] = useTranslation();\n\n  const isCalibrationPopupOpen = useSelector((state) => selectors.isElementOpen(state, 'annotationPopup'));\n\n  const canApplyCalibration = isCalibrationPopupOpen && tempScale;\n\n  return (\n    <div className=\"scale-overlay-calibrate\">\n      <div className=\"scale-overlay-header\">\n        <Icon glyph=\"ic-calibrate\" className=\"scale-overlay-icon\" />\n        <div className=\"scale-overlay-title\">{t('option.measurement.scaleModal.calibrate')}</div>\n      </div>\n      <div className=\"scale-overlay-content\">\n        {!canApplyCalibration\n          ? t('option.measurement.scaleOverlay.selectTwoPoints')\n          : t('option.measurement.scaleOverlay.inputKnowDimension')}\n      </div>\n      <div className=\"divider\" />\n      <div className=\"scale-overlay-footer\">\n        <button\n          className=\"calibration-cancel\"\n          onMouseDown={onCancelCalibrationMode}\n        >\n          {t('action.cancel')}\n        </button>\n        <button\n          className=\"calibration-apply\"\n          disabled={!(isCalibrationPopupOpen && tempScale && (new Scale(tempScale).worldScale?.value > 0))}\n          data-element=\"calibrationApply\"\n          onMouseDown={onApplyCalibration}\n          onTouchStart={onApplyCalibration}\n        >\n          {t('action.apply')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nCalibrationOverlay.propTypes = CalibrationOverlayPropTypes;\n\nexport default CalibrationOverlay;","import ScaleHeader from './ScaleHeader';\nimport core from 'core';\nimport MeasurementDetail from './MeasurementDetail';\nimport PropTypes from 'prop-types';\nimport selectors from 'selectors';\nimport React, { useEffect, useState, useMemo, memo } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport CalibrationOverlay from './CalibrationOverlay';\n\nimport './ScaleOverlay.scss';\n\nconst Scale = window.Core.Scale;\n\nconst propTypes = {\n  annotations: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedTool: PropTypes.object,\n  updateIsCalibration: PropTypes.func.isRequired,\n  enableOrDisableToolElements: PropTypes.func.isRequired,\n  onScaleSelected: PropTypes.func.isRequired,\n  onCancelCalibrationMode: PropTypes.func.isRequired,\n  onApplyCalibration: PropTypes.func.isRequired,\n  onAddingNewScale: PropTypes.func.isRequired\n};\n\nconst ScaleOverlay = ({\n  annotations,\n  selectedTool,\n  updateIsCalibration,\n  enableOrDisableToolElements,\n  onScaleSelected,\n  onCancelCalibrationMode,\n  onApplyCalibration,\n  onAddingNewScale,\n  forceUpdate,\n}) => {\n  const [\n    { isCalibration, tempScale, previousToolName = 'AnnotationCreateDistanceMeasurement', isFractionalUnit },\n    activeToolName\n  ] = useSelector((state) => [\n    selectors.getCalibrationInfo(state),\n    selectors.getActiveToolName(state)\n  ], shallowEqual);\n  const [scales, setScales] = useState(core.getScales());\n  const shouldShowMeasurementDetail = !!Object.keys(scales).length && !(!selectedTool && (!annotations.length || annotations.length > 1));\n\n  useEffect(() => {\n    forceUpdate();\n  }, [scales]);\n\n  useEffect(() => {\n    const onScaleUpdated = (newScales) => {\n      setScales(newScales);\n    };\n    const updateScales = () => {\n      setScales(core.getScales());\n    };\n\n    const onCreateAnnotationWithNoScale = () => {\n      onAddingNewScale();\n    };\n    core.addEventListener('scaleUpdated', onScaleUpdated);\n    core.addEventListener('createAnnotationWithNoScale', onCreateAnnotationWithNoScale);\n    core.addEventListener('annotationsLoaded', updateScales);\n    core.addEventListener('annotationChanged', updateScales);\n\n    return () => {\n      core.removeEventListener('scaleUpdated', onScaleUpdated);\n      core.removeEventListener('createAnnotationWithNoScale', onCreateAnnotationWithNoScale);\n      core.removeEventListener('annotationsLoaded', updateScales);\n      core.removeEventListener('annotationChanged', updateScales);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (activeToolName === 'AnnotationCreateCalibrationMeasurement') {\n      !isCalibration && updateIsCalibration(true);\n      enableOrDisableToolElements(true);\n    } else {\n      updateIsCalibration(false);\n      enableOrDisableToolElements(false);\n    }\n  }, [activeToolName, updateIsCalibration, enableOrDisableToolElements]);\n\n  const selectedScales = useMemo(() => {\n    const scales = new Set();\n    [...annotations, selectedTool].forEach((measurementItem) => {\n      const scale = measurementItem?.Measure?.scale;\n      if (scale && !scales.has(scale)) {\n        scales.add(scale);\n      }\n    });\n    return [...scales];\n  }, [annotations, selectedTool, scales]);\n\n  const totalScales = Object.keys(scales).map((scale) => new Scale(scale));\n\n  return isCalibration ? (\n    <CalibrationOverlay\n      tempScale={tempScale}\n      onCancelCalibrationMode={() => onCancelCalibrationMode(previousToolName)}\n      onApplyCalibration={() => onApplyCalibration(previousToolName, tempScale, isFractionalUnit)}\n      previousToolName={previousToolName}\n    />\n  ) : (\n    <>\n      <ScaleHeader\n        scales={totalScales}\n        selectedScales={selectedScales}\n        onScaleSelected={onScaleSelected}\n        onAddingNewScale={onAddingNewScale}\n      />\n      {shouldShowMeasurementDetail && (\n        <MeasurementDetail\n          annotation={annotations.length > 1 ? null : annotations[0] || null}\n          selectedTool={selectedTool}\n          isOpen\n        />\n      )}\n    </>\n  );\n};\n\nScaleOverlay.propTypes = propTypes;\n\nexport default memo(ScaleOverlay);\n","import actions from 'actions';\nimport ScaleOverlay from './ScaleOverlay';\nimport classNames from 'classnames';\nimport core from 'core';\nimport Draggable from 'react-draggable';\nimport selectors from 'selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useState, useRef, useCallback, useReducer, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport DataElements from 'constants/dataElement';\n\nimport './ScaleOverlay.scss';\n\nconst Scale = window.Core.Scale;\n\nconst measurementDataElements = [\n  'distanceToolGroupButton',\n  'arcMeasurementToolGroupButton',\n  'perimeterToolGroupButton',\n  'areaToolGroupButton',\n  'rectangleAreaToolGroupButton',\n  'ellipseAreaToolGroupButton',\n  'countToolGroupButton',\n  'cloudyRectangleAreaToolGroupButton',\n  'arcToolGroupButton'\n];\n\nconst DEFAULT_CONTAINER_TOP_OFFSET = 85;\nconst DEFAULT_CONTAINER_RIGHT_OFFSET = 35;\nconst DEFAULT_WIDTH_RATIO = 0.666;\nconst DEFAULT_DISTANCE = 10;\n\nconst ScaleOverlayContainer = ({ annotations, selectedTool }) => {\n  const dispatch = useDispatch();\n  const [t] = useTranslation();\n  const [\n    isDisabled,\n    isOpen,\n    initialPosition,\n  ] = useSelector(\n    (state) => [\n      selectors.isElementDisabled(state, DataElements.SCALE_OVERLAY_CONTAINER),\n      selectors.isElementOpen(state, DataElements.SCALE_OVERLAY_CONTAINER),\n      selectors.getScaleOverlayPosition(state),\n    ],\n  );\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [, forceUpdate] = useReducer((x) => x + 1, 0, () => 0);\n\n  const [\n    documentContainerWidth,\n    documentContainerHeight\n  ] = useSelector((state) => [\n    selectors.getDocumentContainerWidth(state),\n    selectors.getDocumentContainerHeight(state)\n  ]);\n\n  const containerRef = useRef(null);\n\n  const documentElement = core.getViewerElement();\n  const documentContainerElement = core.getScrollViewElement();\n\n  const calculateStyle = () => {\n    const initialPositionParts = initialPosition.split('-');\n    const offset = { left: 0, top: 0, };\n    if (initialPositionParts[0] === 'top') {\n      offset.top = documentElement?.offsetTop + DEFAULT_DISTANCE || DEFAULT_CONTAINER_TOP_OFFSET;\n    } else {\n      let containerHeight = 400;\n      if (containerRef?.current) {\n        containerHeight = containerRef.current.getBoundingClientRect().height;\n      }\n      offset.top = documentContainerHeight + documentContainerElement?.offsetTop - DEFAULT_DISTANCE - containerHeight || DEFAULT_CONTAINER_TOP_OFFSET;\n    }\n\n    if (initialPositionParts[1] === 'right') {\n      offset.left = documentContainerWidth * DEFAULT_WIDTH_RATIO;\n      if (documentElement && containerRef?.current) {\n        offset.left = Math.min(\n          documentElement?.offsetLeft + documentElement?.offsetWidth + DEFAULT_DISTANCE || offset.left,\n          documentContainerWidth - containerRef.current.getBoundingClientRect().width - DEFAULT_DISTANCE,\n        );\n      }\n    } else {\n      if (documentElement && containerRef?.current) {\n        const containerWidth = containerRef.current.getBoundingClientRect().width;\n        offset.left = documentElement?.offsetLeft - DEFAULT_DISTANCE - containerWidth || DEFAULT_DISTANCE;\n        if (documentContainerElement && offset.left < documentContainerElement.offsetLeft) {\n          offset.left = documentContainerElement.offsetLeft + DEFAULT_DISTANCE;\n        }\n      }\n      if (!offset.left || isNaN(offset.left) || offset.left < 0) {\n        offset.left = DEFAULT_DISTANCE;\n      }\n    }\n    return offset;\n  };\n  const style = calculateStyle();\n\n  useEffect(() => {\n    setPosition({ x: 0, y: 0 });\n  }, [initialPosition]);\n\n  const containerBounds = () => {\n    const initialPositionParts = initialPosition.split('-');\n    const bounds = { top: 0, bottom: 0, left: 0, right: 0 };\n    if (initialPositionParts[0] === 'top') {\n      bounds.top = 0;\n      bounds.bottom = documentContainerHeight - (DEFAULT_DISTANCE * 2);\n      if (containerRef.current) {\n        bounds.bottom -= containerRef.current.getBoundingClientRect().height;\n      } else {\n        bounds.bottom -= DEFAULT_CONTAINER_TOP_OFFSET;\n      }\n    } else {\n      bounds.top = -documentContainerHeight + (DEFAULT_DISTANCE * 2);\n      if (containerRef.current) {\n        bounds.top += containerRef.current.getBoundingClientRect().height;\n      } else {\n        bounds.top += DEFAULT_CONTAINER_TOP_OFFSET;\n      }\n      bounds.bottom = 0;\n    }\n\n    if (initialPositionParts[1] === 'right') {\n      bounds.left = -documentContainerWidth;\n      bounds.right = documentContainerWidth / 3;\n      if (style) {\n        bounds.right = documentContainerWidth - style['left'];\n      }\n    } else {\n      bounds.left = documentContainerElement?.offsetLeft;\n      if (style) {\n        bounds.left = documentContainerElement?.offsetLeft - style['left'] + DEFAULT_DISTANCE;\n      }\n      bounds.right = documentContainerWidth - DEFAULT_DISTANCE - DEFAULT_CONTAINER_RIGHT_OFFSET;\n      if (style) {\n        bounds.right -= style['left'];\n      }\n    }\n    return bounds;\n  };\n\n  const syncDraggablePosition = (e, { x, y }) => {\n    setPosition({\n      x,\n      y,\n    });\n  };\n\n  const updateIsCalibration = useCallback((isCalibration) => {\n    dispatch(actions.updateCalibrationInfo({ isCalibration }));\n  }, []);\n\n  const enableOrDisableToolElements = useCallback((disabled) => {\n    measurementDataElements.forEach((dataElement) => {\n      dispatch(\n        actions.setCustomElementOverrides(dataElement, {\n          disabled,\n        }),\n      );\n    });\n  }, []);\n\n  const setSelectedScale = (scale) => dispatch(actions.setSelectedScale(scale));\n\n  const openScaleModal = useCallback((scale) => {\n    scale && setSelectedScale(new Scale(scale));\n    dispatch(actions.openElements([DataElements.SCALE_MODAL]));\n    dispatch(actions.setIsAddingNewScale());\n  }, []);\n\n  const onScaleSelected = useCallback((selectedScales, scale) => {\n    const newScale = new Scale(scale);\n    if (selectedScales.length === 1 && selectedScales.includes(scale)) {\n      openScaleModal(scale);\n    } else {\n      const applyTo = [...annotations, selectedTool];\n      const scaleToDelete = core.getDocumentViewer().getMeasurementManager().getOldScalesToDeleteAfterApplying({ scale: newScale, applyTo })[0];\n      const createAndApplyScale = () => {\n        core.createAndApplyScale(\n          newScale,\n          [...annotations, selectedTool]\n        );\n      };\n      if (scaleToDelete) {\n        confirmScaleToDelete(scaleToDelete, createAndApplyScale);\n      } else {\n        createAndApplyScale();\n      }\n    }\n  }, [annotations, selectedTool]);\n\n  const confirmScaleToDelete = (scaleToDelete, createAndApplyScale) => {\n    const message = (\n      <div>\n        <p>\n          <span>\n            {t('option.measurement.deleteScaleModal.ifChangeScale')}\n            <b>{scaleToDelete}</b>\n            {t('option.measurement.deleteScaleModal.notUsedWillDelete')}\n          </span>\n        </p>\n        <p>\n          <span>\n            {t('option.measurement.deleteScaleModal.ifToContinue')}\n          </span>\n        </p>\n      </div>\n    );\n    const title = `${t('option.measurement.deleteScaleModal.deleteScale')} ${scaleToDelete}`;\n    const confirmBtnText = t('action.confirm');\n\n    const warning = {\n      message,\n      title,\n      confirmBtnText,\n      onConfirm: () => createAndApplyScale()\n    };\n    dispatch(actions.showWarningMessage(warning));\n  };\n\n  const onCancelCalibrationMode = useCallback((previousToolName) => {\n    core.setToolMode(previousToolName);\n    updateIsCalibration(false);\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, false));\n  }, []);\n\n  const onApplyCalibration = useCallback((previousToolName, tempScale, isFractionalUnit) => {\n    dispatch(actions.updateCalibrationInfo({ isCalibration: false, tempScale, isFractionalUnit }));\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, false));\n    core.setToolMode(previousToolName);\n    core.deleteAnnotations([annotations[0]]);\n  }, [annotations]);\n\n  const onAddingNewScale = useCallback(() => {\n    openScaleModal();\n    dispatch(actions.setIsAddingNewScale(true));\n  }, []);\n\n  return !isDisabled && (\n    <Draggable\n      position={position}\n      bounds={containerBounds()}\n      onDrag={syncDraggablePosition}\n      onStop={syncDraggablePosition}\n      cancel={'.scale-overlay-selector, .add-new-scale'}\n    >\n      <div\n        className={classNames({\n          Overlay: true,\n          ScaleOverlay: true,\n          open: isOpen,\n          closed: !isOpen,\n        })}\n        data-element={DataElements.SCALE_OVERLAY_CONTAINER}\n        style={style}\n        ref={containerRef}\n      >\n        <ScaleOverlay\n          annotations={annotations}\n          selectedTool={selectedTool}\n          updateIsCalibration={updateIsCalibration}\n          enableOrDisableToolElements={enableOrDisableToolElements}\n          onScaleSelected={onScaleSelected}\n          onCancelCalibrationMode={onCancelCalibrationMode}\n          onApplyCalibration={onApplyCalibration}\n          onAddingNewScale={onAddingNewScale}\n          forceUpdate={forceUpdate}\n        />\n      </div>\n    </Draggable>\n  );\n};\n\nexport default ScaleOverlayContainer;\n"],"sourceRoot":""}