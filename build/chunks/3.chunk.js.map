{"version":3,"sources":["webpack:///./src/helpers/pageManipulationFunctions.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","toPrimitive","String","Number","_toPrimitive","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","_e2","arr","len","arr2","getNewRotation","curr","counterClockwise","_window$Core$PageRota","window","Core","PageRotation","E_0","E_90","E_180","E_270","rotatePages","pageNumbers","doc","core","getDocument","docType","workerTypes","PDF","IMAGE","WEBVIEWER_SERVER","isWebViewerServerDocument","rotation","index","_step","docViewer","getDocumentViewer","currentRotations","getPageRotations","_iterator","page","setRotation","rotateClockwise","createAnnouncement","concat","i18next","getPageRotation","getCurrentPage","rotateCounterClockwise","insertAbove","width","height","insertBlankPages","insertBelow","map","replace","dispatch","actions","closeElement","DataElements","PAGE_MANIPULATION_OVERLAY","openElement","extractPages","message","title","confirmBtnText","secondaryBtnText","extractAnnouncement","deleteAnnouncement","warning","onConfirm","extractPagesWithAnnotations","file","saveAs","onSecondary","removePages","setSelectedPageThumbnails","showWarningMessage","deletePages","isModalEnabled","setShiftKeyThumbnailsPivotIndex","getPageCount","movePagesToBottom","movePages","getTotalPages","movePagesToTop","noPagesSelectedWarning","keepOpen","exitPageInsertionWarning","closeModal","exitPageReplacementWarning","redactPages","redactionStyles","applyRedactions","createPageRedactions","_step2","annots","document","_iterator2","pageInfo","getPageInfo","pageRotation","redaction","Annotations","RedactionAnnotation","PageNumber","Rect","redactionTypeMap","setCustomData","Author","getCurrentUser","getAnnotationManager","addAnnotations","drawAnnotationsFromList","replacePages","_ref","_callee","sourceDocument","pagesToRemove","pagesToReplaceIntoDocument","documentLoadedInViewer","pageCountOfLoadedDocument","pagesToRemoveFromOriginal","_context","sort","b","insertPages","_x","_x2","_x3","_ref2","_callee2","pagesToInsert","insertBeforeThisPage","_args2","_context2","_x4","_x5"],"mappings":"2yCACAA,EAAA,kBAAAC,GAAA,IAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,GAAA,IAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,GAAA,SAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,KAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,EAAA,SAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,IAAA,MAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,IAAAD,EAAAsB,OAAA,IAAAS,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAnB,EAAAmB,EAAAzB,GAAA,8BAAA0B,EAAAnC,OAAAoC,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAtC,GAAAG,EAAAyB,KAAAU,EAAA5B,KAAAyB,EAAAG,GAAA,IAAAE,EAAAN,EAAAhC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAa,GAAA,SAAAM,EAAA1C,GAAA,0BAAA2C,SAAA,SAAA5C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA4C,QAAA7C,EAAAC,SAAA,SAAA6C,EAAA7C,EAAAD,GAAA,SAAA+C,EAAA7C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAiB,EAAAjB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAiD,QAAAlB,EAAAmB,SAAAC,MAAA,SAAAlD,GAAA8C,EAAA,OAAA9C,EAAAS,EAAAE,MAAA,SAAAX,GAAA8C,EAAA,QAAA9C,EAAAS,EAAAE,MAAAZ,EAAAiD,QAAAlB,GAAAoB,MAAA,SAAAlD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,MAAA,SAAAf,GAAA,OAAA8C,EAAA,QAAA9C,EAAAS,EAAAE,QAAAE,EAAAe,KAAA,IAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAA+C,IAAA,WAAApD,GAAA,SAAAA,EAAAE,GAAA6C,EAAA9C,EAAAI,EAAAL,EAAAE,MAAA,OAAAA,MAAAiD,KAAAC,YAAA,SAAA1B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAAyB,EAAA,MAAAqB,MAAA,mCAAA9C,IAAA0B,EAAA,cAAAvB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAqD,MAAA,OAAAjD,EAAAkD,OAAA7C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAmD,SAAA,GAAA1C,EAAA,KAAAE,EAAAyC,EAAA3C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAkB,EAAA,gBAAAlB,GAAA,YAAAX,EAAAkD,OAAAlD,EAAAqD,KAAArD,EAAAsD,MAAAtD,EAAAwB,SAAA,aAAAxB,EAAAkD,OAAA,IAAAhD,IAAAwB,EAAA,MAAAxB,EAAA0B,EAAA5B,EAAAwB,IAAAxB,EAAAuD,kBAAAvD,EAAAwB,SAAA,WAAAxB,EAAAkD,QAAAlD,EAAAwD,OAAA,SAAAxD,EAAAwB,KAAAtB,EAAAyB,EAAA,IAAAK,EAAAV,EAAA3B,EAAAE,EAAAG,GAAA,cAAAgC,EAAAT,KAAA,IAAArB,EAAAF,EAAAiD,KAAArB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAAzB,MAAA4B,EAAAR,IAAAyB,KAAAjD,EAAAiD,MAAA,UAAAjB,EAAAT,OAAArB,EAAA0B,EAAA5B,EAAAkD,OAAA,QAAAlD,EAAAwB,IAAAQ,EAAAR,OAAA,SAAA4B,EAAAzD,EAAAE,GAAA,IAAAG,EAAAH,EAAAqD,OAAAhD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAsD,SAAA,eAAAnD,GAAAL,EAAAa,SAAA,SAAAX,EAAAqD,OAAA,SAAArD,EAAA2B,IAAA5B,EAAAwD,EAAAzD,EAAAE,GAAA,UAAAA,EAAAqD,SAAA,WAAAlD,IAAAH,EAAAqD,OAAA,QAAArD,EAAA2B,IAAA,IAAAiC,UAAA,oCAAAzD,EAAA,aAAA6B,EAAA,IAAAxB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAqD,OAAA,QAAArD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAsD,SAAA,KAAAtB,EAAA,IAAAtB,EAAAF,EAAAmB,IAAA,OAAAjB,IAAA0C,MAAApD,EAAAF,EAAA+D,YAAAnD,EAAAH,MAAAP,EAAA8D,KAAAhE,EAAAiE,QAAA,WAAA/D,EAAAqD,SAAArD,EAAAqD,OAAA,OAAArD,EAAA2B,IAAA5B,GAAAC,EAAAsD,SAAA,KAAAtB,GAAAtB,GAAAV,EAAAqD,OAAA,QAAArD,EAAA2B,IAAA,IAAAiC,UAAA,oCAAA5D,EAAAsD,SAAA,KAAAtB,GAAA,SAAAgC,EAAAjE,GAAA,IAAAD,EAAA,CAAAmE,OAAAlE,EAAA,SAAAA,IAAAD,EAAAoE,SAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,WAAApE,EAAA,GAAAD,EAAAsE,SAAArE,EAAA,SAAAsE,WAAAC,KAAAxE,GAAA,SAAAyE,EAAAxE,GAAA,IAAAD,EAAAC,EAAAyE,YAAA,GAAA1E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAAyE,WAAA1E,EAAA,SAAAyB,EAAAxB,GAAA,KAAAsE,WAAA,EAAAJ,OAAA,SAAAlE,EAAA2C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAAzC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAgE,KAAA,OAAAhE,EAAA,IAAA4E,MAAA5E,EAAA6E,QAAA,KAAAtE,GAAA,EAAAG,EAAA,SAAAsD,IAAA,OAAAzD,EAAAP,EAAA6E,QAAA,GAAAxE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAAyD,EAAAvD,MAAAT,EAAAO,GAAAyD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAvD,MAAAR,EAAA+D,EAAAV,MAAA,EAAAU,GAAA,OAAAtD,EAAAsD,KAAAtD,GAAA,UAAAoD,UAAAd,EAAAhD,GAAA,2BAAAmC,EAAA/B,UAAAgC,EAAA7B,EAAAmC,EAAA,eAAAjC,MAAA2B,EAAAhB,cAAA,IAAAb,EAAA6B,EAAA,eAAA3B,MAAA0B,EAAAf,cAAA,IAAAe,EAAA2C,YAAA5D,EAAAkB,EAAApB,EAAA,qBAAAhB,EAAA+E,oBAAA,SAAA9E,GAAA,IAAAD,EAAA,mBAAAC,KAAA+E,YAAA,QAAAhF,QAAAmC,GAAA,uBAAAnC,EAAA8E,aAAA9E,EAAAiF,QAAAjF,EAAAkF,KAAA,SAAAjF,GAAA,OAAAE,OAAAgF,eAAAhF,OAAAgF,eAAAlF,EAAAmC,IAAAnC,EAAAmF,UAAAhD,EAAAlB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAkB,GAAAzC,GAAAD,EAAAqF,MAAA,SAAApF,GAAA,OAAAiD,QAAAjD,IAAA0C,EAAAG,EAAA1C,WAAAc,EAAA4B,EAAA1C,UAAAU,GAAA,0BAAAd,EAAA8C,gBAAA9C,EAAAsF,MAAA,SAAArF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,MAAA6E,SAAA,IAAA3E,EAAA,IAAAkC,EAAAxB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA+E,oBAAA7E,GAAAU,IAAAoD,OAAAb,MAAA,SAAAlD,GAAA,OAAAA,EAAAqD,KAAArD,EAAAQ,MAAAG,EAAAoD,WAAArB,EAAAD,GAAAxB,EAAAwB,EAAA1B,EAAA,aAAAE,EAAAwB,EAAA9B,GAAA,0BAAAM,EAAAwB,EAAA,qDAAA1C,EAAAwF,KAAA,SAAAvF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAsE,KAAAnE,GAAA,OAAAH,EAAAuF,UAAA,SAAAzB,IAAA,KAAA9D,EAAA2E,QAAA,KAAA5E,EAAAC,EAAAwF,MAAA,GAAAzF,KAAAD,EAAA,OAAAgE,EAAAvD,MAAAR,EAAA+D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAV,MAAA,EAAAU,IAAAhE,EAAAyC,SAAAhB,EAAArB,UAAA,CAAA4E,YAAAvD,EAAAkD,MAAA,SAAA3E,GAAA,QAAA2F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA1D,EAAA,KAAAqD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAA5B,EAAA,KAAAsE,WAAA3B,QAAA6B,IAAAzE,EAAA,QAAAE,KAAA,WAAAA,EAAA0F,OAAA,IAAAvF,EAAAyB,KAAA,KAAA5B,KAAA0E,OAAA1E,EAAA2F,MAAA,WAAA3F,GAAAD,IAAA6F,KAAA,gBAAAxC,MAAA,MAAArD,EAAA,KAAAsE,WAAA,GAAAG,WAAA,aAAAzE,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAkE,MAAAnC,kBAAA,SAAA5D,GAAA,QAAAsD,KAAA,MAAAtD,EAAA,IAAAE,EAAA,cAAA8F,EAAA3F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA8D,KAAA3D,EAAAE,IAAAL,EAAAqD,OAAA,OAAArD,EAAA2B,IAAA5B,KAAAM,EAAA,QAAAA,EAAA,KAAAgE,WAAAM,OAAA,EAAAtE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA6D,WAAAhE,GAAAK,EAAAF,EAAAgE,WAAA,YAAAhE,EAAAyD,OAAA,OAAA6B,EAAA,UAAAtF,EAAAyD,QAAA,KAAAwB,KAAA,KAAA7E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA2E,KAAAjF,EAAA0D,SAAA,OAAA4B,EAAAtF,EAAA0D,UAAA,WAAAuB,KAAAjF,EAAA2D,WAAA,OAAA2B,EAAAtF,EAAA2D,iBAAA,GAAAvD,GAAA,QAAA6E,KAAAjF,EAAA0D,SAAA,OAAA4B,EAAAtF,EAAA0D,UAAA,YAAApD,EAAA,MAAAqC,MAAA,kDAAAsC,KAAAjF,EAAA2D,WAAA,OAAA2B,EAAAtF,EAAA2D,gBAAAR,OAAA,SAAA5D,EAAAD,GAAA,QAAAE,EAAA,KAAAqE,WAAAM,OAAA,EAAA3E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAgE,WAAArE,GAAA,GAAAK,EAAA4D,QAAA,KAAAwB,MAAAtF,EAAAyB,KAAAvB,EAAA,oBAAAoF,KAAApF,EAAA8D,WAAA,KAAA3D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAAyD,QAAAnE,MAAAU,EAAA2D,aAAA3D,EAAA,UAAAE,EAAAF,IAAAgE,WAAA,UAAA9D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA6C,OAAA,YAAAS,KAAAtD,EAAA2D,WAAAnC,GAAA,KAAA+D,SAAArF,IAAAqF,SAAA,SAAAhG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAoC,KAAA/D,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAmE,KAAA,KAAAlE,IAAA5B,EAAA4B,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA/D,EAAA2B,MAAA5B,IAAA,KAAAgE,KAAAhE,GAAAkC,GAAAgE,OAAA,SAAAjG,GAAA,QAAAD,EAAA,KAAAuE,WAAAM,OAAA,EAAA7E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAqE,WAAAvE,GAAA,GAAAE,EAAAmE,aAAApE,EAAA,YAAAgG,SAAA/F,EAAAwE,WAAAxE,EAAAoE,UAAAG,EAAAvE,GAAAgC,IAAA,eAAAjC,GAAA,QAAAD,EAAA,KAAAuE,WAAAM,OAAA,EAAA7E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAqE,WAAAvE,GAAA,GAAAE,EAAAiE,SAAAlE,EAAA,KAAAI,EAAAH,EAAAwE,WAAA,aAAArE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA4C,EAAAvE,GAAA,OAAAK,GAAA,MAAA8C,MAAA,0BAAA8C,cAAA,SAAAnG,EAAAE,EAAAG,GAAA,YAAAmD,SAAA,CAAA3C,SAAA4B,EAAAzC,GAAA+D,WAAA7D,EAAA+D,QAAA5D,GAAA,cAAAkD,SAAA,KAAA1B,IAAA5B,GAAAiC,IAAAlC,EAAA,SAAAoG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA5E,GAAA,QAAA6E,EAAAL,EAAAI,GAAA5E,GAAApB,EAAAiG,EAAAjG,MAAA,MAAAkG,GAAA,YAAAL,EAAAK,GAAAD,EAAApD,KAAAL,EAAAxC,GAAA8E,QAAAtC,QAAAxC,GAAA0C,KAAAoD,EAAAC,GAAA,SAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA9F,GAAA2F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAA/F,GAAA,SAAA+F,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,GAAAX,OAAAY,OAAA,SAAAC,EAAApH,EAAAE,GAAA,IAAAD,EAAAE,OAAAqF,KAAAxF,GAAA,GAAAG,OAAAkH,sBAAA,KAAA9G,EAAAJ,OAAAkH,sBAAArH,GAAAE,IAAAK,IAAA+G,QAAA,SAAApH,GAAA,OAAAC,OAAAoH,yBAAAvH,EAAAE,GAAAiB,eAAAlB,EAAAuE,KAAAyC,MAAAhH,EAAAM,GAAA,OAAAN,EAAA,SAAAuH,EAAAxH,GAAA,QAAAE,EAAA,EAAAA,EAAA8G,UAAAnC,OAAA3E,IAAA,KAAAD,EAAA,MAAA+G,UAAA9G,GAAA8G,UAAA9G,GAAA,GAAAA,EAAA,EAAAkH,EAAAjH,OAAAF,IAAA,GAAA2C,SAAA,SAAA1C,GAAAuH,EAAAzH,EAAAE,EAAAD,EAAAC,OAAAC,OAAAuH,0BAAAvH,OAAAwH,iBAAA3H,EAAAG,OAAAuH,0BAAAzH,IAAAmH,EAAAjH,OAAAF,IAAA2C,SAAA,SAAA1C,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAAoH,yBAAAtH,EAAAC,OAAA,OAAAF,EAAA,SAAAyH,EAAAG,EAAAnB,EAAAhG,GAAA,IAAAC,EAAA,OAAAA,EAAA,SAAAT,EAAAC,GAAA,aAAA8C,EAAA/C,OAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAAkH,aAAA,YAAA7H,EAAA,KAAAU,EAAAV,EAAA8B,KAAA7B,EAAAC,GAAA,wBAAA8C,EAAAtC,GAAA,OAAAA,EAAA,UAAAoD,UAAA,kEAAA5D,EAAA4H,OAAAC,QAAA9H,GAAA+H,CAAAvB,EAAA,WAAAA,EAAA,UAAAzD,EAAAtC,OAAA,MAAAkH,EAAAzH,OAAAK,eAAAoH,EAAAnB,EAAA,CAAAhG,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAuG,EAAAnB,GAAAhG,EAAAmH,EAAA,SAAAK,EAAA1H,EAAA2H,GAAA,IAAAC,EAAA,oBAAAxH,QAAAJ,EAAAI,OAAAE,WAAAN,EAAA,kBAAA4H,EAAA,IAAAC,MAAAC,QAAA9H,KAAA4H,EAAA,SAAA5H,EAAA+H,GAAA,IAAA/H,EAAA,2BAAAA,EAAA,OAAAgI,EAAAhI,EAAA+H,GAAA,IAAAjI,EAAAF,OAAAC,UAAAoI,SAAA1G,KAAAvB,GAAAsF,MAAA,iBAAAxF,GAAAE,EAAAyE,cAAA3E,EAAAE,EAAAyE,YAAAC,MAAA,WAAA5E,GAAA,QAAAA,EAAA,OAAA+H,MAAAK,KAAAlI,GAAA,iBAAAF,GAAA,2CAAAqI,KAAArI,GAAA,OAAAkI,EAAAhI,EAAA+H,GAAAK,CAAApI,KAAA2H,GAAA3H,GAAA,iBAAAA,EAAAsE,OAAA,CAAAsD,IAAA5H,EAAA4H,GAAA,IAAAzH,EAAA,EAAAkI,EAAA,oBAAA3G,EAAA2G,EAAAvI,EAAA,kBAAAK,GAAAH,EAAAsE,OAAA,CAAAvB,MAAA,IAAAA,MAAA,EAAA7C,MAAAF,EAAAG,OAAAV,EAAA,SAAA6I,GAAA,MAAAA,GAAA7G,EAAA4G,GAAA,UAAA9E,UAAA,6IAAAoD,EAAA4B,GAAA,EAAAC,GAAA,SAAA9G,EAAA,WAAAkG,IAAArG,KAAAvB,IAAAF,EAAA,eAAA2I,EAAAb,EAAAnE,OAAA,OAAA8E,EAAAE,EAAA1F,KAAA0F,GAAAhJ,EAAA,SAAAiJ,GAAAF,GAAA,EAAA7B,EAAA+B,GAAAjH,EAAA,eAAA8G,GAAA,MAAAX,EAAA,QAAAA,EAAA,oBAAAY,EAAA,MAAA7B,KAAA,SAAAqB,EAAAW,EAAAC,IAAA,MAAAA,KAAAD,EAAArE,UAAAsE,EAAAD,EAAArE,QAAA,QAAAnE,EAAA,EAAA0I,EAAA,IAAAhB,MAAAe,GAAAzI,EAAAyI,EAAAzI,IAAA0I,EAAA1I,GAAAwI,EAAAxI,GAAA,OAAA0I,EASA,IAAMC,EAAiB,SAACC,GAAmC,IAA7BC,EAAgBvC,UAAAnC,OAAA,QAAAsC,IAAAH,UAAA,IAAAA,UAAA,GAC5CwC,EAAoCC,OAAOC,KAAKC,aAAxCC,EAAGJ,EAAHI,IAAKC,EAAIL,EAAJK,KAAMC,EAAKN,EAALM,MAAOC,EAAKP,EAALO,MAC1B,OAAQT,GACN,KAAKS,EACH,OAAOR,EAAmBO,EAAQF,EACpC,KAAKE,EACH,OAAOP,EAAmBM,EAAOE,EACnC,KAAKF,EACH,OAAON,EAAmBK,EAAME,EAClC,QACE,OAAOP,EAAmBQ,EAAQF,IAelCG,EAAc,SAACC,EAAaV,GAChC,GAXMW,EAAMC,IAAKC,cACXC,EAAUH,aAAG,EAAHA,EAAKtI,KAGnB0I,IAAYC,MAAQF,GACpBC,IAAYE,QAAUH,GACrBA,IAAYC,IAAYG,mBAAqBP,EAAIQ,4BAKrB,CAC7B,IAAMC,EAAWpB,EAAmBE,OAAOC,KAAKC,aAAaI,MAAQN,OAAOC,KAAKC,aAAaE,KAC9FI,EAAYrH,SAAQ,SAACgI,GACnBT,IAAKH,YAAY,CAACY,GAAQD,UAEvB,CACL,IAE8BE,EAFxBC,EAAYX,IAAKY,oBACjBC,EAAmBF,EAAUG,mBAAmBC,EAAAjD,EACnCgC,GAAW,IAA9B,IAAAiB,EAAAjJ,MAAA4I,EAAAK,EAAA7K,KAAAiD,MAAgC,KAArB6H,EAAIN,EAAApK,MACbqK,EAAUM,YAAY/B,EAAe2B,EAAiBG,GAAO5B,GAAmB4B,IACjF,MAAAjE,GAAAgE,EAAAlL,EAAAkH,GAAA,QAAAgE,EAAAlJ,KAtB2B,IACxBkI,EACAG,GAwBFgB,EAAkB,SAACpB,GACvBD,EAAYC,GAAa,GACzBqB,YAAmB,GAADC,OAAIC,IAAQvL,EAAE,eAAc,KAAAsL,OAAItB,EAAW,KAAAsB,OAAIC,IAAQvL,EAAE,2BAA0B,KAAAsL,OAAIC,IAAQvL,EAAE,qBAAoB,KAAAsL,QAAKpB,IAAKC,cAAcqB,gBAAgBtB,IAAKuB,kBAAoB,IAAM,IAAG,cAG7MC,EAAyB,SAAC1B,GAC9BD,EAAYC,GAAa,GACzBqB,YAAmB,GAADC,OAAIC,IAAQvL,EAAE,eAAc,KAAAsL,OAAItB,EAAW,KAAAsB,OAAIC,IAAQvL,EAAE,kCAAiC,KAAAsL,OAAIC,IAAQvL,EAAE,qBAAoB,KAAAsL,QAAKpB,IAAKC,cAAcqB,gBAAgBtB,IAAKuB,kBAAoB,KAAO,IAAG,cAGrNE,EAAc,SAAC3B,EAAa4B,EAAOC,GACvC3B,IAAK4B,iBAAiB9B,EAAa4B,EAAOC,IAGtCE,EAAc,SAAC/B,EAAa4B,EAAOC,GACvC3B,IAAK4B,iBAAiB9B,EAAYgC,KAAI,SAACvL,GAAC,OAAKA,EAAI,KAAImL,EAAOC,IAGxDI,EAAU,SAACC,GACfA,EAASC,IAAQC,aAAaC,IAAaC,4BAC3CJ,EAASC,IAAQI,YAAY,0BAGzBC,EAAe,SAACxC,EAAakC,GACjC,IAAMO,EAAUlB,IAAQvL,EAAE,+BACpB0M,EAAQnB,IAAQvL,EAAE,6BAClB2M,EAAiBpB,IAAQvL,EAAE,kCAC3B4M,EAAmBrB,IAAQvL,EAAE,oCAC7B6M,EAAsB,GAAHvB,OAAMC,IAAQvL,EAAE,eAAc,KAAAsL,OAAItB,EAAW,KAAAsB,OAAIC,IAAQvL,EAAE,qBAC9E8M,EAAqB,GAAHxB,OAAMC,IAAQvL,EAAE,eAAc,KAAAsL,OAAItB,EAAW,KAAAsB,OAAIC,IAAQvL,EAAE,mBAE7E+M,EAAU,CACdN,UACAC,QACAC,iBACAK,UAAW,kBAAMC,YAA4BjD,GAAa9G,MAAK,SAACgK,GAC9DC,iBAAOD,EAAM,yBACb7B,YAAmBwB,EAAsBC,OAE3CF,mBACAQ,YAAa,WACXH,YAA4BjD,GAAa9G,MAAK,SAACgK,GAC7CC,iBAAOD,EAAM,yBACbhD,IAAKmD,YAAYrD,GAAa9G,MAAK,WACjCgJ,EAASC,IAAQmB,0BAA0B,QAE7CjC,YAAmBwB,QAKzBX,EAASC,IAAQoB,mBAAmBR,KAGhCS,EAAc,SAACxD,EAAakC,GAAoC,IAA1BuB,IAAc1G,UAAAnC,OAAA,QAAAsC,IAAAH,UAAA,KAAAA,UAAA,GAClD+F,EAAqB,GAAHxB,OAAMC,IAAQvL,EAAE,eAAc,KAAAsL,OAAItB,EAAW,KAAAsB,OAAIC,IAAQvL,EAAE,mBACnF,GAAIyN,EAAgB,CAClB,IAAIhB,EAAUlB,IAAQvL,EAAE,oCAClB0M,EAAQnB,IAAQvL,EAAE,kCAClB2M,EAAiBpB,IAAQvL,EAAE,aAE7B+M,EAAU,CACZN,UACAC,QACAC,iBACAK,UAAW,kBAAM9C,IAAKmD,YAAYrD,GAAa9G,MAAK,WAClDgJ,EAASC,IAAQmB,0BAA0B,KAC3CpB,EAASC,IAAQuB,mCACjBrC,YAAmByB,QAInB5C,IAAKY,oBAAoB6C,iBAAmB3D,EAAYpF,SAG1DmI,EAAU,CACRN,QAHFA,EAAUlB,IAAQvL,EAAE,4CAIlB0M,QACAC,iBACAK,UAAW,kBAAM1H,QAAQtC,aAI7BkJ,EAASC,IAAQoB,mBAAmBR,SAEpC7C,IAAKmD,YAAYrD,GAAa9G,MAAK,WACjCgJ,EAASC,IAAQmB,0BAA0B,KAC3CpB,EAASC,IAAQuB,mCACjBrC,YAAmByB,OAKnBc,EAAoB,SAAC5D,GACzBE,IAAK2D,UAAU7D,EAAaE,IAAK4D,gBAAkB,GACnDzC,YAAmB,GAADC,OAAIC,IAAQvL,EAAE,eAAc,KAAAsL,OAAItB,EAAW,KAAAsB,OAAIC,IAAQvL,EAAE,qCAGvE+N,EAAiB,SAAC/D,GACtBE,IAAK2D,UAAU7D,EAAa,GAC5BqB,YAAmB,GAADC,OAAIC,IAAQvL,EAAE,eAAc,KAAAsL,OAAItB,EAAW,KAAAsB,OAAIC,IAAQvL,EAAE,kCAGvEgO,EAAyB,SAAChE,EAAakC,GAC3C,GAA2B,IAAvBlC,EAAYpF,OAAc,CAC5B,IAAM8H,EAAQnB,IAAQvL,EAAE,kCAIlB+M,EAAU,CACdN,QAJclB,IAAQvL,EAAE,oCAKxB0M,QACAC,eALqBpB,IAAQvL,EAAE,aAM/BgN,UAAW,kBAAM1H,QAAQtC,WACzBiL,SAAU,CAAC,cAIb,OADA/B,EAASC,IAAQoB,mBAAmBR,KAC7B,EAET,OAAO,GAGHmB,EAA2B,SAACC,EAAYjC,GAC5C,IAAMQ,EAAQnB,IAAQvL,EAAE,iCAIlB+M,EAAU,CACdN,QAJclB,IAAQvL,EAAE,mCAKxB0M,QACAC,eALqBpB,IAAQvL,EAAE,aAM/BgN,UAAWmB,EACXF,SAAU,CAAC,cAGb/B,EAASC,IAAQoB,mBAAmBR,KAGhCqB,EAA6B,SAACD,EAAYjC,GAC9C,IAAMQ,EAAQnB,IAAQvL,EAAE,6CAIlB+M,EAAU,CACdN,QAJclB,IAAQvL,EAAE,+CAKxB0M,QACAC,eALqBpB,IAAQvL,EAAE,aAM/BgN,UAAWmB,EACXF,SAAU,CAAC,cAGb/B,EAASC,IAAQoB,mBAAmBR,KAGhCsB,EAAc,SAACrE,EAAasE,GAChCpE,IAAKqE,gBAAgBC,EAAqBxE,EAAasE,KAGnDE,EAAuB,SAACxE,EAAasE,GACzC,IAE8BG,EAFxBC,EAAS,GACTC,EAAWzE,IAAKC,cAAcyE,EAAA5G,EACjBgC,GAAW,IAA9B,IAAA4E,EAAA5M,MAAAyM,EAAAG,EAAAxO,KAAAiD,MAAgC,KAArB6H,EAAIuD,EAAAjO,MACPqO,EAAWF,EAASG,YAAY5D,GAChC6D,EAAeJ,EAASnD,gBAAgBN,GAC9C,GAAI2D,EAAU,CACZ,IAAIjD,OAAK,EACLC,OAAM,EACW,KAAjBkD,GAAwC,MAAjBA,GACzBnD,EAAQiD,EAAShD,OACjBA,EAASgD,EAASjD,QAElBA,EAAQiD,EAASjD,MACjBC,EAASgD,EAAShD,QAEpB,IAAMmD,EAAY,IAAIxF,OAAOC,KAAKwF,YAAYC,oBAAmB3H,EAAC,CAChE4H,WAAYjE,EACZkE,KAAM,IAAI5F,OAAOC,KAAKwF,YAAYG,KAAK,EAAG,EAAGxD,EAAOC,IACjDyC,IAELU,EAAUrN,KAAO0N,IAA4B,UAC7CL,EAAUM,cAAc,qBAAsBD,IAA4B,WAC1EL,EAAUO,OAASrF,IAAKsF,iBACxBd,EAAOnK,KAAKyK,KAEf,MAAA/H,GAAA2H,EAAA7O,EAAAkH,GAAA,QAAA2H,EAAA7M,IAGD,OAFAmI,IAAKuF,uBAAuBC,eAAehB,GAC3CxE,IAAKuF,uBAAuBE,wBAAwBjB,GAC7CA,GAGHkB,EAAY,eAAAC,EAAAlJ,EAAA7G,IAAAmF,MAAG,SAAA6K,EAAOC,EAAgBC,EAAeC,GAA0B,IAAAC,EAAAC,EAAAC,EAAA,OAAAtQ,IAAAuB,MAAA,SAAAgP,GAAA,cAAAA,EAAA3K,KAAA2K,EAAAtM,MAAA,OAMnF,GALMmM,EAAyBhG,IAAKC,cAC9BgG,EAA4BD,EAAuBvC,eACnDyC,EAA4BJ,EAAcM,MAAK,SAAC3P,EAAG4P,GAAC,OAAK5P,EAAI4P,KAIjC,IAA9BJ,GAAmCC,EAA0BxL,SAAWuL,EAAyB,CAAAE,EAAAtM,KAAA,gBAAAsM,EAAAtM,KAAA,EAC7FmM,EAAuBM,YAAYT,EAAgBE,GAA2B,cAAAI,EAAAtM,KAAA,EAC9EmM,EAAuB7C,YAAY+C,GAA0B,OAAAC,EAAAtM,KAAA,wBAAAsM,EAAAtM,KAAA,GAI7DmM,EAAuB7C,YAAY+C,GAA0B,eAAAC,EAAAtM,KAAA,GAC7DmM,EAAuBM,YAAYT,EAAgBE,EAA4BG,EAA0B,IAAG,yBAAAC,EAAAxK,UAAAiK,OAErH,gBAhBiBW,EAAAC,EAAAC,GAAA,OAAAd,EAAA7I,MAAA,KAAAD,YAAA,GAkBZyJ,EAAW,eAAAI,EAAAjK,EAAA7G,IAAAmF,MAAG,SAAA4L,EAAOd,EAAgBe,GAAa,IAAAC,EAAAb,EAAAc,EAAAjK,UAAA,OAAAjH,IAAAuB,MAAA,SAAA4P,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAlN,MAAA,OACL,OADOgN,EAAoBC,EAAApM,OAAA,QAAAsC,IAAA8J,EAAA,GAAAA,EAAA,GAAG,KACzEd,EAAyBhG,IAAKC,cAAa8G,EAAAlN,KAAA,EAC3CmM,EAAuBM,YAAYT,EAAgBe,EAAeC,GAAqB,wBAAAE,EAAApL,UAAAgL,OAC9F,gBAHgBK,EAAAC,GAAA,OAAAP,EAAA5J,MAAA,KAAAD,YAAA","file":"chunks/3.chunk.js","sourcesContent":["import extractPagesWithAnnotations from 'helpers/extractPagesWithAnnotations';\nimport core from 'core';\nimport { saveAs } from 'file-saver';\nimport actions from 'actions';\nimport i18next from 'i18next';\nimport { workerTypes } from 'constants/types';\nimport { redactionTypeMap } from 'constants/redactionTypes';\nimport DataElements from 'constants/dataElement';\nimport { createAnnouncement } from './accessibility';\n\nconst getNewRotation = (curr, counterClockwise = false) => {\n  const { E_0, E_90, E_180, E_270 } = window.Core.PageRotation;\n  switch (curr) {\n    case E_270:\n      return counterClockwise ? E_180 : E_0;\n    case E_180:\n      return counterClockwise ? E_90 : E_270;\n    case E_90:\n      return counterClockwise ? E_0 : E_180;\n    default:\n      return counterClockwise ? E_270 : E_90;\n  }\n};\n\nconst canRotateLoadedDocument = () => {\n  const doc = core.getDocument();\n  const docType = doc?.type;\n\n  return (\n    workerTypes.PDF === docType ||\n    workerTypes.IMAGE === docType ||\n    (docType === workerTypes.WEBVIEWER_SERVER && !doc.isWebViewerServerDocument())\n  );\n};\n\nconst rotatePages = (pageNumbers, counterClockwise) => {\n  if (canRotateLoadedDocument()) {\n    const rotation = counterClockwise ? window.Core.PageRotation.E_270 : window.Core.PageRotation.E_90;\n    pageNumbers.forEach((index) => {\n      core.rotatePages([index], rotation);\n    });\n  } else {\n    const docViewer = core.getDocumentViewer();\n    const currentRotations = docViewer.getPageRotations();\n    for (const page of pageNumbers) {\n      docViewer.setRotation(getNewRotation(currentRotations[page], counterClockwise), page);\n    }\n  }\n};\n\nconst rotateClockwise = (pageNumbers) => {\n  rotatePages(pageNumbers, false);\n  createAnnouncement(`${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.rotatedClockwise')} ${i18next.t('action.rotationIs')} ${(core.getDocument().getPageRotation(core.getCurrentPage()) + 90) % 360} degrees`);\n};\n\nconst rotateCounterClockwise = (pageNumbers) => {\n  rotatePages(pageNumbers, true);\n  createAnnouncement(`${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.rotatedCounterClockwise')} ${i18next.t('action.rotationIs')} ${(core.getDocument().getPageRotation(core.getCurrentPage()) + 270) % 360} degrees`);\n};\n\nconst insertAbove = (pageNumbers, width, height) => {\n  core.insertBlankPages(pageNumbers, width, height);\n};\n\nconst insertBelow = (pageNumbers, width, height) => {\n  core.insertBlankPages(pageNumbers.map((i) => i + 1), width, height);\n};\n\nconst replace = (dispatch) => {\n  dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\n  dispatch(actions.openElement('pageReplacementModal'));\n};\n\nconst extractPages = (pageNumbers, dispatch) => {\n  const message = i18next.t('warning.extractPage.message');\n  const title = i18next.t('warning.extractPage.title');\n  const confirmBtnText = i18next.t('warning.extractPage.confirmBtn');\n  const secondaryBtnText = i18next.t('warning.extractPage.secondaryBtn');\n  const extractAnnouncement = `${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.extracted')}`;\n  const deleteAnnouncement = `${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.deleted')}`;\n\n  const warning = {\n    message,\n    title,\n    confirmBtnText,\n    onConfirm: () => extractPagesWithAnnotations(pageNumbers).then((file) => {\n      saveAs(file, 'extractedDocument.pdf');\n      createAnnouncement(extractAnnouncement + deleteAnnouncement);\n    }),\n    secondaryBtnText,\n    onSecondary: () => {\n      extractPagesWithAnnotations(pageNumbers).then((file) => {\n        saveAs(file, 'extractedDocument.pdf');\n        core.removePages(pageNumbers).then(() => {\n          dispatch(actions.setSelectedPageThumbnails([]));\n        });\n        createAnnouncement(extractAnnouncement);\n      });\n    },\n  };\n\n  dispatch(actions.showWarningMessage(warning));\n};\n\nconst deletePages = (pageNumbers, dispatch, isModalEnabled = true) => {\n  const deleteAnnouncement = `${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.deleted')}`;\n  if (isModalEnabled) {\n    let message = i18next.t('warning.deletePage.deleteMessage');\n    const title = i18next.t('warning.deletePage.deleteTitle');\n    const confirmBtnText = i18next.t('action.ok');\n\n    let warning = {\n      message,\n      title,\n      confirmBtnText,\n      onConfirm: () => core.removePages(pageNumbers).then(() => {\n        dispatch(actions.setSelectedPageThumbnails([]));\n        dispatch(actions.setShiftKeyThumbnailsPivotIndex());\n        createAnnouncement(deleteAnnouncement);\n      }),\n    };\n\n    if (core.getDocumentViewer().getPageCount() === pageNumbers.length) {\n      message = i18next.t('warning.deletePage.deleteLastPageMessage');\n\n      warning = {\n        message,\n        title,\n        confirmBtnText,\n        onConfirm: () => Promise.resolve(),\n      };\n    }\n\n    dispatch(actions.showWarningMessage(warning));\n  } else {\n    core.removePages(pageNumbers).then(() => {\n      dispatch(actions.setSelectedPageThumbnails([]));\n      dispatch(actions.setShiftKeyThumbnailsPivotIndex());\n      createAnnouncement(deleteAnnouncement);\n    });\n  }\n};\n\nconst movePagesToBottom = (pageNumbers) => {\n  core.movePages(pageNumbers, core.getTotalPages() + 1);\n  createAnnouncement(`${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.movedToBottomOfDocument')}`);\n};\n\nconst movePagesToTop = (pageNumbers) => {\n  core.movePages(pageNumbers, 0);\n  createAnnouncement(`${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.movedToTopofDocument')}`);\n};\n\nconst noPagesSelectedWarning = (pageNumbers, dispatch) => {\n  if (pageNumbers.length === 0) {\n    const title = i18next.t('warning.selectPage.selectTitle');\n    const message = i18next.t('warning.selectPage.selectMessage');\n    const confirmBtnText = i18next.t('action.ok');\n\n    const warning = {\n      message,\n      title,\n      confirmBtnText,\n      onConfirm: () => Promise.resolve(),\n      keepOpen: ['leftPanel'],\n    };\n\n    dispatch(actions.showWarningMessage(warning));\n    return true;\n  }\n  return false;\n};\n\nconst exitPageInsertionWarning = (closeModal, dispatch) => {\n  const title = i18next.t('insertPageModal.warning.title');\n  const message = i18next.t('insertPageModal.warning.message');\n  const confirmBtnText = i18next.t('action.ok');\n\n  const warning = {\n    message,\n    title,\n    confirmBtnText,\n    onConfirm: closeModal,\n    keepOpen: ['leftPanel'],\n  };\n\n  dispatch(actions.showWarningMessage(warning));\n};\n\nconst exitPageReplacementWarning = (closeModal, dispatch) => {\n  const title = i18next.t('option.pageReplacementModal.warning.title');\n  const message = i18next.t('option.pageReplacementModal.warning.message');\n  const confirmBtnText = i18next.t('action.ok');\n\n  const warning = {\n    message,\n    title,\n    confirmBtnText,\n    onConfirm: closeModal,\n    keepOpen: ['leftPanel'],\n  };\n\n  dispatch(actions.showWarningMessage(warning));\n};\n\nconst redactPages = (pageNumbers, redactionStyles) => {\n  core.applyRedactions(createPageRedactions(pageNumbers, redactionStyles));\n};\n\nconst createPageRedactions = (pageNumbers, redactionStyles) => {\n  const annots = [];\n  const document = core.getDocument();\n  for (const page of pageNumbers) {\n    const pageInfo = document.getPageInfo(page);\n    const pageRotation = document.getPageRotation(page);\n    if (pageInfo) {\n      let width;\n      let height;\n      if (pageRotation === 90 || pageRotation === 270) {\n        width = pageInfo.height;\n        height = pageInfo.width;\n      } else {\n        width = pageInfo.width;\n        height = pageInfo.height;\n      }\n      const redaction = new window.Core.Annotations.RedactionAnnotation({\n        PageNumber: page,\n        Rect: new window.Core.Annotations.Rect(0, 0, width, height),\n        ...redactionStyles\n      });\n      redaction.type = redactionTypeMap['FULL_PAGE'];\n      redaction.setCustomData('trn-redaction-type', redactionTypeMap['FULL_PAGE']);\n      redaction.Author = core.getCurrentUser();\n      annots.push(redaction);\n    }\n  }\n  core.getAnnotationManager().addAnnotations(annots);\n  core.getAnnotationManager().drawAnnotationsFromList(annots);\n  return annots;\n};\n\nconst replacePages = async (sourceDocument, pagesToRemove, pagesToReplaceIntoDocument) => {\n  const documentLoadedInViewer = core.getDocument();\n  const pageCountOfLoadedDocument = documentLoadedInViewer.getPageCount();\n  const pagesToRemoveFromOriginal = pagesToRemove.sort((a, b) => a - b);\n\n  // If document to replace into has only one page, or we are replacing all pages\n  // then we can insert pages at the end, and then remove the pages to avoid an error of removing all pages\n  if (pageCountOfLoadedDocument === 1 || pagesToRemoveFromOriginal.length === pageCountOfLoadedDocument) {\n    await documentLoadedInViewer.insertPages(sourceDocument, pagesToReplaceIntoDocument);\n    await documentLoadedInViewer.removePages(pagesToRemoveFromOriginal);\n  } else {\n    // If document to replace into has > 1 page we need insert the new pages at the spot of the first removed page\n    // pagesToRemoveFromOriginal is sorted in ascending order. Interleaving pages would be complex.\n    await documentLoadedInViewer.removePages(pagesToRemoveFromOriginal);\n    await documentLoadedInViewer.insertPages(sourceDocument, pagesToReplaceIntoDocument, pagesToRemoveFromOriginal[0]);\n  }\n};\n\nconst insertPages = async (sourceDocument, pagesToInsert, insertBeforeThisPage = null) => {\n  const documentLoadedInViewer = core.getDocument();\n  await documentLoadedInViewer.insertPages(sourceDocument, pagesToInsert, insertBeforeThisPage);\n};\n\nexport {\n  rotateClockwise,\n  rotateCounterClockwise,\n  insertAbove,\n  insertBelow,\n  replace,\n  extractPages,\n  deletePages,\n  movePagesToBottom,\n  movePagesToTop,\n  noPagesSelectedWarning,\n  redactPages,\n  createPageRedactions,\n  replacePages,\n  insertPages,\n  exitPageInsertionWarning,\n  exitPageReplacementWarning\n};"],"sourceRoot":""}