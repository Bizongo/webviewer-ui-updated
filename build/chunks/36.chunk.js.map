{"version":3,"sources":["webpack:///./src/components/StylePicker/ColorPicker/ColorPicker.js","webpack:///./src/components/StylePicker/ColorPicker/index.js","webpack:///./src/components/StylePicker/ColorPicker/ColorPicker.scss?11f3","webpack:///./src/components/StylePicker/ColorPicker/ColorPicker.scss","webpack:///./src/components/RichTextStyleEditor/RichTextStyleEditor.scss?72c3","webpack:///./src/components/RichTextStyleEditor/RichTextStyleEditor.scss","webpack:///./src/components/RichTextStyleEditor/RichTextStyleEditor.js","webpack:///./src/components/RichTextStyleEditor/index.js","webpack:///./src/components/StylePicker/StylePicker.scss?2eeb","webpack:///./src/components/StylePicker/StylePicker.scss","webpack:///./src/components/StylePanel/StylePanel.scss?6a40","webpack:///./src/components/StylePanel/StylePanel.scss","webpack:///./src/components/StylePicker/SnapModeToggle/index.js","webpack:///./src/components/StylePicker/SnapModeToggle/SnapModeToggle.js","webpack:///./src/helpers/stylePanelHelper.js","webpack:///./src/components/StylePicker/StylePicker.js","webpack:///./src/components/StylePicker/index.js","webpack:///./src/components/StylePanel/StylePanel.js","webpack:///./src/components/StylePanel/StylePanelContainer.js","webpack:///./src/components/StylePanel/index.js"],"names":["parseColor","color","_parsedColor","_parsedColor2","parsedColor","toHexString","toLowerCase","transparentIcon","React","createElement","width","height","className","classNames","stroke","x1","y1","x2","y2","strokeWidth","strokeLinecap","propTypes","PropTypes","any","ColorPicker","_ref","onColorChange","_ref$hasTransparentCo","hasTransparentColor","activeTool","type","activeToolName","Object","values","window","Core","Tools","ToolNames","includes","EDIT","store","useStore","t","useTranslation","dispatch","useDispatch","colors","_slicedToArray","useSelector","state","selectors","getColors","_useState2","useState","selectedColor","setSelectedColor","_useState4","isExpanded","setIsExpanded","forceExpandRef","useRef","useEffect","current","getCustomColorAndRemove","customColor","getCustomColor","getState","actions","setCustomColor","handleAddColor","useCallback","openElement","getInstanceNode","addEventListener","Events","VISIBILITY_CHANGED","onVisibilityChanged","e","_e$detail","detail","element","isVisible","newColors","concat","_toConsumableArray","setColors","removeEventListener","length","palette","map","push","indexOf","shouldHideShowMoreButton","showCopyButtonDisabled","isDeleteDisabled","slice","Fragment","i","key","onClick","aria-label","active","cell","border","style","backgroundColor","Button","img","title","dataElement","indexToDelete","nextIndex","splice","disabled","hidden","api","content","__esModule","default","module","options","styleTag","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","___CSS_LOADER_API_IMPORT___","annotation","object","editor","shape","TextColor","RichTextStyle","isFreeTextAutoSize","bool","onFreeTextSizeToggle","func","onPropertyChange","onRichTextStyleChange","isRedaction","isRichTextEditMode","setIsRichTextEditMode","isTextStylePickerHidden","RichTextStyleEditor","_ref4","_RichTextStyle$","_ref5","_RichTextStyle$2","_RichTextStyle$3","_RichTextStyle$3$text","_RichTextStyle$4","_RichTextStyle$4$text","_RichTextStyle$0$text","_RichTextStyle$5","_RichTextStyle$5$text","_RichTextStyle$6","_RichTextStyle$7","textSizeSliderComponent","fonts","getFonts","shallowEqual","format","setFormat","editorRef","annotationRef","propertiesRef","oldSelectionRef","richTextEditModeRef","handleSelectionChange","range","oldRange","setSelection","index","getFormat","handleTextChange","_editorRef$current","getSelection","core","disableElements","DataElements","ANNOTATION_STYLE_POPUP","enableElements","_editorRef$current2","_ref2","_ref3","_stylesTemp$textDeco","_stylesTemp$textDeco2","_stylesTemp$textDeco3","_stylesTemp$textDeco4","StrokeStyle","err","console","error","stylesTemp","getRichTextStyle","Font","FontSize","TextAlign","TextVerticalAlign","bold","italic","underline","strikeout","size","font","calculatedFontSize","getCalculatedFontSize","handleEditorBlur","handleEditorFocus","properties","Annotations","Color","Array","isArray","lastSelectedColor","_i","_propertiesToCheck","prop","undefined","applyFormat","formatKey","value","_editorRef$current3","_editorRef$current4","_objectSpread","_defineProperty","defaults","strike","quillFont","quillFontSize","originalSize","onMouseDown","preventDefault","TextStylePicker","property","_editorRef$current$ge2","blur","adjustFreeTextBoundingBox","setTimeout","getAnnotationManager","getEditBoxManager","focusBox","propertyTranslation","freeText","isAutoSized","resizeAnnotation","_editorRef$current$ge","newSelection","currentFormat","handleTextFormatChange","stateless","isFreeText","name","handleColorChange","memo","SnapModeToggle","_core$getDocument","_core$getDocument2","Scale","Precision","isSnapModeEnabled","wasDocumentSwappedToClientSide","getDocument","getType","workerTypes","WEBVIEWER_SERVER","isWebViewerServerDocument","isEligibleDocumentForSnapping","PDF","showMeasurementSnappingOption","isFullPDFEnabled","Choice","id","label","i18next","checked","onChange","event","enableSnapping","target","mode","getDocumentViewer","SnapMode","e_DefaultSnapMode","POINT_ON_LINE","getMeasurementTools","tool","_tool$setSnapMode","setSnapMode","call","setEnableSnapMode","shouldHideStylePanelOptions","toolName","CheckBoxFormFieldCreateTool","RadioButtonFormFieldCreateTool","AddParagraphTool","AddImageContentTool","CropCreateTool","SnippingCreateTool","SignatureFormFieldCreateTool","some","getTool","shouldHideOpacitySlider","RedactionCreateTool","EraserTool","TextFormFieldCreateTool","ListBoxFormFieldCreateTool","ComboBoxFormFieldCreateTool","shouldHideTransparentFillColor","stylePanelSectionTitles","section","toolTitles","shouldHideTextStylePicker","TEXT_FORM_FIELD","LIST_BOX_FIELD","COMBO_BOX_FIELD","withCloudyStyle","defaultStrokeStyles","cloudyStrokeStyle","onStyleChange","isRequired","sliderProperties","arrayOf","string","isEllipse","redactionLabelProperties","isFreeHand","showLineStyleOptions","isArc","isStamp","isInFormFieldCreationMode","startLineStyle","endLineStyle","strokeStyle","onLineStyleChange","handleRichTextStyleChange","activeType","StylePicker","saveEditorInstance","StrokeColor","strokeColor","setStrokeColor","_useState6","startingLineStyle","setStartingLineStyle","_useState8","endingLineStyle","setEndingLineStyle","_useState10","strokeLineStyle","setStrokeLineStyle","_useState12","FillColor","fillColor","setFillColor","hideStrokeStyle","RubberStampCreateTool","StampCreateTool","showFillColorAndCollapsablePanelSections","RectangleCreateTool","EllipseCreateTool","PolygonCreateTool","PolygonCloudCreateTool","EllipseMeasurementCreateTool","AreaMeasurementCreateTool","FreeTextCreateTool","CalloutCreateTool","hasFillColorAndCollapsablePanelSections","hideFillColorAndCollapsablePanelSections","shouldHideFillColorAndCollapsablePanelSections","hideStrokeSlider","TextUnderlineCreateTool","TextHighlightCreateTool","TextSquigglyCreateTool","TextStrikeoutCreateTool","CountMeasurementCreateTool","FileAttachmentCreateTool","StickyCreateTool","MarkInsertTextCreateTool","MarkReplaceTextCreateTool","shouldHideStrokeSlider","showSnapModeCheckbox","DistanceMeasurementCreateTool","ArcMeasurementCreateTool","PerimeterMeasurementCreateTool","RectangularAreaMeasurementCreateTool","CloudyRectangularAreaMeasurementCreateTool","hasSnapModeCheckbox","showTextStyle","shouldShowTextStyle","RICH_TEXT_STYLE_CONTAINER","STROKE_STYLE_CONTAINER","closeElement","ANNOTATION_POPUP","onSliderChange","Opacity","StrokeThickness","_useSelector2","isElementDisabled","STYLE_OPTION","isElementOpen","FILL_COLOR_CONTAINER","OPACITY_CONTAINER","isStyleOptionDisabled","isStrokeStyleContainerActive","isFillColorContainerActive","isOpacityContainerActive","isTextStyleContainerActive","panelItems","togglePanelItem","openTextStyleContainer","openElements","RICH_TEXT_EDITOR","openStrokeStyleContainer","openFillColorContainer","openOpacityContainer","renderSlider","shouldHideSliderTitle","sliderProps","lineStart","circleRadius","displayProperty","getDisplayValue","Math","round","OPACITY_SLIDER","getCirclePosition","lineLength","convertRelativeCirclePositionToValue","circlePosition","withInputField","inputFieldType","min","max","step","getLocalValue","opacity","parseInt","strokeThickness","placeOfDecimal","floor","toString","split","parseFloat","toFixed","STROKE_THICKNESS_SLIDER","FONT_SIZE_SLIDER","getSliderProps","Slider","_extends","renderDivider","onOpenProps","useOnFreeTextEdit","textSizeSlider","strokethicknessComponent","toUpperCase","tabIndex","onKeyDown","role","Icon","glyph","LabelTextEditor","placeholderText","colorMapKey","Dropdown","images","defaultStartLineStyles","onClickItem","currentSelectionKey","defaultEndLineStyles","StylePanel","getToolButtonObjects","isAnnotationToolStyleSyncingEnabled","getActiveDocumentViewerKey","isPanelOpen","toolButtonObject","activeDocumentViewerKey","currentTool","getToolMode","currentToolName","colorProperties","showStyles","setShowStyles","noToolStyle","setNoToolStyle","setIsEllipse","setIsFreeText","REDACTION","setIsRedaction","defaultTool","setIsTextStylePickerHidden","_useState14","setIsFreeHand","_useState16","setIsArc","_useState18","setIsStamp","_useState20","setIsInFormFieldCreationMode","_useState22","setStyle","_useState24","setStartLineStyle","_useState26","setEndLineStyle","_useState28","setStrokeStyle","_useState30","panelTitle","setPanelTitle","annotationCreateToolNames","getAnnotationCreateToolNames","_useState32","getDataWithKey","mapToolNameToKey","hasLineEndings","setShowLineStyleOptions","_useState34","isAutoSizeFont","setIsAutoSizeFont","_useState36","setActiveTool","_useState38","editorInstance","setEditorInstance","setToolMode","getPanelTitleOnAnnotationSelected","annot","isContentEditPlaceholder","ToolName","setPanelTitleForSelectedTool","updateStylePanelProps","extraStyles","FreeTextAnnotation","_extractUniqueFontFam","jsonData","inputText","uniqueFontFamilies","Set","uniqueFontSizes","hasOwnProperty","isNaN","add","trim","from","sizes","extractUniqueFontFamilies","getContents","RedactionAnnotation","OverlayText","RectangleAnnotation","isFormFieldPlaceholder","getStartStyle","getEndStyle","dashes","getStrokeStyle","handleToolModeChange","newTool","ELLIPSE","FREETEXT","FREEHAND","FREEHAND_HIGHLIGHT","ARC","STAMP","getFormFieldCreationManager","toolStyles","getToolStyles","StartLineStyle","EndLineStyle","onAnnotationSelected","annotations","action","EllipseAnnotation","FreeHandAnnotation","ArcAnnotation","StampAnnotation","AnnotationEditTool","selectedAnnotations","getSelectedAnnotations","noToolSelected","newStyle","annotationsToUpdate","hasFocus","background","colorRGB","hexToRGBA","r","g","b","a","setToolStyles","redrawAnnotation","sectionPropertyMap","start","middle","end","setStartStyle","lineStyle","shift","Style","Dashes","setEndStyle","handleFreeTextAutoSizeToggle","_style$RichTextStyle","originalProperty","originalValue","activeToolRichTextStyle","getTextDecoration","richTextStyle","0","updateAnnotationRichTextStyle","complete","StylePanelContainer","DataElementWrapper"],"mappings":"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","file":"chunks/36.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport './ColorPicker.scss';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport actions from 'actions';\nimport { useDispatch, useStore, useSelector } from 'react-redux';\nimport Events from 'constants/events';\nimport { getInstanceNode } from 'helpers/getRootNode';\nimport selectors from 'selectors';\nimport Button from 'components/Button';\n\nconst parseColor = (color) => {\n  if (!color) {\n    return color;\n  }\n  let parsedColor = color;\n  if (parsedColor?.toHexString) {\n    parsedColor = parsedColor.toHexString();\n  }\n  if (parsedColor?.toLowerCase) {\n    parsedColor = parsedColor.toLowerCase();\n  }\n\n  return parsedColor;\n};\n\nconst TRANSPARENT_COLOR = 'transparent';\n\nconst transparentIcon = (\n  <svg\n    width=\"100%\"\n    height=\"100%\"\n    className={classNames('transparent')}\n  >\n    <line stroke=\"#d82e28\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"0\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n  </svg>\n);\n\n\nconst propTypes = {\n  color: PropTypes.any\n};\n\nconst ColorPicker = ({\n  onColorChange,\n  hasTransparentColor = false,\n  color,\n  activeTool,\n  type,\n}) => {\n  const activeToolName = Object.values(window.Core.Tools.ToolNames).includes(activeTool) ? activeTool : window.Core.Tools.ToolNames.EDIT;\n  const store = useStore();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [colors] = useSelector((state) => [\n    selectors.getColors(state, activeToolName, type),\n  ]);\n  const [selectedColor, setSelectedColor] = useState();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const forceExpandRef = useRef(true);\n\n  useEffect(() => {\n    forceExpandRef.current = true;\n  }, [activeToolName, color]);\n\n  useEffect(() => {\n    if (color) {\n      setSelectedColor(parseColor(color));\n    }\n  }, [color]);\n\n  const getCustomColorAndRemove = () => {\n    const customColor = selectors.getCustomColor(store.getState());\n    dispatch(actions.setCustomColor(null));\n    return customColor;\n  };\n\n  const handleAddColor = useCallback(() => {\n    dispatch(actions.openElement('ColorPickerModal'));\n    const onVisibilityChanged = (e) => {\n      const { element, isVisible } = e.detail;\n      if (element === 'ColorPickerModal' && !isVisible) {\n        const color = parseColor(getCustomColorAndRemove());\n        if (color) {\n          if (colors.includes(color)) {\n            setSelectedColor(color);\n            onColorChange(color);\n          } else {\n            const newColors = [...colors, color];\n            dispatch(actions.setColors(newColors, activeToolName, type, true));\n            setSelectedColor(color);\n            onColorChange(color);\n          }\n        }\n      }\n      getInstanceNode().removeEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n    };\n    getInstanceNode().addEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n  }, [colors?.length, dispatch, setSelectedColor, onColorChange, getCustomColorAndRemove, type, activeToolName]);\n\n  const handleDelete = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors];\n    const indexToDelete = newColors.indexOf(color);\n    if (indexToDelete > -1) {\n      const nextIndex = indexToDelete === newColors.length - 1 ? 0 : indexToDelete + 1;\n      setSelectedColor(colors[nextIndex]);\n      onColorChange(colors[nextIndex]);\n      newColors.splice(indexToDelete, 1);\n      dispatch(actions.setColors(newColors, activeToolName, type, true));\n    }\n  };\n\n  const handleCopyColor = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors, color];\n    dispatch(actions.setColors(newColors, activeToolName, type, true));\n  };\n\n  const toggleExpanded = () => {\n    const newValue = !isExpanded;\n    setIsExpanded(newValue);\n  };\n\n  let palette = colors.map((color) => color.toLowerCase());\n  if (hasTransparentColor) {\n    palette.push(TRANSPARENT_COLOR);\n  }\n\n  if (!selectedColor) {\n    setSelectedColor('transparent');\n  }\n\n  if (palette.indexOf(selectedColor) > 6 && !isExpanded && forceExpandRef.current) {\n    setIsExpanded(true);\n    forceExpandRef.current = false;\n  }\n\n  const shouldHideShowMoreButton = palette.length <= 7;\n  const showCopyButtonDisabled = !(selectedColor && !palette.includes(selectedColor));\n  const isDeleteDisabled = palette.length <= 1 || !showCopyButtonDisabled;\n\n  if (!isExpanded) {\n    palette = palette.slice(0, 7);\n  }\n\n  return (\n    <>\n      <div className={classNames('ColorPalette')}>\n        {palette.map((color) => parseColor(color)).map((color, i) => (\n          !color\n            ? <div key={i} className=\"dummy-cell\"/>\n            : <button\n              key={i}\n              className=\"cell-container\"\n              onClick={() => {\n                setSelectedColor(color);\n                onColorChange(color);\n              }}\n              aria-label={`${t('option.colorPalette.colorLabel')} ${i + 1}`}\n            >\n              <div\n                className={classNames({\n                  'cell-outer': true,\n                  active: parseColor(selectedColor) === color || (!parseColor(selectedColor) && color === TRANSPARENT_COLOR),\n                })}\n              >\n                <div\n                  className={classNames({\n                    cell: true,\n                    border: color === '#ffffff' || color === TRANSPARENT_COLOR,\n                  })}\n                  style={{ backgroundColor: color }}\n                >\n                  {color === TRANSPARENT_COLOR && transparentIcon}\n                </div>\n              </div>\n            </button>\n        ))}\n      </div>\n      <div className=\"palette-controls\">\n        <div className=\"button-container\">\n          <Button\n            img=\"icon-header-zoom-in-line\"\n            title={t('action.addNewColor')}\n            onClick={handleAddColor}\n            className=\"control-button\"\n            dataElement=\"addCustomColor\"\n          />\n          <Button\n            img=\"icon-delete-line\"\n            title={t('action.deleteColor')}\n            onClick={handleDelete}\n            disabled={isDeleteDisabled}\n            className=\"control-button\"\n            dataElement=\"deleteSelectedColor\"\n          />\n          <Button\n            img=\"icon-copy2\"\n            title={t('action.copySelectedColor')}\n            onClick={handleCopyColor}\n            disabled={showCopyButtonDisabled}\n            className=\"control-button\"\n            dataElement=\"copySelectedColor\"\n          />\n        </div>\n        <button className={classNames('show-more-button control-button', {\n          hidden: shouldHideShowMoreButton,\n        })} onClick={toggleExpanded}>\n          {t(isExpanded ? 'message.showLess' : 'message.showMore')}\n        </button>\n      </div>\n    </>\n  );\n};\n\nColorPicker.propTypes = propTypes;\n\nexport default ColorPicker;","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js!./ColorPicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePicker .ColorPalette{display:flex;flex-wrap:wrap;display:grid;grid-template-columns:repeat(7,1fr);grid-row-gap:8px;row-gap:8px;justify-items:center}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.StylePicker .ColorPalette{width:196px}}.StylePicker .ColorPalette.padding{padding:4px 12px 8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{max-width:450px;width:auto}}@media(max-width:640px)and (-ms-high-contrast:active),(max-width:640px)and (-ms-high-contrast:none){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{width:308px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{max-width:450px;width:auto}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{width:308px}}}.StylePicker .ColorPalette .cell-container{padding:0;border:none;background-color:transparent;flex:1 0 14%;cursor:pointer;width:28px;height:28px;display:flex;align-items:center;justify-content:center}:host(:not([data-tabbing=true])) .StylePicker .ColorPalette .cell-container,html:not([data-tabbing=true]) .StylePicker .ColorPalette .cell-container{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}.StylePicker .ColorPalette .cell-container .cell-outer.active{border:1px solid var(--color-palette-border);width:26px;height:26px;border-radius:10000000px;display:flex;align-items:center;justify-content:center}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}.StylePicker .ColorPalette .cell-container .cell-outer .cell{width:18px;height:18px;border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell .transparent{border:2px solid var(--faded-text);border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell.border{border:1px solid var(--white-color-palette-border)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}.StylePicker .palette-controls{padding-right:12px;padding-left:2px;display:flex;justify-content:space-between}.StylePicker .palette-controls .button-container{display:flex;grid-gap:8px;gap:8px}.StylePicker .palette-controls .control-button{display:flex;align-items:center;justify-content:center;text-align:center;min-width:32px;min-height:32px;padding:0;border:none;background-color:transparent;cursor:pointer;border-radius:4px}:host(:not([data-tabbing=true])) .StylePicker .palette-controls .control-button,html:not([data-tabbing=true]) .StylePicker .palette-controls .control-button{outline:none}.StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}.StylePicker .palette-controls .control-button.show-more-button:hover{background:none;color:var(--primary-button-hover)}.StylePicker .palette-controls .control-button:disabled{cursor:default}.StylePicker .palette-controls .control-button:disabled .Icon{color:var(--disabled-icon)}.StylePicker .palette-controls .control-button.hidden{display:none}.StylePicker .palette-controls .control-button:hover{background:var(--view-header-button-hover)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./RichTextStyleEditor.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.RichTextStyleEditor{margin-bottom:16px}.RichTextStyleEditor .menu-items{margin-bottom:8px!important}.RichTextStyleEditor .menu-items .icon-grid{padding-top:12px;grid-row-gap:12px;row-gap:12px}.RichTextStyleEditor .menu-items .icon-grid .row{padding-top:0}.RichTextStyleEditor .menu-items .icon-grid .row.isRedaction{padding-bottom:8px}.RichTextStyleEditor .menu-items .icon-grid .auto-size-checkbox{padding-top:4px;padding-bottom:8px}.RichTextStyleEditor .Dropdown__wrapper{width:100%}.RichTextStyleEditor .Dropdown__wrapper .Dropdown{width:100%!important}.RichTextStyleEditor .Dropdown__wrapper .Dropdown__items{right:unset}.RichTextStyleEditor .FontSizeDropdown{width:100%}.RichTextStyleEditor .ColorPalette{padding-bottom:8px}.RichTextStyleEditor .text-size-slider{margin-top:16px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ColorPicker from 'components/StylePicker/ColorPicker';\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport './RichTextStyleEditor.scss';\nimport DataElements from 'constants/dataElement';\nimport TextStylePicker from 'components/TextStylePicker';\nimport adjustFreeTextBoundingBox from 'helpers/adjustFreeTextBoundingBox';\n\nconst propTypes = {\n  annotation: PropTypes.object,\n  editor: PropTypes.object,\n  style: PropTypes.shape({\n    TextColor: PropTypes.object,\n    RichTextStyle: PropTypes.any,\n  }),\n  isFreeTextAutoSize: PropTypes.bool,\n  onFreeTextSizeToggle: PropTypes.func,\n  onPropertyChange: PropTypes.func,\n  onRichTextStyleChange: PropTypes.func,\n  isRedaction: PropTypes.bool,\n  isRichTextEditMode: PropTypes.bool,\n  setIsRichTextEditMode: PropTypes.func,\n  isTextStylePickerHidden: PropTypes.bool,\n};\n\nconst RichTextStyleEditor = ({\n  annotation, editor,\n  style,\n  isFreeTextAutoSize,\n  onFreeTextSizeToggle,\n  onPropertyChange,\n  onRichTextStyleChange,\n  isRichTextEditMode,\n  setIsRichTextEditMode,\n  isRedaction,\n  isTextStylePickerHidden,\n  activeTool,\n  textSizeSliderComponent,\n}) => {\n  const [\n    fonts,\n  ] = useSelector(\n    (state) => [\n      selectors.getFonts(state),\n    ],\n    shallowEqual,\n  );\n\n  const [format, setFormat] = useState({});\n  const editorRef = useRef(null);\n  const annotationRef = useRef(null);\n  const propertiesRef = useRef({});\n  const dispatch = useDispatch();\n  const oldSelectionRef = useRef();\n  const richTextEditModeRef = useRef();\n  richTextEditModeRef.current = isRichTextEditMode;\n\n  useEffect(() => {\n    const handleSelectionChange = (range, oldRange) => {\n      const shouldRestoreLostSelection = !range && oldRange && editorRef.current;\n      if (shouldRestoreLostSelection) {\n        editorRef.current.setSelection(oldRange.index, oldRange.length);\n      }\n      if (range && editorRef.current) {\n        setFormat(getFormat(range));\n      }\n    };\n    const handleTextChange = () => {\n      setFormat(getFormat(editorRef.current?.getSelection()));\n    };\n    core.addEventListener('editorSelectionChanged', handleSelectionChange);\n    core.addEventListener('editorTextChanged', handleTextChange);\n    // Have to disable instead of closing because annotation popup will reopen itself\n    dispatch(actions.disableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    return () => {\n      core.removeEventListener('editorSelectionChanged', handleSelectionChange);\n      core.removeEventListener('editorTextChanged', handleTextChange);\n      dispatch(actions.enableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    };\n  }, []);\n\n  useEffect(() => {\n    editorRef.current = editor;\n    annotationRef.current = annotation;\n    if (isRichTextEditMode && annotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annotation['Style'] === 'dash')\n          ? `${annotation['Style']},${annotation['Dashes']}`\n          : annotation['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      const richTextStyles = annotation.getRichTextStyle();\n      const stylesTemp = richTextStyles[0];\n\n      propertiesRef.current = {\n        Font: annotation.Font,\n        FontSize: annotation.FontSize,\n        TextAlign: annotation.TextAlign,\n        TextVerticalAlign: annotation.TextVerticalAlign,\n        bold: stylesTemp?.['font-weight'] === 'bold' ?? false,\n        italic: stylesTemp?.['font-style'] === 'italic' ?? false,\n        underline: stylesTemp?.['text-decoration']?.includes('underline')\n          || stylesTemp?.['text-decoration']?.includes('word'),\n        strikeout: stylesTemp?.['text-decoration']?.includes('line-through') ?? false,\n        size: stylesTemp?.['font-size'],\n        font: stylesTemp?.['font-family'],\n        StrokeStyle,\n        calculatedFontSize: annotation.getCalculatedFontSize()\n      };\n    }\n\n    setFormat(getFormat(editorRef.current?.getSelection()));\n\n    if (oldSelectionRef.current) {\n      editorRef.current.setSelection(oldSelectionRef.current);\n      oldSelectionRef.current = null;\n    }\n  }, [annotation, editor, isRichTextEditMode]);\n\n  useEffect(() => {\n    const handleEditorBlur = () => {\n      editorRef.current = null;\n      annotationRef.current = null;\n      setIsRichTextEditMode(false);\n    };\n    const handleEditorFocus = () => {\n      setIsRichTextEditMode(true);\n    };\n\n    core.addEventListener('editorBlur', handleEditorBlur);\n    core.addEventListener('editorFocus', handleEditorFocus);\n    return () => {\n      core.removeEventListener('editorBlur', handleEditorBlur);\n      core.removeEventListener('editorFocus', handleEditorFocus);\n    };\n  }, [dispatch]);\n\n\n  const getFormat = (range) => {\n    if (!range) {\n      return {};\n    }\n\n    const format = editorRef.current.getFormat(range.index, range.length);\n\n    if (typeof format.color === 'string') {\n      format.color = new window.Core.Annotations.Color(format.color);\n    } else if (Array.isArray(format.color)) {\n      // the selection contains multiple color, so we set the current color to the last selected color\n      const lastSelectedColor = new window.Core.Annotations.Color(format.color[format.color.length - 1]);\n      format.color = lastSelectedColor;\n    } else if (!format.color) {\n      format.color = annotationRef.current.TextColor;\n    }\n\n    const propertiesToCheck = ['font', 'size', 'originalSize'];\n\n    for (const prop of propertiesToCheck) {\n      if (format[prop] && Array.isArray(format[prop])) {\n        format[prop] = undefined;\n      }\n    }\n\n    return format;\n  };\n\n  const handleTextFormatChange = (format) => () => {\n    let { index, length } = editorRef.current.getSelection();\n    if (length === 0) {\n      oldSelectionRef.current = { index, length };\n      const newSelection = editorRef.current.getSelection();\n      index = newSelection.index;\n      length = newSelection.length;\n    }\n    const currentFormat = editorRef.current.getFormat(index, length);\n\n    applyFormat(format, !currentFormat[format]);\n  };\n\n  const handleColorChange = (name, color) => {\n    if (!richTextEditModeRef.current) {\n      onPropertyChange(name, color);\n      return;\n    }\n    applyFormat('color', color.toHexString());\n  };\n\n  const applyFormat = (formatKey, value) => {\n    if (formatKey === 'size') {\n      editorRef.current?.format('applyCustomFontSize', value);\n    } else {\n      editorRef.current?.format(formatKey, value);\n    }\n\n    if (formatKey === 'color') {\n      value = new window.Core.Annotations.Color(value);\n    }\n\n    // format the entire editor doesn't trigger the editorTextChanged event, so we set the format state here\n    setFormat({\n      ...format,\n      [formatKey]: value\n    });\n  };\n\n  // onPropertyChange\n  const handlePropertyChange = (property, value) => {\n    if (!richTextEditModeRef.current) {\n      onPropertyChange(property, value);\n      return;\n    }\n\n    const { index, length } = editorRef.current.getSelection();\n    const annotation = annotationRef.current;\n    annotation[property] = value;\n    editorRef.current.blur();\n    if (property === 'FontSize' || property === 'Font') {\n      adjustFreeTextBoundingBox(annotation);\n    }\n    setTimeout(() => {\n      oldSelectionRef.current = { index, length };\n      const editBoxManager = core.getAnnotationManager().getEditBoxManager();\n      editBoxManager.focusBox(annotation);\n    }, 0);\n  };\n\n\n  // onRichTextStyleChange\n  const handleRichTextStyleChange = (property, value) => {\n    if (!richTextEditModeRef.current) {\n      onRichTextStyleChange(property, value);\n      return;\n    }\n\n    const propertyTranslation = {\n      'font-weight': 'bold',\n      'font-style': 'italic',\n      'underline': 'underline',\n      'line-through': 'strike',\n      'font-family': 'font',\n      'font-size': 'size',\n    };\n    if (property === 'font-family' || property === 'font-size') {\n      applyFormat(propertyTranslation[property], value);\n      const freeText = annotationRef.current;\n      if (freeText.isAutoSized()) {\n        const editBoxManager = core.getAnnotationManager().getEditBoxManager();\n        editBoxManager.resizeAnnotation(freeText);\n      }\n    } else {\n      handleTextFormatChange(propertyTranslation[property])();\n    }\n  };\n\n  let properties = {};\n\n  const { RichTextStyle } = style;\n  const defaults = {\n    bold: RichTextStyle?.[0]?.['font-weight'] === 'bold' ?? false,\n    italic: RichTextStyle?.[0]?.['font-style'] === 'italic' ?? false,\n    underline: RichTextStyle?.[0]?.['text-decoration']?.includes('underline') || RichTextStyle?.[0]?.['text-decoration']?.includes('word'),\n    strikeout: RichTextStyle?.[0]?.['text-decoration']?.includes('line-through') ?? false,\n    font: RichTextStyle?.[0]?.['font-family'],\n    size: RichTextStyle?.[0]?.['font-size'],\n    StrokeStyle: 'solid',\n  };\n\n  properties = {\n    ...style,\n    ...defaults,\n  };\n\n  if (isRichTextEditMode && annotation) {\n    propertiesRef.current.bold = format.bold;\n    propertiesRef.current.italic = format.italic;\n    propertiesRef.current.underline = format.underline;\n    propertiesRef.current.strikeout = format.strike;\n    propertiesRef.current.quillFont = format.font || propertiesRef.current.Font;\n    propertiesRef.current.quillFontSize = format.originalSize || propertiesRef.current.FontSize;\n  }\n\n  return (\n    <div className=\"RichTextStyleEditor\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart' && isRichTextEditMode) {\n          e.preventDefault();\n        }\n      }}\n    >\n      {!isTextStylePickerHidden && (\n        <div className=\"menu-items\">\n          <TextStylePicker\n            fonts={fonts}\n            onPropertyChange={handlePropertyChange}\n            onRichTextStyleChange={handleRichTextStyleChange}\n            properties={isRichTextEditMode ? propertiesRef.current : properties}\n            stateless={true}\n            isFreeText={!isRedaction}\n            onFreeTextSizeToggle={onFreeTextSizeToggle}\n            isFreeTextAutoSize={isFreeTextAutoSize}\n            isRichTextEditMode={isRichTextEditMode}\n            isRedaction={isRedaction}\n          />\n        </div>\n      )}\n      <ColorPicker\n        onColorChange={(color) => {\n          handleColorChange('TextColor', new window.Core.Annotations.Color(color));\n        }}\n        color={isRichTextEditMode ? format.color : style['TextColor']}\n        activeTool={activeTool}\n        type={'Text'}\n      />\n      {textSizeSliderComponent}\n    </div>\n  );\n};\nRichTextStyleEditor.propTypes = propTypes;\n\nexport default React.memo(RichTextStyleEditor);\n","import RichTextStyleEditor from './RichTextStyleEditor';\n\nexport default RichTextStyleEditor;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./StylePicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".StylePicker{display:flex;flex-direction:column}.StylePicker .slider-property{font-size:14px;font-weight:700;margin-bottom:8px}.StylePicker .StyleOption{margin-bottom:16px}.StylePicker .StyleOption .styles-container .styles-title{margin:0 0 8px;font-size:14px;font-weight:700}.StylePicker .StyleOption .styles-container [data-element=borderStylePicker]{margin-top:8px}.StylePicker .StyleOption .slider:only-child{margin-bottom:0}.StylePicker .StyleOption .slider .slider-element-container{margin-left:-3px}.StylePicker .StyleOption:last-child{margin-bottom:0}.StylePicker .PanelSection{margin-bottom:16px}.StylePicker .PanelSection .PanelSubsection{margin-bottom:12px}.StylePicker .PanelSection .PanelSubsection .menu-subtitle{font-size:14px;font-weight:700;margin-bottom:12px}.StylePicker .PanelSection .collapsible-menu{width:100%;display:flex;cursor:pointer;position:relative;align-items:center;margin-bottom:16px}.StylePicker .PanelSection .collapsible-menu .menu-title{padding-top:6px;padding-bottom:6px;font-weight:700;font-size:16px}.StylePicker .PanelSection .collapsible-menu .icon-container{position:absolute;right:0;display:flex;align-items:center;justify-content:center;text-align:center;min-width:28px;min-height:28px;border-radius:4px}.StylePicker .PanelSection .collapsible-menu .icon-container .Icon{height:18px;width:18px;color:var(--icon-color)}.StylePicker .PanelSection .collapsible-menu .icon-container:hover{background:var(--view-header-button-hover)}.StylePicker .PanelSection .divider{background-color:var(--divider);width:100%;height:1px}.StylePicker .PanelSection .menu-items{margin-bottom:16px}.StylePicker .PanelSection .menu-items:only-child{margin-bottom:0}.StylePicker .PanelSection .menu-items .ColorPalette{margin-bottom:8px}.StylePicker .PanelSection .slider{margin-bottom:16px}.StylePicker .PanelSection .slider:last-child,.StylePicker .PanelSection:empty,.StylePicker .PanelSection:last-child{margin-bottom:0}.StylePicker .spacer{width:100%}.StylePicker .Dropdown,.StylePicker .FontSizeDropdown,.StylePicker .overlay-text-input{height:32px}.StylePicker .lineStyleContainer{margin-bottom:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle{display:flex;flex-direction:row;grid-column-gap:8px;-moz-column-gap:8px;column-gap:8px;justify-content:space-between}.StylePicker .lineStyleContainer .StylePicker-LineStyle button.Dropdown{width:100%!important}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items,.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__wrapper{width:100%}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image svg{width:35px;margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image.shift-alignment svg{margin-top:8px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items .linestyle-image svg{width:45px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment{padding-top:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment svg{margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .Dropdown__items{top:-197px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .StyleOptions{max-width:80px}.StylePicker .lineStyleContainer .StylePicker-LineStyle>*{flex-grow:1;flex-basis:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/dist/cjs.js!./StylePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePanel{display:flex;flex-direction:column;background-color:var(--panel-background);padding-bottom:75px}.StylePanel .style-panel-header{font-size:16px;font-weight:700;margin-bottom:16px}.StylePanel .label{padding-top:16px;font-size:14px;font-weight:700}.StylePanel .no-tool-selected{padding-top:36px;display:flex;flex-direction:column;align-items:center;flex:1 1 auto}.StylePanel .no-tool-selected .msg{padding-top:24px;font-size:14px;text-align:center}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}.StylePanel .no-tool-selected .empty-icon,.StylePanel .no-tool-selected .empty-icon svg{width:55px;height:56px}.StylePanel .no-tool-selected .empty-icon *{fill:var(--gray-5);color:var(--gray-5)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","import SnapModeToggle from './SnapModeToggle';\n\nexport default SnapModeToggle;","import React from 'react';\nimport { workerTypes } from 'constants/types';\nimport core from 'core';\nimport i18next from 'i18next';\nimport Choice from 'components/Choice/Choice';\nimport getMeasurementTools from 'helpers/getMeasurementTools';\nimport actions from 'actions';\nimport { useDispatch } from 'react-redux';\n\nconst SnapModeToggle = ({\n  Scale,\n  Precision,\n  isSnapModeEnabled,\n}) => {\n  const dispatch = useDispatch();\n\n  const wasDocumentSwappedToClientSide =\n    core.getDocument()?.getType() === workerTypes.WEBVIEWER_SERVER && core.getDocument().isWebViewerServerDocument();\n  const isEligibleDocumentForSnapping = core.getDocument()?.getType().toLowerCase() === workerTypes.PDF || wasDocumentSwappedToClientSide;\n  const showMeasurementSnappingOption = Scale && Precision && isEligibleDocumentForSnapping && core.isFullPDFEnabled();\n\n  const onSnappingChange = (event) => {\n    if (!core.isFullPDFEnabled()) {\n      return;\n    }\n\n    const enableSnapping = event.target.checked;\n    const mode = enableSnapping\n      ? core.getDocumentViewer().SnapMode.e_DefaultSnapMode | core.getDocumentViewer().SnapMode.POINT_ON_LINE\n      : null;\n    const measurementTools = getMeasurementTools();\n\n    measurementTools.forEach((tool) => {\n      tool.setSnapMode?.(mode);\n    });\n\n    dispatch(actions.setEnableSnapMode(enableSnapping));\n  };\n\n  return (\n    <>\n      {showMeasurementSnappingOption && (\n        <div className=\"snapping-option\">\n          <Choice\n            dataElement=\"measurementSnappingOption\"\n            id=\"measurement-snapping\"\n            type=\"checkbox\"\n            label={i18next.t('option.shared.enableSnapping')}\n            checked={isSnapModeEnabled}\n            onChange={onSnappingChange}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SnapModeToggle;","import core from 'core';\n\nconst Tools = window.Core.Tools;\n\nexport const shouldHideStylePanelOptions = (toolName) => {\n  const toolsNoStylePanelOptions = [\n    Tools.CheckBoxFormFieldCreateTool,\n    Tools.RadioButtonFormFieldCreateTool,\n    Tools.AddParagraphTool,\n    Tools.AddImageContentTool,\n    Tools.CropCreateTool,\n    Tools.SnippingCreateTool,\n    Tools.SignatureFormFieldCreateTool,\n  ];\n\n  return toolsNoStylePanelOptions.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasFillColorAndCollapsablePanelSections = (toolName) => {\n  const toolsWithCollapsedStylePanels = [\n    Tools.RectangleCreateTool,\n    Tools.EllipseCreateTool,\n    Tools.PolygonCreateTool,\n    Tools.PolygonCloudCreateTool,\n    Tools.EllipseMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n    Tools.RedactionCreateTool,\n  ];\n\n  return toolsWithCollapsedStylePanels.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideFillColorAndCollapsablePanelSections = (toolName) => {\n  const toolsWithHiddenFillColorSections = [\n    Tools.SignatureFormFieldCreateTool,\n    Tools.RubberStampCreateTool,\n    Tools.StampCreateTool,\n    Tools.EraserTool,\n  ];\n  return toolsWithHiddenFillColorSections.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideStrokeSlider = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.TextUnderlineCreateTool,\n    Tools.TextHighlightCreateTool,\n    Tools.TextSquigglyCreateTool,\n    Tools.TextStrikeoutCreateTool,\n    Tools.CountMeasurementCreateTool,\n    Tools.RubberStampCreateTool,\n    Tools.FileAttachmentCreateTool,\n    Tools.StampCreateTool,\n    Tools.StickyCreateTool,\n    Tools.MarkInsertTextCreateTool,\n    Tools.MarkReplaceTextCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideStrokeStyle = (toolName) => {\n  const toolsWithHiddenStrokeStyle = [\n    Tools.RubberStampCreateTool,\n    Tools.StampCreateTool,\n    Tools.EraserTool,\n  ];\n  return toolsWithHiddenStrokeStyle.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldShowTextStyle = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n    Tools.RedactionCreateTool,\n    Tools.TextFormFieldCreateTool,\n    Tools.ListBoxFormFieldCreateTool,\n    Tools.ComboBoxFormFieldCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideOpacitySlider = (toolName) => {\n  const toolsWithHiddenOpacitySlider = [\n    Tools.RedactionCreateTool,\n    Tools.EraserTool,\n    Tools.TextFormFieldCreateTool,\n    Tools.ListBoxFormFieldCreateTool,\n    Tools.ComboBoxFormFieldCreateTool,\n    Tools.SignatureFormFieldCreateTool,\n  ];\n  return toolsWithHiddenOpacitySlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasSnapModeCheckbox = (toolName) => {\n  const toolsWithSnapModeCheckbox = [\n    Tools.DistanceMeasurementCreateTool,\n    Tools.ArcMeasurementCreateTool,\n    Tools.PerimeterMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.RectangularAreaMeasurementCreateTool,\n    Tools.CloudyRectangularAreaMeasurementCreateTool,\n  ];\n  return toolsWithSnapModeCheckbox.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const extractUniqueFontFamilies = (jsonData, inputText) => {\n  const uniqueFontFamilies = new Set();\n  const uniqueFontSizes = new Set();\n\n  for (const key in jsonData) {\n    if (jsonData.hasOwnProperty(key)) {\n      const index = parseInt(key, 10);\n      if (!isNaN(index) && inputText[index] !== ' ' && jsonData[key]['font-family']) {\n        uniqueFontFamilies.add(jsonData[key]['font-family'].trim());\n      }\n      if (!isNaN(index) && inputText[index] !== ' ' && jsonData[key]['font-size']) {\n        uniqueFontSizes.add(jsonData[key]['font-size'].trim());\n      }\n    }\n  }\n\n  return {\n    fonts: Array.from(uniqueFontFamilies),\n    sizes: Array.from(uniqueFontSizes),\n  };\n};\n\nexport const shouldHideTransparentFillColor = (toolName) => {\n  const toolsWithHiddenTransparentColor = [Tools.RedactionCreateTool];\n  return toolsWithHiddenTransparentColor.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const stylePanelSectionTitles = (toolName, section) => {\n  const toolTitles = {\n    'AnnotationCreateRedaction': {\n      'Title': 'component.redaction',\n      'StrokeColor': 'stylePanel.headings.redactionMarkOutline',\n      'FillColor': 'stylePanel.headings.redactionFill',\n    },\n  };\n  return toolTitles[toolName] && toolTitles[toolName][section];\n};\n\nexport const shouldHideTextStylePicker = (toolName) => {\n  const { ToolNames } = window.Core.Tools;\n  const toolsWithHiddenTextStylePicker = [\n    ToolNames.TEXT_FORM_FIELD,\n    ToolNames.LIST_BOX_FIELD,\n    ToolNames.COMBO_BOX_FIELD,\n  ];\n  return toolsWithHiddenTextStylePicker.includes(toolName);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './StylePicker.scss';\nimport ColorPicker from './ColorPicker';\nimport Slider from 'components/Slider';\nimport DataElements from 'constants/dataElement';\nimport { circleRadius } from 'constants/slider';\nimport Dropdown from '../Dropdown';\nimport {\n  defaultStartLineStyles,\n  defaultStrokeStyles,\n  defaultEndLineStyles,\n  cloudyStrokeStyle\n} from 'constants/strokeStyleIcons';\nimport Icon from 'components/Icon';\nimport SnapModeToggle from './SnapModeToggle';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport {\n  hasFillColorAndCollapsablePanelSections,\n  stylePanelSectionTitles,\n  shouldHideStrokeSlider,\n  shouldHideOpacitySlider,\n  hasSnapModeCheckbox,\n  shouldShowTextStyle,\n  shouldHideTransparentFillColor,\n  shouldHideStrokeStyle,\n  shouldHideFillColorAndCollapsablePanelSections,\n} from 'helpers/stylePanelHelper';\nimport useOnFreeTextEdit from 'hooks/useOnFreeTextEdit';\nimport RichTextStyleEditor from '../RichTextStyleEditor';\nimport LabelTextEditor from 'components/LabelTextEditor';\n\nconst withCloudyStyle = defaultStrokeStyles.concat(cloudyStrokeStyle);\n\nconst propTypes = {\n  onStyleChange: PropTypes.func.isRequired,\n  style: PropTypes.object.isRequired,\n  sliderProperties: PropTypes.arrayOf(PropTypes.string),\n  isFreeText: PropTypes.bool,\n  isEllipse: PropTypes.bool,\n  isRedaction: PropTypes.bool,\n  isTextStylePickerHidden: PropTypes.bool,\n  redactionLabelProperties: PropTypes.object,\n  isFreeHand: PropTypes.bool,\n  showLineStyleOptions: PropTypes.bool,\n  isArc: PropTypes.bool,\n  isStamp: PropTypes.bool,\n  isInFormFieldCreationMode: PropTypes.bool,\n  startLineStyle: PropTypes.string,\n  endLineStyle: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  onLineStyleChange: PropTypes.func,\n  toolName: PropTypes.string,\n  onFreeTextSizeToggle: PropTypes.func,\n  isFreeTextAutoSize: PropTypes.bool,\n  handleRichTextStyleChange: PropTypes.func,\n  activeType: PropTypes.string,\n};\n\nconst MAX_STROKE_THICKNESS = 20;\n\nconst StylePicker = ({\n  onStyleChange,\n  style,\n  isFreeText,\n  isEllipse,\n  isRedaction,\n  isTextStylePickerHidden,\n  isFreeHand,\n  showLineStyleOptions,\n  isArc,\n  isStamp,\n  isInFormFieldCreationMode,\n  startLineStyle,\n  endLineStyle,\n  strokeStyle,\n  onLineStyleChange,\n  onFreeTextSizeToggle,\n  isFreeTextAutoSize,\n  handleRichTextStyleChange,\n  activeTool,\n  saveEditorInstance,\n}) => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const [isRichTextEditMode, setIsRichTextEditMode] = useState(false);\n  const [strokeColor, setStrokeColor] = useState(style.StrokeColor);\n  const [startingLineStyle, setStartingLineStyle] = useState(startLineStyle);\n  const [endingLineStyle, setEndingLineStyle] = useState(endLineStyle);\n  const [strokeLineStyle, setStrokeLineStyle] = useState(strokeStyle);\n  const [fillColor, setFillColor] = useState(style.FillColor);\n\n  const hideStrokeStyle = shouldHideStrokeStyle(activeTool);\n  const showFillColorAndCollapsablePanelSections = hasFillColorAndCollapsablePanelSections(activeTool);\n  const hideFillColorAndCollapsablePanelSections = shouldHideFillColorAndCollapsablePanelSections(activeTool);\n  const hideStrokeSlider = shouldHideStrokeSlider(activeTool);\n  const showSnapModeCheckbox = hasSnapModeCheckbox(activeTool);\n  const showTextStyle = shouldShowTextStyle(activeTool);\n\n  useEffect(() => {\n    if (showFillColorAndCollapsablePanelSections) {\n      if (showTextStyle) {\n        dispatch(actions.openElement(DataElements.RICH_TEXT_STYLE_CONTAINER));\n      } else {\n        dispatch(actions.openElement(DataElements.STROKE_STYLE_CONTAINER));\n      }\n    }\n  }, [activeTool]);\n\n  useEffect(() => {\n    if (isRichTextEditMode) {\n      dispatch(actions.closeElement(DataElements.ANNOTATION_POPUP));\n    }\n  }, [isRichTextEditMode]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setFillColor(style.FillColor);\n  }, [strokeColor, fillColor, style]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setStartingLineStyle(startLineStyle);\n    setStrokeLineStyle(strokeStyle);\n    setEndingLineStyle(endLineStyle);\n  }, [startLineStyle, endLineStyle, strokeStyle]);\n\n  const onStrokeColorChange = (color) => {\n    onStyleChange?.('StrokeColor', color);\n    setStrokeColor(color);\n  };\n\n  const onStartLineStyleChange = (style) => {\n    onLineStyleChange?.('start', style);\n    setStartingLineStyle(style);\n  };\n\n  const onStrokeStyleChange = (style, value) => {\n    if (value) {\n      onLineStyleChange?.(style, value);\n      setStrokeLineStyle(value);\n    } else {\n      onLineStyleChange?.('middle', style);\n      setStrokeLineStyle(style);\n    }\n  };\n\n  const onEndLineStyleChange = (style) => {\n    onLineStyleChange?.('end', style);\n    setEndingLineStyle(style);\n  };\n\n  const onFillColorChange = (color) => {\n    onStyleChange?.('FillColor', color);\n    setFillColor(color);\n  };\n\n  const onSliderChange = (property, value) => {\n    onStyleChange?.(property, value);\n  };\n\n  // We do not have sliders to show up for redaction annots\n  if (isRedaction) {\n    style.Opacity = null;\n    style.StrokeThickness = null;\n  }\n\n  const [\n    isSnapModeEnabled,\n    isStyleOptionDisabled,\n    isStrokeStyleContainerActive,\n    isFillColorContainerActive,\n    isOpacityContainerActive,\n    isTextStyleContainerActive,\n  ] = useSelector((state) => [\n    selectors.isSnapModeEnabled(state),\n    selectors.isElementDisabled(state, DataElements.STYLE_OPTION),\n    selectors.isElementOpen(state, DataElements.STROKE_STYLE_CONTAINER),\n    selectors.isElementOpen(state, DataElements.FILL_COLOR_CONTAINER),\n    selectors.isElementOpen(state, DataElements.OPACITY_CONTAINER),\n    selectors.isElementOpen(state, DataElements.RICH_TEXT_STYLE_CONTAINER),\n  ]);\n\n  const panelItems = {\n    [DataElements.STROKE_STYLE_CONTAINER]: isStrokeStyleContainerActive,\n    [DataElements.FILL_COLOR_CONTAINER]: isFillColorContainerActive,\n    [DataElements.OPACITY_CONTAINER]: isOpacityContainerActive,\n    [DataElements.RICH_TEXT_STYLE_CONTAINER]: isTextStyleContainerActive,\n  };\n\n  const togglePanelItem = (dataElement) => {\n    if (!panelItems[dataElement]) {\n      dispatch(actions.openElement(dataElement));\n    } else {\n      dispatch(actions.closeElement(dataElement));\n    }\n  };\n  const openTextStyleContainer = () => {\n    dispatch(actions.openElements(DataElements.RICH_TEXT_EDITOR));\n    togglePanelItem(DataElements.RICH_TEXT_STYLE_CONTAINER);\n  };\n  const openStrokeStyleContainer = () => togglePanelItem(DataElements.STROKE_STYLE_CONTAINER);\n  const openFillColorContainer = () => togglePanelItem(DataElements.FILL_COLOR_CONTAINER);\n  const openOpacityContainer = () => togglePanelItem(DataElements.OPACITY_CONTAINER);\n\n  const getSliderProps = (type) => {\n    const { Opacity, StrokeThickness, FontSize } = style;\n\n    const lineStart = circleRadius;\n    switch (type.toLowerCase()) {\n      case 'opacity':\n        if (Opacity === null) {\n          return null;\n        }\n        return {\n          property: 'Opacity',\n          displayProperty: 'opacity',\n          value: Opacity,\n          getDisplayValue: (Opacity) => `${Math.round(Opacity * 100)}%`,\n          dataElement: DataElements.OPACITY_SLIDER,\n          getCirclePosition: (lineLength, Opacity) => Opacity * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => circlePosition,\n          withInputField: true,\n          inputFieldType: 'number',\n          min: 0,\n          max: 100,\n          step: 1,\n          getLocalValue: (opacity) => parseInt(opacity) / 100,\n        };\n      case 'strokethickness':\n        if (StrokeThickness === null) {\n          return null;\n        }\n        return {\n          property: 'StrokeThickness',\n          displayProperty: 'thickness',\n          value: StrokeThickness,\n          getDisplayValue: (strokeThickness) => {\n            const placeOfDecimal =\n              Math.floor(strokeThickness) !== strokeThickness\n                ? strokeThickness?.toString().split('.')[1].length || 0\n                : 0;\n            if (StrokeThickness === 0 || (StrokeThickness >= 1 && (placeOfDecimal > 2 || placeOfDecimal === 0))) {\n              return `${Math.round(strokeThickness)}pt`;\n            }\n            return `${parseFloat(strokeThickness).toFixed(2)}pt`;\n          },\n          dataElement: DataElements.STROKE_THICKNESS_SLIDER,\n          getCirclePosition: (lineLength, strokeThickness) => (strokeThickness / MAX_STROKE_THICKNESS) * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => {\n            if (circlePosition >= 1 / MAX_STROKE_THICKNESS) {\n              return Math.round(circlePosition * MAX_STROKE_THICKNESS);\n            }\n            if (circlePosition >= 0.75 / MAX_STROKE_THICKNESS && circlePosition < 1 / MAX_STROKE_THICKNESS) {\n              return 0.75;\n            }\n            if (circlePosition >= 0.5 / MAX_STROKE_THICKNESS && circlePosition < 0.75 / MAX_STROKE_THICKNESS) {\n              return 0.5;\n            }\n            if (circlePosition >= 0.25 / MAX_STROKE_THICKNESS && circlePosition < 0.5 / MAX_STROKE_THICKNESS) {\n              return 0.25;\n            }\n            if (circlePosition >= 0.08 / MAX_STROKE_THICKNESS && circlePosition < 0.25 / MAX_STROKE_THICKNESS) {\n              return 0.1;\n            }\n            return isFreeText ? 0 : 0.1;\n          },\n          withInputField: true,\n          inputFieldType: 'number',\n          min: isFreeText ? 0 : 0.1,\n          max: MAX_STROKE_THICKNESS,\n          step: 1,\n          getLocalValue: (strokeThickness) => parseFloat(strokeThickness).toFixed(2),\n        };\n      case 'fontsize':\n        if (FontSize === null) {\n          return null;\n        }\n        return {\n          property: 'FontSize',\n          displayProperty: 'text',\n          value: FontSize,\n          getDisplayValue: (FontSize) => `${Math.round(parseInt(FontSize, 10))}pt`,\n          dataElement: DataElements.FONT_SIZE_SLIDER,\n          getCirclePosition: (lineLength, FontSize) => ((parseInt(FontSize, 10) - 5) / 40) * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => `${circlePosition * 40 + 5}pt`,\n          min: 5,\n          max: 45,\n          step: 1,\n          withInputField: true,\n          inputFieldType: 'number',\n          getLocalValue: (FontSize) => `${parseFloat(FontSize).toFixed(2)}pt`,\n        };\n    }\n  };\n\n  const renderSlider = (property, shouldHideSliderTitle) => {\n    const sliderProps = getSliderProps(property);\n    if (!sliderProps) {\n      return null;\n    }\n    return (\n      <Slider\n        key={property}\n        {...sliderProps}\n        onStyleChange={onSliderChange}\n        onSliderChange={onSliderChange}\n        shouldHideSliderTitle={shouldHideSliderTitle}\n      />\n    );\n  };\n\n  const renderDivider = () => {\n    if (showFillColorAndCollapsablePanelSections) {\n      return <div className=\"divider\" />;\n    }\n  };\n\n  const onOpenProps = useOnFreeTextEdit(saveEditorInstance);\n  const textSizeSlider = (isTextStylePickerHidden) ? <div className=\"StyleOption text-size-slider\">{renderSlider('fontsize')}</div> : null;\n  const strokethicknessComponent = renderSlider('strokethickness');\n\n  return (\n    <div\n      className=\"StylePicker\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart' && e.target.tagName.toUpperCase() !== 'INPUT') {\n          e.preventDefault();\n        }\n      }}\n    >\n      {showTextStyle && (\n        <div className=\"PanelSection TextStyle\">\n          <div\n            className=\"collapsible-menu\"\n            onClick={openTextStyleContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openTextStyleContainer()}\n            role={'toolbar'}\n          >\n            <div\n              className=\"menu-title\">{t(stylePanelSectionTitles(activeTool, 'OverlayText') || 'option.stylePopup.textStyle')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isTextStyleContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isTextStyleContainerActive && isRedaction && (\n            <div className=\"PanelSubsection RedactionTextLabel\">\n              <div className=\"menu-subtitle\">{t('stylePanel.headings.redactionTextLabel')}</div>\n              <LabelTextEditor properties={style} onPropertyChange={onStyleChange} placeholderText={t('stylePanel.headings.redactionTextPlaceholder')} />\n            </div>\n          )}\n          {isTextStyleContainerActive && (\n            <RichTextStyleEditor\n              style={style}\n              {...onOpenProps}\n              property={'TextColor'}\n              colorMapKey={'freeText'}\n              isFreeTextAutoSize={isFreeTextAutoSize}\n              onFreeTextSizeToggle={onFreeTextSizeToggle}\n              onPropertyChange={onStyleChange}\n              onRichTextStyleChange={handleRichTextStyleChange}\n              isRichTextEditMode={isRichTextEditMode}\n              setIsRichTextEditMode={setIsRichTextEditMode}\n              isRedaction={isRedaction}\n              activeTool={activeTool}\n              isTextStylePickerHidden={isTextStylePickerHidden}\n              textSizeSliderComponent={textSizeSlider}\n            />\n          )}\n          {renderDivider()}\n        </div>\n      )}\n\n      {!hideStrokeStyle && (\n        <div className=\"PanelSection\">\n          {showFillColorAndCollapsablePanelSections && (\n            <div\n              className=\"collapsible-menu StrokeColorPicker\"\n              onClick={openStrokeStyleContainer}\n              tabIndex={0}\n              onKeyDown={(e) => e.key === 'Enter' && openStrokeStyleContainer()}\n              role={'toolbar'}\n            >\n              <div className=\"menu-title\">\n                {t(stylePanelSectionTitles(activeTool, 'StrokeColor') || 'option.annotationColor.StrokeColor')}\n              </div>\n              <div className=\"icon-container\">\n                <Icon glyph={`icon-chevron-${isStrokeStyleContainerActive ? 'up' : 'down'}`} />\n              </div>\n            </div>\n          )}\n          {(isStrokeStyleContainerActive || !showFillColorAndCollapsablePanelSections) && !isStamp && (\n            <>\n              <div className=\"menu-items\">\n                <ColorPicker onColorChange={onStrokeColorChange} onStyleChange={onStyleChange} color={strokeColor}\n                  activeTool={activeTool} type={'Stroke'}/>\n              </div>\n              {!hideStrokeSlider && strokethicknessComponent && (strokethicknessComponent)}\n              {/*\n                When showLineStyleOptions is true, we want to show the opacity slider together with the stroke slider\n              */}\n              {showLineStyleOptions && <div className=\"StyleOption\">{renderSlider('opacity')}</div>}\n              {!!strokeStyle && !(isInFormFieldCreationMode && !isFreeText) && !isFreeHand && !isArc && (\n                <div className=\"StyleOption\">\n                  <div className=\"styles-container lineStyleContainer\">\n                    <div className=\"styles-title\">Style</div>\n                    <div className=\"StylePicker-LineStyle\">\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-StartLineStyleDropdown\"\n                          dataElement=\"startLineStyleDropdown\"\n                          images={defaultStartLineStyles}\n                          onClickItem={onStartLineStyleChange}\n                          currentSelectionKey={startingLineStyle}\n                        />\n                      )}\n                      {!isStyleOptionDisabled && (\n                        <Dropdown\n                          className={`StylePicker-StrokeLineStyleDropdown${\n                            !!strokeStyle && !showLineStyleOptions ? ' StyleOptions' : ''\n                          }`}\n                          dataElement=\"middleLineStyleDropdown\"\n                          images={isEllipse || showLineStyleOptions ? defaultStrokeStyles : withCloudyStyle}\n                          onClickItem={onStrokeStyleChange}\n                          currentSelectionKey={strokeLineStyle}\n                        />\n                      )}\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-EndLineStyleDropdown\"\n                          dataElement=\"endLineStyleDropdown\"\n                          images={defaultEndLineStyles}\n                          onClickItem={onEndLineStyleChange}\n                          currentSelectionKey={endingLineStyle}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n          {renderDivider()}\n        </div>\n      )}\n      {hideStrokeStyle && !hideStrokeSlider && strokethicknessComponent && (strokethicknessComponent)}\n      {showFillColorAndCollapsablePanelSections && !hideFillColorAndCollapsablePanelSections && (\n        <div className=\"PanelSection\">\n          <div\n            className=\"collapsible-menu FillColorPicker\"\n            onClick={openFillColorContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openFillColorContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">\n              {t(stylePanelSectionTitles(activeTool, 'FillColor') || 'option.annotationColor.FillColor')}\n            </div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isFillColorContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isFillColorContainerActive && (\n            <div className=\"menu-items\">\n              <ColorPicker\n                onColorChange={onFillColorChange}\n                onStyleChange={onStyleChange}\n                color={fillColor}\n                hasTransparentColor={!shouldHideTransparentFillColor(activeTool)}\n                activeTool={activeTool}\n                type={'Fill'}\n              />\n            </div>\n          )}\n          {!shouldHideOpacitySlider(activeTool) && renderDivider()}\n        </div>\n      )}\n\n      <div className=\"PanelSection\">\n        {showFillColorAndCollapsablePanelSections && !shouldHideOpacitySlider(activeTool) && (\n          <div\n            className=\"collapsible-menu StrokeColorPicker\"\n            onClick={openOpacityContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openOpacityContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">{t('option.slider.opacity')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isOpacityContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n        )}\n        {/*\n          If showLineStyleOptions is true, then we don't want to show the opacity slider\n          in the bottom because it is already shown before together with the stroke slider\n        */}\n        {!showLineStyleOptions && !shouldHideOpacitySlider(activeTool) && (isOpacityContainerActive || !showFillColorAndCollapsablePanelSections) && (\n          <div className=\"StyleOption\">{renderSlider('opacity', showFillColorAndCollapsablePanelSections)}</div>\n        )}\n        {showSnapModeCheckbox && renderDivider()}\n      </div>\n      {showSnapModeCheckbox && (\n        <>\n          {/* to avoid inline styling when there's no divider */}\n          {!showFillColorAndCollapsablePanelSections && <div className=\"spacer\" />}\n          <div className=\"PanelSection\">\n            <SnapModeToggle Scale={style.Scale} Precision={style.Precision} isSnapModeEnabled={isSnapModeEnabled} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nStylePicker.propTypes = propTypes;\n\nexport default StylePicker;","import StylePicker from './StylePicker';\n\nexport default StylePicker;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport selectors from 'selectors';\nimport Icon from 'components/Icon';\nimport StylePicker from 'components/StylePicker';\nimport getAnnotationCreateToolNames from 'helpers/getAnnotationCreateToolNames';\nimport { hexToRGBA } from 'helpers/color';\nimport getToolStyles from 'helpers/getToolStyles';\nimport setToolStyles from 'helpers/setToolStyles';\nimport adjustFreeTextBoundingBox from 'helpers/adjustFreeTextBoundingBox';\nimport core from 'core';\nimport { getDataWithKey, mapToolNameToKey } from 'constants/map';\nimport handleFreeTextAutoSizeToggle from 'helpers/handleFreeTextAutoSizeToggle';\nimport getTextDecoration from 'helpers/getTextDecoration';\nimport {\n  shouldHideStylePanelOptions,\n  extractUniqueFontFamilies,\n  stylePanelSectionTitles,\n  shouldHideTextStylePicker\n} from 'helpers/stylePanelHelper';\nimport defaultTool from 'constants/defaultTool';\n\nconst { ToolNames } = window.Core.Tools;\nconst { Annotations } = window.Core;\n\n\nconst StylePanel = () => {\n  const [t] = useTranslation();\n\n  const [\n    isPanelOpen,\n    toolButtonObject,\n    isAnnotationToolStyleSyncingEnabled,\n    activeDocumentViewerKey,\n  ] = useSelector((state) => [\n    selectors.isElementOpen(state, 'stylePanel'),\n    selectors.getToolButtonObjects(state),\n    selectors.isAnnotationToolStyleSyncingEnabled(state),\n    selectors.getActiveDocumentViewerKey(state),\n  ]);\n\n\n  const currentTool = core.getToolMode();\n  const currentToolName = currentTool?.name;\n  const colorProperties = ['StrokeColor', 'FillColor'];\n  const [showStyles, setShowStyles] = useState(false);\n  const [noToolStyle, setNoToolStyle] = useState(shouldHideStylePanelOptions(currentToolName));\n  const [isEllipse, setIsEllipse] = useState(false);\n  const [isFreeText, setIsFreeText] = useState(false);\n  const [isRedaction, setIsRedaction] = useState(currentToolName === ToolNames.REDACTION);\n  const [isTextStylePickerHidden, setIsTextStylePickerHidden] = useState(currentToolName === defaultTool ? false : shouldHideTextStylePicker(currentToolName));\n  const [isFreeHand, setIsFreeHand] = useState(false);\n  const [isArc, setIsArc] = useState(false);\n  const [isStamp, setIsStamp] = useState(false);\n  const [isInFormFieldCreationMode, setIsInFormFieldCreationMode] = useState(false);\n  const [style, setStyle] = useState({});\n  const [startLineStyle, setStartLineStyle] = useState();\n  const [endLineStyle, setEndLineStyle] = useState();\n  const [strokeStyle, setStrokeStyle] = useState();\n  const [panelTitle, setPanelTitle] = useState(t('stylePanel.headings.styles'));\n  const annotationCreateToolNames = getAnnotationCreateToolNames();\n  const [showLineStyleOptions, setShowLineStyleOptions] = useState(currentToolName === defaultTool ? false : getDataWithKey(mapToolNameToKey(currentToolName)).hasLineEndings);\n  const [isAutoSizeFont, setIsAutoSizeFont] = useState(style.isAutoSizeFont);\n  const [activeTool, setActiveTool] = useState(currentToolName || 'Edit');\n  const [editorInstance, setEditorInstance] = useState(null);\n\n\n  useEffect(() => {\n    if (currentTool?.name === 'AnnotationCreateRubberStamp') {\n      core.setToolMode(defaultTool);\n    }\n  }, [currentTool]);\n\n  const getStrokeStyle = (annot) => {\n    const style = annot['Style'];\n    const dashes = annot['Dashes'];\n    if (style !== 'dash') {\n      return style;\n    }\n    return `${style},${dashes}`;\n  };\n\n  const getPanelTitleOnAnnotationSelected = (annot) => {\n    if (annot.isContentEditPlaceholder()) {\n      setPanelTitle(`${t('stylePanel.headings.contentEdit')} ${t('stylePanel.headings.annotation')}`);\n      setNoToolStyle(true);\n      return;\n    }\n    setPanelTitle(`${t(stylePanelSectionTitles(annot.ToolName, 'Title') || toolButtonObject[annot.ToolName].title)} ${t('stylePanel.headings.annotation')}`);\n  };\n\n  const setPanelTitleForSelectedTool = (tool) => {\n    const toolName = tool.name;\n    const title = toolButtonObject[toolName].title;\n    setPanelTitle(`${t(stylePanelSectionTitles(toolName, 'Title') || title)} ${t('stylePanel.headings.tool')}`);\n  };\n\n  const updateStylePanelProps = (annot) => {\n    const extraStyles = {};\n\n    if (annot instanceof Annotations.FreeTextAnnotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annot['Style'] === 'dash')\n          ? `${annot['Style']},${annot['Dashes']}`\n          : annot['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      extraStyles['TextColor'] = annot.TextColor;\n      extraStyles['RichTextStyle'] = annot.getRichTextStyle();\n      extraStyles['Font'] = annot.Font;\n      extraStyles['FontSize'] = annot.FontSize;\n      extraStyles['TextAlign'] = annot.TextAlign;\n      extraStyles['TextVerticalAlign'] = annot.TextVerticalAlign;\n      extraStyles['calculatedFontSize'] = annot.getCalculatedFontSize();\n      extraStyles['StrokeStyle'] = StrokeStyle;\n      extraStyles['isAutoSizeFont'] = annot.isAutoSizeFont();\n      setIsAutoSizeFont(annot.isAutoSizeFont());\n\n      const { fonts, sizes } = extractUniqueFontFamilies(extraStyles['RichTextStyle'], annot.getContents());\n      if (fonts.length >= 2 || (fonts.length === 1 && fonts[0] !== extraStyles['Font'])) {\n        extraStyles['Font'] = undefined;\n      }\n      if (sizes.length >= 2 || (sizes.length === 1 && sizes[0] !== extraStyles['FontSize'])) {\n        extraStyles['FontSize'] = undefined;\n      }\n    }\n\n    if (annot instanceof Annotations.RedactionAnnotation) {\n      extraStyles['OverlayText'] = annot.OverlayText;\n      extraStyles['Font'] = annot.Font;\n      extraStyles['FontSize'] = annot.FontSize;\n      extraStyles['TextAlign'] = annot.TextAlign;\n    }\n\n    if (annot instanceof Annotations.RectangleAnnotation && annot.isFormFieldPlaceholder() && annot.FontSize !== undefined) {\n      extraStyles.FontSize = annot.FontSize;\n    }\n\n    setStyle({\n      ...style,\n      StrokeColor: annot.StrokeColor,\n      StrokeThickness: annot.StrokeThickness,\n      Opacity: annot.Opacity,\n      FillColor: annot.FillColor,\n      ...extraStyles,\n    });\n    setStartLineStyle(annot.getStartStyle ? annot.getStartStyle() : 'None');\n    setEndLineStyle(annot.getEndStyle ? annot.getEndStyle() : 'None');\n    setStrokeStyle(getStrokeStyle(annot));\n  };\n\n  useEffect(() => {\n    const handleToolModeChange = (newTool) => {\n      if (annotationCreateToolNames.includes(newTool?.name)) {\n        if (!panelTitle) {\n          setShowStyles(false);\n        } else {\n          if (shouldHideStylePanelOptions(newTool?.name)) {\n            setNoToolStyle(true);\n            setShowStyles(true);\n            setPanelTitleForSelectedTool(newTool);\n            return;\n          }\n\n          setNoToolStyle(false);\n          setActiveTool(newTool.name);\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(newTool.name)).hasLineEndings);\n          setIsEllipse(newTool.name === ToolNames.ELLIPSE);\n          setIsFreeText(newTool.name === ToolNames.FREETEXT);\n          setIsRedaction(newTool.name === ToolNames.REDACTION);\n\n          setIsTextStylePickerHidden(shouldHideTextStylePicker(newTool.name));\n\n          setIsFreeHand(\n            newTool.name === ToolNames.FREEHAND ||\n            newTool.name === ToolNames.FREEHAND_HIGHLIGHT,\n          );\n          setIsArc(newTool.name === ToolNames.ARC);\n          setIsStamp(newTool.name === ToolNames.STAMP);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          const toolStyles = getToolStyles(newTool.name);\n\n          if (newTool.name.includes('FreeText') || newTool.name.includes('Callout')) {\n            toolStyles['isAutoSizeFont'] = newTool['defaults']['isAutoSizeFont'];\n            setIsAutoSizeFont(newTool['defaults']['isAutoSizeFont']);\n          }\n\n          setStyle(toolStyles);\n          setStartLineStyle(toolStyles.StartLineStyle);\n          setStrokeStyle(toolStyles.StrokeStyle);\n          setEndLineStyle(toolStyles.EndLineStyle);\n          setShowStyles(true);\n          setPanelTitleForSelectedTool(newTool);\n        }\n      } else {\n        setShowStyles(false);\n      }\n    };\n    const onAnnotationSelected = (annotations, action) => {\n      if (action === 'selected') {\n        setShowStyles(true);\n        if (annotations.length === 1) {\n          getPanelTitleOnAnnotationSelected(annotations[0]);\n          if (shouldHideStylePanelOptions(annotations[0].ToolName)) {\n            setNoToolStyle(true);\n            return;\n          }\n          setNoToolStyle(false);\n          setActiveTool(annotations[0].ToolName);\n          setIsEllipse(annotations[0] instanceof Annotations.EllipseAnnotation);\n          setIsFreeText(annotations[0] instanceof Annotations.FreeTextAnnotation);\n          setIsRedaction(annotations[0] instanceof Annotations.RedactionAnnotation);\n          setIsTextStylePickerHidden(shouldHideTextStylePicker(annotations[0].ToolName));\n          setIsFreeHand(annotations[0] instanceof Annotations.FreeHandAnnotation);\n          setIsArc(annotations[0] instanceof Annotations.ArcAnnotation);\n          setIsStamp(annotations[0] instanceof Annotations.StampAnnotation);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(annotations[0].ToolName)).hasLineEndings);\n          updateStylePanelProps(annotations[0]);\n        } else {\n          setPanelTitle(`${t('stylePanel.headings.annotations')} (${annotations.length})`);\n          annotations.forEach((annot) => {\n            updateStylePanelProps(annot);\n          });\n        }\n      } else if (action === 'deselected') {\n        const currentTool = core.getToolMode();\n        if (currentTool instanceof window.Core.Tools.AnnotationEditTool) {\n          setShowStyles(false);\n        }\n        handleToolModeChange(currentTool);\n        // reset tool mode to change the tool name in the header\n        core.setToolMode(currentTool.name);\n      }\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationSelected);\n    core.addEventListener('toolModeUpdated', handleToolModeChange);\n    return () => {\n      core.removeEventListener('annotationSelected', onAnnotationSelected);\n      core.removeEventListener('toolModeUpdated', handleToolModeChange);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isPanelOpen) {\n      const selectedAnnotations = core.getSelectedAnnotations();\n      if (selectedAnnotations.length === 1) {\n        setShowStyles(true);\n        const annot = selectedAnnotations[0];\n        updateStylePanelProps(annot);\n        getPanelTitleOnAnnotationSelected(annot);\n      } else if (selectedAnnotations.length > 1) {\n        setShowStyles(true);\n        setPanelTitle(`${t('stylePanel.headings.annotations')} (${selectedAnnotations.length})`);\n        selectedAnnotations.forEach((annot) => {\n          updateStylePanelProps(annot);\n        });\n      } else {\n        const currentTool = core.getToolMode();\n        if (currentTool && currentTool.name !== defaultTool) {\n          setShowStyles(true);\n          const toolStyles = getToolStyles(currentTool.name);\n          if (toolStyles) {\n            setStyle(toolStyles);\n            setStartLineStyle(toolStyles.StartLineStyle);\n            setEndLineStyle(toolStyles.EndLineStyle);\n            setStrokeStyle(toolStyles.StrokeStyle);\n          }\n          setPanelTitleForSelectedTool(currentTool);\n        }\n      }\n    }\n  }, [isPanelOpen, isAutoSizeFont]);\n\n  const onStyleChange = (property, value) => {\n    const newStyle = { ...style };\n    newStyle[property] = value;\n    setStyle(newStyle);\n    const annotationsToUpdate = core.getSelectedAnnotations();\n\n    // Newly created freetext is not saved in annotationManager yet, so getSelectedAnnotations\n    // will return empty array, but editor has focus and an annotation\n    if (annotationsToUpdate.length === 0 && editorInstance && property === 'FillColor') {\n      const editor = editorInstance[0];\n      if (editor?.hasFocus()) {\n        const annot = editorInstance[1];\n        editor.setStyle({ background: value });\n        annot['FillColor'] = new Annotations.Color(value);\n        return;\n      }\n    }\n\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          annot[property] = color;\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, color);\n          }\n        } else {\n          annot[property] = value;\n          if (annot instanceof Annotations.FreeTextAnnotation) {\n            if (property === 'FontSize' || property === 'Font' || property === 'StrokeThickness') {\n              adjustFreeTextBoundingBox(annot);\n            }\n          }\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, value);\n          }\n        }\n\n        core.getAnnotationManager().redrawAnnotation(annot);\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          setToolStyles(currentTool.name, property, color);\n        } else if (property === 'Opacity') {\n          setToolStyles(currentTool.name, 'Opacity', value);\n        } else if (property === 'StrokeThickness') {\n          setToolStyles(currentTool.name, 'StrokeThickness', value);\n        } else {\n          setToolStyles(currentTool.name, property, value);\n        }\n      }\n    }\n  };\n\n  const onLineStyleChange = (section, value) => {\n    const sectionPropertyMap = {\n      start: 'StartLineStyle',\n      middle: 'StrokeStyle',\n      end: 'EndLineStyle',\n    };\n    if (section === 'start') {\n      setStartLineStyle(value);\n    } else if (section === 'middle') {\n      setStrokeStyle(value);\n    } else if (section === 'end') {\n      setEndLineStyle(value);\n    }\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (section === 'start') {\n          annot.setStartStyle(value);\n        } else if (section === 'middle') {\n          const dashes = value.split(',');\n          const lineStyle = dashes.shift();\n          annot.Style = lineStyle;\n          annot.Dashes = dashes;\n        } else if (section === 'end') {\n          annot.setEndStyle(value);\n        }\n        core.getAnnotationManager().redrawAnnotation(annot);\n        if (isAnnotationToolStyleSyncingEnabled) {\n          setToolStyles(annot.ToolName, sectionPropertyMap[section], value);\n        }\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, sectionPropertyMap[section], value);\n      }\n    }\n  };\n  const handleAutoSize = () => {\n    const annotationsToUpdate = core.getSelectedAnnotations()[0];\n    if (annotationsToUpdate) {\n      handleFreeTextAutoSizeToggle(annotationsToUpdate, setIsAutoSizeFont, isAutoSizeFont);\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, 'isAutoSizeFont', !style.isAutoSizeFont);\n        setIsAutoSizeFont(!isAutoSizeFont);\n      }\n    }\n  };\n\n  const noToolSelected = (\n    <>\n      <div className='style-panel-header'>\n        {t('stylePanel.headings.styles')}\n      </div>\n      <div className=\"no-tool-selected\">\n        <div>\n          <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n        </div>\n        <div className=\"msg\">{t('stylePanel.noToolSelected')}</div>\n      </div>\n    </>\n  );\n\n  const handleRichTextStyleChange = (property, value) => {\n    const originalProperty = property;\n    const originalValue = value;\n    const activeToolRichTextStyle = style['RichTextStyle']?.[0];\n    if (property === 'underline' || property === 'line-through') {\n      value = getTextDecoration({ [property]: value }, activeToolRichTextStyle);\n      property = 'text-decoration';\n    }\n    const richTextStyle = {\n      0: {\n        ...activeToolRichTextStyle,\n        [property]: value,\n      }\n    };\n\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annotation) => {\n        core.updateAnnotationRichTextStyle(annotation, { [originalProperty]: originalValue }, activeDocumentViewerKey);\n      });\n      setStyle({ ...style, 'RichTextStyle': richTextStyle });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (typeof currentTool.complete === 'function') {\n          currentTool.complete();\n        }\n        setToolStyles(currentTool.name, 'RichTextStyle', richTextStyle);\n      }\n    }\n  };\n\n  return !showStyles ? (\n    noToolSelected\n  ) : (\n    <>\n      <div className=\"style-panel-header\">{panelTitle}</div>\n      {noToolStyle ? (\n        <div className=\"no-tool-selected\">\n          <div>\n            <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n          </div>\n          <div className=\"msg\">{t('stylePanel.noToolStyle')}</div>\n        </div>\n      ) : (\n        <StylePicker\n          sliderProperties={['Opacity', 'StrokeThickness']}\n          style={style}\n          onStyleChange={onStyleChange}\n          isFreeText={isFreeText}\n          isEllipse={isEllipse}\n          isRedaction={isRedaction}\n          isTextStylePickerHidden={isTextStylePickerHidden}\n          isFreeHand={isFreeHand}\n          isArc={isArc}\n          isStamp={isStamp}\n          isInFormFieldCreationMode={isInFormFieldCreationMode}\n          showLineStyleOptions={showLineStyleOptions}\n          startLineStyle={startLineStyle}\n          endLineStyle={endLineStyle}\n          strokeStyle={strokeStyle}\n          onLineStyleChange={onLineStyleChange}\n          onFreeTextSizeToggle={handleAutoSize}\n          isFreeTextAutoSize={isAutoSizeFont}\n          handleRichTextStyleChange={handleRichTextStyleChange}\n          activeTool={activeTool}\n          saveEditorInstance={setEditorInstance}\n        />\n      )}\n    </>\n  );\n};\n\nexport default StylePanel;","import React from 'react';\nimport StylePanel from './StylePanel';\nimport DataElementWrapper from '../DataElementWrapper';\nimport './StylePanel.scss';\n\nconst StylePanelContainer = () => {\n  return (\n    <DataElementWrapper dataElement=\"stylePanel\" className=\"Panel StylePanel\">\n      <StylePanel />\n    </DataElementWrapper>\n  );\n};\n\nexport default StylePanelContainer;","import StylePanelContainer from './StylePanelContainer';\n\nexport default StylePanelContainer;"],"sourceRoot":""}